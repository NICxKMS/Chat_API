{"version":3,"file":"static/js/vendor.refractor-fc1e4540.2352c82bc4.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/refractor/lang/hoon.js","../node_modules/refractor/lang/inform7.js","../node_modules/refractor/lang/hpkp.js","../node_modules/refractor/lang/io.js","../node_modules/refractor/lang/ignore.js","../node_modules/refractor/lang/idris.js","../node_modules/refractor/lang/iecst.js","../node_modules/refractor/lang/hlsl.js","../node_modules/refractor/lang/ichigojam.js","../node_modules/refractor/lang/http.js","../node_modules/refractor/lang/j.js","../node_modules/refractor/lang/ini.js","../node_modules/refractor/lang/hsts.js","../node_modules/refractor/lang/icu-message-format.js","../node_modules/refractor/lang/icon.js"],"sourcesContent":["'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            } // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = ignore\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\nfunction ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","'use strict'\n\nmodule.exports = iecst\niecst.displayName = 'iecst'\niecst.aliases = []\nfunction iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' + // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = icuMessageFormat\nicuMessageFormat.displayName = 'icuMessageFormat'\nicuMessageFormat.aliases = []\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n"],"names":["hoon","Prism","languages","comment","pattern","greedy","string","constant","function","keyword","module","exports","displayName","aliases","inform7","inside","substitution","delimiter","alias","title","number","lookbehind","verb","property","position","type","punctuation","rest","text","hpkp","directive","operator","io","builtin","boolean","ignore","entry","regex","gitignore","hgignore","npmignore","refractorHaskell","require","idris","register","extend","undefined","insertBefore","idr","iecst","address","refractorC","hlsl","c","ichigojam","label","http","headerValueOf","name","RegExp","method","uri","header","source","csp","hsts","options","langs","httpLanguages","javascript","json","xml","html","css","plain","suffixTypes","getSuffixPattern","contentType","suffix","replace","j","adverb","conjunction","ini","section","key","value","icuMessageFormat","nested","level","stringPattern","escape","argumentSource","nestedMessage","message","argument","content","range","offset","selector","icon"],"sourceRoot":""}