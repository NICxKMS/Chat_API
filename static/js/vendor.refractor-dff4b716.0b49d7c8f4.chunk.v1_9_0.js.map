{"version":3,"file":"static/js/vendor.refractor-dff4b716.0b49d7c8f4.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/refractor/lang/n4js.js","../node_modules/refractor/lang/nix.js","../node_modules/refractor/lang/nasm.js","../node_modules/refractor/lang/nim.js","../node_modules/refractor/lang/nevod.js","../node_modules/refractor/lang/nsis.js","../node_modules/refractor/lang/nginx.js","../node_modules/refractor/lang/nand2tetris-hdl.js","../node_modules/refractor/lang/naniscript.js","../node_modules/refractor/lang/n1ql.js","../node_modules/refractor/lang/neon.js"],"sourcesContent":["'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: null // see below\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'important'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|DEFAULT|FLOAT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = nim\nnim.displayName = 'nim'\nnim.aliases = []\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      pattern:\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n      greedy: true\n    },\n    char: {\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators (and anything really) inside backticks\n    identifier: {\n      pattern: /`[^`\\r\\n]+`/,\n      greedy: true,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","'use strict'\n\nmodule.exports = nsis\nnsis.displayName = 'nsis'\nnsis.aliases = []\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n    variable: /\\$\\w[\\w\\.]*/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nand2tetrisHdl\nnand2tetrisHdl.displayName = 'nand2tetrisHdl'\nnand2tetrisHdl.aliases = []\nfunction nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = naniscript\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = []\nfunction naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = n1ql\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\nfunction n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","'use strict'\n\nmodule.exports = neon\nneon.displayName = 'neon'\nneon.aliases = []\nfunction neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n"],"names":["n4js","Prism","languages","extend","keyword","insertBefore","annotation","pattern","alias","n4jsd","module","exports","displayName","aliases","nix","comment","greedy","string","inside","interpolation","lookbehind","url","antiquotation","number","function","boolean","operator","punctuation","nasm","label","register","nim","char","identifier","nevod","namespace","fields","search","quantifier","colon","name","nsis","property","constant","variable","important","nginx","directive","escape","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","token","Array","isArray","map","join","content","define","value","key","command","expression","nani","hooks","add","env","tokens","forEach","type","input","brackets","stack","i","length","bracket","bracketsIndex","indexOf","push","pop","isBracketsBalanced","n1ql","parameter","neon","datetime","null","literal"],"sourceRoot":""}