{"version":3,"file":"static/js/vendor.refractor-bedfbe6f.c615243514.chunk.v1_8_8.js","mappings":"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","sources":["../node_modules/refractor/lang/qsharp.js","../node_modules/refractor/lang/q.js","../node_modules/refractor/lang/rest.js","../node_modules/refractor/lang/r.js","../node_modules/refractor/lang/rego.js","../node_modules/refractor/lang/rip.js","../node_modules/refractor/lang/regex.js","../node_modules/refractor/lang/qml.js","../node_modules/refractor/lang/reason.js","../node_modules/refractor/lang/renpy.js","../node_modules/refractor/lang/racket.js","../node_modules/refractor/lang/qore.js"],"sourcesContent":["'use strict'\n\nmodule.exports = qsharp\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\nfunction qsharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    ) // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    }) // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","'use strict'\n\nmodule.exports = rego\nrego.displayName = 'rego'\nrego.aliases = []\nfunction rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","'use strict'\n\nmodule.exports = regex\nregex.displayName = 'regex'\nregex.aliases = []\nfunction regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = qml\nqml.displayName = 'qml'\nqml.aliases = []\nfunction qml(Prism) {\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","'use strict'\n\nmodule.exports = renpy\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n    keyword:\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = racket\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\nfunction racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n"],"names":["qsharp","Prism","replace","pattern","replacements","m","index","re","flags","RegExp","keywords","trim","qualifiedName","source","typeInside","keyword","punctuation","regularString","languages","extend","comment","string","lookbehind","greedy","inside","number","operator","insertBefore","range","alias","interpolationExpr","depthLog2","i","nested","interpolation","expression","qs","module","exports","displayName","aliases","q","symbol","datetime","adverb","verb","rest","table","substitution","directive","title","important","hr","field","inline","bold","italic","role","link","r","boolean","ellipsis","rego","property","function","namespace","rip","char","regex","builtin","date","time","reference","specialEscape","escape","rangeChar","groupName","backreference","anchor","group","quantifier","alternation","qml","jsString","jsComment","jsExpr","javascript","reason","constructor","label","renpy","tag","rpy","refractorScheme","require","racket","register","lang","rkt","qore","variable"],"sourceRoot":""}