{"version":3,"file":"static/js/vendor-refractor-6880b3ce.c25d900997.chunk.v1_9_5.js","mappings":"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","sources":["../node_modules/refractor/lang/javastacktrace.js","../node_modules/refractor/lang/javascript.js","../node_modules/refractor/lang/javadoclike.js","../node_modules/refractor/lang/javadoc.js"],"sourcesContent":["'use strict'\n\nmodule.exports = javastacktrace\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\nfunction javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (ยง3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          }, // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' + // constant\n          (/NaN|Infinity/.source +\n            '|' + // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' + // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' + // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' + // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' + // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern:\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript') // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n"],"names":["javastacktrace","Prism","languages","summary","pattern","lookbehind","inside","keyword","string","exceptions","namespace","punctuation","message","alias","source","file","function","module","version","more","number","exports","displayName","aliases","javascript","extend","clike","RegExp","operator","insertBefore","regex","greedy","parameter","constant","hashbang","interpolation","rest","markup","tag","addInlined","addAttribute","js","javadoclike","javaDocLike","Object","defineProperty","value","docLanguage","forEach","lang","callback","tokenName","grammar","token","definition","Array","isArray","i","l","length","docCommentSupport","addSupport","refractorJava","require","refractorJavadoclike","javadoc","register","codeLinePattern","memberReference","reference","replace","field","java","code","line","entity"],"sourceRoot":""}