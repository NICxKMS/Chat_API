{"version":3,"file":"static/js/layout-sidebar.2c3af79e8a.chunk.v1_9_7.js","mappings":"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","sources":["webpack://ai-chat-interface/./src/components/layout/Sidebar/Sidebar.module.css?68f1","components/layout/Sidebar/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Sidebar\":\"Sidebar_Sidebar__wYItZ\",\"Sidebar__header\":\"Sidebar_Sidebar__header__SvB0z\",\"Sidebar__headerControls\":\"Sidebar_Sidebar__headerControls__cOvbi\",\"Sidebar__title\":\"Sidebar_Sidebar__title__WsPxq\",\"modelContainer\":\"Sidebar_modelContainer__qQObn\",\"Sidebar__footer\":\"Sidebar_Sidebar__footer__gTr3u\",\"Sidebar__userProfile\":\"Sidebar_Sidebar__userProfile__ngpSp\",\"Sidebar__userAvatar\":\"Sidebar_Sidebar__userAvatar__VAS9j\",\"Sidebar__userInitial\":\"Sidebar_Sidebar__userInitial__AT6IW\",\"Sidebar__userName\":\"Sidebar_Sidebar__userName__3JHrF\",\"footerPlaceholderText\":\"Sidebar_footerPlaceholderText__2xSEd\",\"statusPlaceholder\":\"Sidebar_statusPlaceholder__0yI5V\",\"pulse\":\"Sidebar_pulse__vFe35\",\"modelPlaceholder\":\"Sidebar_modelPlaceholder__2AYg1\",\"themePlaceholder\":\"Sidebar_themePlaceholder__z9BQC\",\"compactSidebar\":\"Sidebar_compactSidebar__kgeAB\",\"Sidebar__iconButton\":\"Sidebar_Sidebar__iconButton__p6vzV\",\"Sidebar__iconButton--newChat\":\"Sidebar_Sidebar__iconButton--newChat__wKGwt\",\"Sidebar__iconButton--settings\":\"Sidebar_Sidebar__iconButton--settings__mdUVP\",\"newChatButton\":\"Sidebar_newChatButton__sObpy\",\"Sidebar__chatListContainer\":\"Sidebar_Sidebar__chatListContainer__+ZX5V\",\"Sidebar__sessionList\":\"Sidebar_Sidebar__sessionList__Y1TpG\",\"Sidebar__sessionItem\":\"Sidebar_Sidebar__sessionItem__0o3SK\",\"Sidebar__sessionButton\":\"Sidebar_Sidebar__sessionButton__pza9N\",\"Sidebar__sessionTitle\":\"Sidebar_Sidebar__sessionTitle__3eOBZ\",\"Sidebar__sessionTimestamp\":\"Sidebar_Sidebar__sessionTimestamp__9HX1b\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusIcon, GearIcon, ChevronLeftIcon } from '@primer/octicons-react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useChatControl } from '../../../contexts/ChatControlContext';\nimport { useProfilePicture } from '../../../hooks/useProfilePicture';\nimport Spinner from '../../common/Spinner';\nimport styles from './Sidebar.module.css';\n// Remove unused icons if PlusIcon/GearIcon only used for floating buttons\n// import { GearIcon, PlusIcon } from '@primer/octicons-react'; \n\n// Remove imports for components moved out\n// const ThemeToggle = lazy(() => import('../../common/ThemeToggle'));\n// const ApiStatus = lazy(() => import('../../common/ApiStatus'));\n\n// Sample data (keep for now)\nconst sampleSessions = [\n  { id: 'session-1', title: 'LLM Explanation Chat', timestamp: '2 hours ago' },\n  { id: 'session-2', title: 'React Component Refactoring', timestamp: 'Yesterday' },\n  { id: 'session-3', title: 'CSS Grid Layout Ideas', timestamp: 'Mar 30' },\n  { id: 'session-4', title: 'Python Script Debugging', timestamp: 'Mar 28' },\n];\n\n/**\n * Sidebar component containing app controls and chat session list\n * @param {Object} props - Component props\n * @param {string} [props.className] - Additional CSS class\n * @param {Function} [props.onToggleSettings] - Handler for settings button click\n * @param {Function} [props.onToggleSidebar] - Handler for sidebar toggle button click\n * @returns {JSX.Element} - Rendered sidebar\n */\nconst Sidebar = memo(({ className = '', onToggleSettings = () => console.warn('Settings handler not provided to Sidebar'), onToggleSidebar = () => console.warn('Sidebar toggle handler not provided to Sidebar') }) => {\n  const { currentUser, isAuthenticated } = useAuth();\n  const { newChat } = useChatControl();\n  const { profilePicture: userAvatar, loading: avatarLoading } = useProfilePicture(currentUser?.photoURL);\n  \n  const userName = currentUser?.displayName || currentUser?.email || 'Sir';\n  \n  // Handle button clicks with fallbacks\n  const handleNewChat = (e) => {\n    e.preventDefault();\n    newChat();\n  };\n\n  const handleSettings = (e) => {\n    e.preventDefault();\n    onToggleSettings();\n  };\n\n  return (\n    <div className={`${styles.Sidebar} ${className}`}>\n      {/* Header with Title and Controls */}\n      <div className={styles.Sidebar__header}>\n        <h1 className={styles.Sidebar__title}>AI Chat</h1>\n        <div className={styles.Sidebar__headerControls}>\n          <button \n            className={`${styles.Sidebar__iconButton} ${styles['Sidebar__iconButton--newChat']}`}\n            onClick={handleNewChat}\n            aria-label=\"New chat\"\n            title=\"New chat\"\n          >\n            <PlusIcon size={20} />\n          </button>\n          <button \n            className={`${styles.Sidebar__iconButton} ${styles['Sidebar__iconButton--settings']}`}\n            onClick={handleSettings}\n            aria-label=\"Settings\"\n            title=\"Settings\"\n          >\n            <GearIcon size={20} />\n          </button>\n          <button\n            className={styles.Sidebar__iconButton}\n            onClick={onToggleSidebar}\n            aria-label=\"Close sidebar\"\n            title=\"Close sidebar\"\n          >\n            <ChevronLeftIcon size={20} />\n          </button>\n        </div>\n      </div>\n      \n      {/* Chat Session List */}\n      <div className={styles.Sidebar__chatListContainer}>\n        <ul className={styles.Sidebar__sessionList}>\n          {sampleSessions.map(session => (\n            <li key={session.id} className={styles.Sidebar__sessionItem}>\n              <button className={styles.Sidebar__sessionButton} onClick={() => console.log('Load session:', session.id)}>\n                <span className={styles.Sidebar__sessionTitle}>{session.title}</span>\n                <span className={styles.Sidebar__sessionTimestamp}>{session.timestamp}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Footer */}\n      <div className={styles.Sidebar__footer}>\n        {isAuthenticated ? (\n          <div className={styles.Sidebar__userProfile}>\n            {currentUser?.photoURL ? (\n              avatarLoading ? (\n                <Spinner size=\"small\" tag=\"avatar\" />\n              ) : userAvatar ? (\n                <img\n                  src={userAvatar}\n                  alt={`${userName}'s profile`}\n                  className={styles.Sidebar__userAvatar}\n                />\n              ) : (\n                <div className={styles.Sidebar__userInitial}>\n                  {userName.charAt(0).toUpperCase()}\n                </div>\n              )\n            ) : (\n              <div className={styles.Sidebar__userInitial}>\n                {userName.charAt(0).toUpperCase()}\n              </div>\n            )}\n            <span className={styles.Sidebar__userName}>{userName}</span>\n          </div>\n        ) : (\n          <span className={styles.footerPlaceholderText}></span>\n        )}\n      </div>\n    </div>\n  );\n});\n\nSidebar.displayName = 'Sidebar';\n\n// Define PropTypes\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onToggleSettings: PropTypes.func,\n  onToggleSidebar: PropTypes.func\n};\n\nexport default Sidebar; "],"names":["sampleSessions","id","title","timestamp","Sidebar","memo","_ref","className","onToggleSettings","onToggleSidebar","currentUser","isAuthenticated","useAuth","newChat","useChatControl","profilePicture","userAvatar","loading","avatarLoading","useProfilePicture","photoURL","userName","displayName","email","_jsxs","children","_jsx","styles","onClick","e","preventDefault","PlusIcon","size","GearIcon","ChevronLeftIcon","map","session","Spinner","tag","src","alt","charAt","toUpperCase"],"sourceRoot":""}