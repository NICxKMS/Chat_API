{"version":3,"file":"static/js/vendor.hast-util-from-dom-fe9b1242.78cae13e99.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/hast-util-from-dom/node_modules/property-information/lib/aria.js","../node_modules/hast-util-from-dom/node_modules/property-information/lib/html.js","../node_modules/hast-util-from-dom/node_modules/property-information/index.js","../node_modules/hast-util-from-dom/node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hast-util-from-dom/node_modules/property-information/lib/find.js","../node_modules/hast-util-from-dom/node_modules/hastscript/lib/create-h.js","../node_modules/hast-util-from-dom/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hast-util-from-dom/node_modules/hastscript/lib/index.js","../node_modules/hast-util-from-dom/lib/index.js","../node_modules/hast-util-from-dom/node_modules/property-information/lib/normalize.js"],"sourcesContent":["import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @import {Element, Nodes, RootContent, Root} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\n/**\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n */\n\n/**\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n */\n\n/**\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n */\n\n/**\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\n/**\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n */\n\n/**\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n */\n\n/**\n * @typedef {Record<string, PropertyValue | Style>} Properties\n *   Acceptable value for element properties.\n */\n\n/**\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n */\n\n/**\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n */\n\n/**\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n */\n\nimport {parse as parseCommas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as parseSpaces} from 'space-separated-tokens'\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    /** @type {Result} */\n    let node\n\n    if (selector === null || selector === undefined) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      const lower = node.tagName.toLowerCase()\n      const adjusted = adjust ? adjust.get(lower) : undefined\n      node.tagName = adjusted || lower\n\n      // Handle properties.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        for (const [key, value] of Object.entries(properties)) {\n          addProperty(schema, node.properties, key, value)\n        }\n      }\n    }\n\n    // Handle children.\n    for (const child of children) {\n      addChild(node.children, child)\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === null || value === undefined) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = parseSpaces(value)\n    } else if (info.commaSeparated) {\n      result = parseCommas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = parseSpaces(parseCommas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = [...value]\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    for (const item of result) {\n      // Assume no booleans in array.\n      finalResult.push(\n        /** @type {number | string} */ (\n          parsePrimitive(info, info.property, item)\n        )\n      )\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    result = properties.className.concat(\n      /** @type {Array<number | string> | number | string} */ (result)\n    )\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    for (const child of value) {\n      addChild(nodes, child)\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} styles\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(styles) {\n  /** @type {Array<string>} */\n  const result = []\n\n  for (const [key, value] of Object.entries(styles)) {\n    result.push([key, value].join(': '))\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {ReadonlyArray<string>} values\n *   List of properly cased keys.\n * @returns {Map<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Map<string, string>} */\n  const result = new Map()\n\n  for (const value of values) {\n    result.set(value.toLowerCase(), value)\n  }\n\n  return result\n}\n","/**\n * List of case-sensitive SVG tag names.\n *\n * @type {ReadonlyArray<string>}\n */\nexport const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {\n *   Comment as HastComment,\n *   Doctype as HastDoctype,\n *   Element as HastElement,\n *   Nodes as HastNodes,\n *   RootContent as HastRootContent,\n *   Root as HastRoot,\n *   Text as HastText,\n * } from 'hast'\n */\n\n/**\n * @callback AfterTransform\n *   Callback called when each node is transformed.\n * @param {Node} domNode\n *   DOM node that was handled.\n * @param {HastNodes} hastNode\n *   Corresponding hast node.\n * @returns {undefined | void}\n *   Nothing.\n *\n *   Note: `void` included until TS infers `undefined` nicely.\n *\n * @typedef Options\n *   Configuration.\n * @property {AfterTransform | null | undefined} [afterTransform]\n *   Callback called when each node is transformed (optional).\n */\n\nimport {h, s} from 'hastscript'\nimport {webNamespaces} from 'web-namespaces'\n\n/**\n * Transform a DOM tree to a hast tree.\n *\n * @param {Node} tree\n *   DOM tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   Equivalent hast node.\n */\nexport function fromDom(tree, options) {\n  return transform(tree, options || {}) || {type: 'root', children: []}\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNodes | undefined}\n *   Equivalent hast node.\n *\n *   Note that certain legacy DOM nodes (i.e., Attr nodes (2),  CDATA, processing instructions)\n */\nfunction transform(node, options) {\n  const transformed = one(node, options)\n  if (transformed && options.afterTransform)\n    options.afterTransform(node, transformed)\n  return transformed\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNodes | undefined}\n *   Equivalent hast node.\n */\nfunction one(node, options) {\n  switch (node.nodeType) {\n    case 1 /* Element */: {\n      const domNode = /** @type {Element} */ (node)\n      return element(domNode, options)\n    }\n\n    // Ignore: Attr (2).\n\n    case 3 /* Text */: {\n      const domNode = /** @type {Text} */ (node)\n      return text(domNode)\n    }\n\n    // Ignore: CDATA (4).\n    // Removed: Entity reference (5)\n    // Removed: Entity (6)\n    // Ignore: Processing instruction (7).\n\n    case 8 /* Comment */: {\n      const domNode = /** @type {Comment} */ (node)\n      return comment(domNode)\n    }\n\n    case 9 /* Document */: {\n      const domNode = /** @type {Document} */ (node)\n      return root(domNode, options)\n    }\n\n    case 10 /* Document type */: {\n      return doctype()\n    }\n\n    case 11 /* Document fragment */: {\n      const domNode = /** @type {DocumentFragment} */ (node)\n      return root(domNode, options)\n    }\n\n    default: {\n      return undefined\n    }\n  }\n}\n\n/**\n * Transform a document.\n *\n * @param {Document | DocumentFragment} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastRoot}\n *   Equivalent hast node.\n */\nfunction root(node, options) {\n  return {type: 'root', children: all(node, options)}\n}\n\n/**\n * Transform a doctype.\n *\n * @returns {HastDoctype}\n *   Equivalent hast node.\n */\nfunction doctype() {\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   DOM node to transform.\n * @returns {HastText}\n *   Equivalent hast node.\n */\nfunction text(node) {\n  return {type: 'text', value: node.nodeValue || ''}\n}\n\n/**\n * Transform a comment.\n *\n * @param {Comment} node\n *   DOM node to transform.\n * @returns {HastComment}\n *   Equivalent hast node.\n */\nfunction comment(node) {\n  return {type: 'comment', value: node.nodeValue || ''}\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastElement}\n *   Equivalent hast node.\n */\nfunction element(node, options) {\n  const space = node.namespaceURI\n  const x = space === webNamespaces.svg ? s : h\n  const tagName =\n    space === webNamespaces.html ? node.tagName.toLowerCase() : node.tagName\n  /** @type {DocumentFragment | Element} */\n  const content =\n    // @ts-expect-error: DOM types are wrong, content can exist.\n    space === webNamespaces.html && tagName === 'template' ? node.content : node\n  const attributes = node.getAttributeNames()\n  /** @type {Record<string, string>} */\n  const properties = {}\n  let index = -1\n\n  while (++index < attributes.length) {\n    properties[attributes[index]] = node.getAttribute(attributes[index]) || ''\n  }\n\n  return x(tagName, properties, all(content, options))\n}\n\n/**\n * Transform child nodes in a parent.\n *\n * @param {Document | DocumentFragment | Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {Array<HastRootContent>}\n *   Equivalent hast nodes.\n */\nfunction all(node, options) {\n  const nodes = node.childNodes\n  /** @type {Array<HastRootContent>} */\n  const children = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    const child = transform(nodes[index], options)\n\n    if (child !== undefined) {\n      // @ts-expect-error Assume no document inside document.\n      children.push(child)\n    }\n  }\n\n  return children\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n"],"names":["aria","create","properties","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","transform","_","property","slice","toLowerCase","html","attributes","acceptcharset","classname","htmlfor","httpequiv","mustUseProperty","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","name","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","tabIndex","target","title","translate","type","typeMustMatch","useMap","value","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","space","caseInsensitiveTransform","merge","htmlBase","xlink","xmlns","xml","svg","svgBase","search","cap","dash","valid","find","schema","normal","normalize","Type","Info","length","test","charAt","rest","replace","camelcase","toUpperCase","dashes","kebab","DefinedInfo","$0","createH","defaultTagName","caseSensitive","adjust","values","result","Map","set","createAdjustMap","undefined","selector","node","_len","arguments","children","Array","_key","child","unshift","props","previous","tagName","lastIndex","match","exec","subvalue","index","isArray","push","parseSelector","lower","adjusted","get","record","keys","Object","key","item","isChild","entries","addProperty","addChild","info","Number","isNaN","parseSpaces","parseCommas","commaOrSpaceSeparated","join","parsePrimitive","styles","String","finalResult","concat","nodes","Error","h","s","fromDom","tree","options","transformed","nodeType","namespaceURI","x","webNamespaces","getAttributeNames","getAttribute","all","element","nodeValue","comment","root","one","afterTransform","childNodes"],"sourceRoot":""}