{"version":3,"file":"static/js/layout-sidebar.e0797a72.chunk.js","mappings":"gNAYA,MAAMA,EAAiB,CACrB,CAAEC,GAAI,YAAaC,MAAO,uBAAwBC,UAAW,eAC7D,CAAEF,GAAI,YAAaC,MAAO,8BAA+BC,UAAW,aACpE,CAAEF,GAAI,YAAaC,MAAO,wBAAyBC,UAAW,UAC9D,CAAEF,GAAI,YAAaC,MAAO,0BAA2BC,UAAW,WAW5DC,GAAUC,EAAAA,EAAAA,OAAKC,IAAsD,IAArD,UAAEC,EAAY,GAAE,UAAEC,EAAS,iBAAEC,GAAkBH,EACnE,MAAM,YAAEI,EAAW,gBAAEC,IAAoBC,EAAAA,EAAAA,KAEnCC,GAAWH,aAAW,EAAXA,EAAaI,eAAeJ,aAAW,EAAXA,EAAaK,QAAS,MAqBnE,OACEC,EAAAA,EAAAA,MAAA,OAAKT,UAAW,GAAGU,EAAAA,EAAOC,WAAWX,IAAYY,SAAA,EAE/CH,EAAAA,EAAAA,MAAA,OAAKT,UAAWU,EAAAA,EAAOG,OAAOD,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,MAAId,UAAWU,EAAAA,EAAOf,MAAMiB,SAAC,aAC7BH,EAAAA,EAAAA,MAAA,OAAKT,UAAWU,EAAAA,EAAOK,eAAeH,SAAA,EACpCE,EAAAA,EAAAA,KAAA,UACEd,UAAW,GAAGU,EAAAA,EAAOM,cAAcN,EAAAA,EAAOO,gBAC1CC,QA1BaC,IACrBA,EAAEC,iBACEnB,GACFA,GAGF,EAqBQ,aAAW,WACXN,MAAM,WAAUiB,UAEhBE,EAAAA,EAAAA,KAACO,EAAAA,IAAQ,CAACC,KAAM,QAElBR,EAAAA,EAAAA,KAAA,UACEd,UAAW,GAAGU,EAAAA,EAAOM,cAAcN,EAAAA,EAAOa,iBAC1CL,QAzBcC,IACtBA,EAAEC,iBACElB,GACFA,GAGF,EAoBQ,aAAW,WACXP,MAAM,WAAUiB,UAEhBE,EAAAA,EAAAA,KAACU,EAAAA,IAAQ,CAACF,KAAM,cAMtBR,EAAAA,EAAAA,KAAA,OAAKd,UAAWU,EAAAA,EAAOe,kBAAkBb,UACvCE,EAAAA,EAAAA,KAAA,MAAId,UAAWU,EAAAA,EAAOgB,YAAYd,SAC/BnB,EAAekC,KAAIC,IAClBd,EAAAA,EAAAA,KAAA,MAAqBd,UAAWU,EAAAA,EAAOmB,YAAYjB,UACjDH,EAAAA,EAAAA,MAAA,UAAQT,UAAWU,EAAAA,EAAOoB,cAAeZ,QAASA,KAA+C,EAAAN,SAAA,EAC/FE,EAAAA,EAAAA,KAAA,QAAMd,UAAWU,EAAAA,EAAOqB,aAAanB,SAAEgB,EAAQjC,SAC/CmB,EAAAA,EAAAA,KAAA,QAAMd,UAAWU,EAAAA,EAAOsB,iBAAiBpB,SAAEgB,EAAQhC,gBAH9CgC,EAAQlC,WAWvBoB,EAAAA,EAAAA,KAAA,OAAKd,UAAWU,EAAAA,EAAOuB,OAAOrB,SAC3BR,GACCK,EAAAA,EAAAA,MAAA,OAAKT,UAAWU,EAAAA,EAAOwB,YAAYtB,SAAA,CAChCT,SAAAA,EAAagC,UACZrB,EAAAA,EAAAA,KAAA,OACEsB,IAAKjC,EAAYgC,SACjBE,IAAK,GAAG/B,cACRN,UAAWU,EAAAA,EAAO4B,cAGpBxB,EAAAA,EAAAA,KAAA,OAAKd,UAAWU,EAAAA,EAAO6B,YAAY3B,SAChCN,EAASkC,OAAO,GAAGC,iBAGxB3B,EAAAA,EAAAA,KAAA,QAAMd,UAAWU,EAAAA,EAAOJ,SAASM,SAAEN,QAGrCQ,EAAAA,EAAAA,KAAA,QAAMd,UAAWU,EAAAA,EAAOgC,4BAGxB,IAIV7C,EAAQU,YAAc,UAEtB,S","sources":["components/layout/Sidebar/index.js"],"sourcesContent":["import { memo } from 'react';\nimport { PlusIcon, GearIcon } from '@primer/octicons-react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport styles from './Sidebar.module.css';\n// Remove unused icons if PlusIcon/GearIcon only used for floating buttons\n// import { GearIcon, PlusIcon } from '@primer/octicons-react'; \n\n// Remove imports for components moved out\n// const ThemeToggle = lazy(() => import('../../common/ThemeToggle'));\n// const ApiStatus = lazy(() => import('../../common/ApiStatus'));\n\n// Sample data (keep for now)\nconst sampleSessions = [\n  { id: 'session-1', title: 'LLM Explanation Chat', timestamp: '2 hours ago' },\n  { id: 'session-2', title: 'React Component Refactoring', timestamp: 'Yesterday' },\n  { id: 'session-3', title: 'CSS Grid Layout Ideas', timestamp: 'Mar 30' },\n  { id: 'session-4', title: 'Python Script Debugging', timestamp: 'Mar 28' },\n];\n\n/**\n * Sidebar component containing app controls and chat session list\n * @param {Object} props - Component props\n * @param {string} [props.className] - Additional CSS class\n * @param {Function} [props.onNewChat] - Handler for new chat button click\n * @param {Function} [props.onToggleSettings] - Handler for settings button click\n * @returns {JSX.Element} - Rendered sidebar\n */\nconst Sidebar = memo(({ className = '', onNewChat, onToggleSettings }) => {\n  const { currentUser, isAuthenticated } = useAuth();\n  \n  const userName = currentUser?.displayName || currentUser?.email || 'Sir';\n  \n  // Handle button clicks with fallbacks\n  const handleNewChat = (e) => {\n    e.preventDefault();\n    if (onNewChat) {\n      onNewChat();\n    } else {\n      console.warn('New chat handler not provided');\n    }\n  };\n\n  const handleSettings = (e) => {\n    e.preventDefault();\n    if (onToggleSettings) {\n      onToggleSettings();\n    } else {\n      console.warn('Settings handler not provided');\n    }\n  };\n\n  return (\n    <div className={`${styles.sidebar} ${className}`}>\n      {/* Header with Title and Controls */}\n      <div className={styles.header}>\n        <h1 className={styles.title}>AI Chat</h1>\n        <div className={styles.headerControls}>\n          <button \n            className={`${styles.iconButton} ${styles.newChatButton}`}\n            onClick={handleNewChat}\n            aria-label=\"New chat\"\n            title=\"New chat\"\n          >\n            <PlusIcon size={20} />\n          </button>\n          <button \n            className={`${styles.iconButton} ${styles.settingsButton}`}\n            onClick={handleSettings}\n            aria-label=\"Settings\"\n            title=\"Settings\"\n          >\n            <GearIcon size={20} />\n          </button>\n        </div>\n      </div>\n      \n      {/* Chat Session List */}\n      <div className={styles.chatListContainer}>\n        <ul className={styles.sessionList}>\n          {sampleSessions.map(session => (\n            <li key={session.id} className={styles.sessionItem}>\n              <button className={styles.sessionButton} onClick={() => console.log('Load session:', session.id)}>\n                <span className={styles.sessionTitle}>{session.title}</span>\n                <span className={styles.sessionTimestamp}>{session.timestamp}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Footer */}\n      <div className={styles.footer}>\n        {isAuthenticated ? (\n          <div className={styles.userProfile}>\n            {currentUser?.photoURL ? (\n              <img \n                src={currentUser.photoURL} \n                alt={`${userName}'s profile`}\n                className={styles.userAvatar}\n              />\n            ) : (\n              <div className={styles.userInitial}>\n                {userName.charAt(0).toUpperCase()}\n              </div>\n            )}\n            <span className={styles.userName}>{userName}</span>\n          </div>\n        ) : (\n          <span className={styles.footerPlaceholderText}></span>\n        )}\n      </div>\n    </div>\n  );\n});\n\nSidebar.displayName = 'Sidebar';\n\nexport default Sidebar; "],"names":["sampleSessions","id","title","timestamp","Sidebar","memo","_ref","className","onNewChat","onToggleSettings","currentUser","isAuthenticated","useAuth","userName","displayName","email","_jsxs","styles","sidebar","children","header","_jsx","headerControls","iconButton","newChatButton","onClick","e","preventDefault","PlusIcon","size","settingsButton","GearIcon","chatListContainer","sessionList","map","session","sessionItem","sessionButton","sessionTitle","sessionTimestamp","footer","userProfile","photoURL","src","alt","userAvatar","userInitial","charAt","toUpperCase","footerPlaceholderText"],"sourceRoot":""}