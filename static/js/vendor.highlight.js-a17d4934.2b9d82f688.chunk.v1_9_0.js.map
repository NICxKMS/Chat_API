{"version":3,"file":"static/js/vendor.highlight.js-a17d4934.2b9d82f688.chunk.v1_9_0.js","mappings":"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MACA,SACA,UACA,OACA,QACA,OACA,MACA,WACA,UACA,OACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,MACA,gBACA,qBACA,qBACA,iBACA,YACA,QACA,aACA,QACA,YACA,MACA,OACA,WACA,UACA,WACA,OACA,mBACA,aACA,UACA,YACA,MACA,SACA,UACA,MACA,OACA,OACA,OACA,QACA,SACA,SACA,eACA,gBACA,iBAkBAC,QAAS,2BAGLC,EAAoB,CACxBjD,UAAW,oBACXW,UAAW,EACXH,SAAUoC,EACV3C,MAAOgB,EACL,KACA,eACA,SACA,UACA,YACAnB,EAAK4C,UA9QQ1B,EA+QH,QA9QPC,EAAO,MAAOD,EAAI,QAD3B,IAAmBA,EAkRjB,MAAMkC,EAAsB,CAC1BD,EACAV,EACAL,EACAtB,EACAd,EAAKe,qBACLyB,EACAH,GAIIgB,EAAqB,CAIzBf,SAAU,CACR,CACEnC,MAAO,IACPG,IAAK,KAEP,CACEH,MAAO,KACPG,IAAK,MAEP,CACEU,cAAe,wBACfV,IAAK,MAGTI,SAAUoC,EACVvC,SAAU6C,EAAoBjC,OAAO,CACnC,CACEhB,MAAO,KACPG,IAAK,KACLI,SAAUoC,EACVvC,SAAU6C,EAAoBjC,OAAO,CAAE,SACvCN,UAAW,KAGfA,UAAW,GAGPyC,EAAuB,CAC3BpD,UAAW,WACXC,MAAO,IAAMgC,EAAmB,eAAiBU,EACjDU,aAAa,EACbjD,IAAK,QACLkD,YAAY,EACZ9C,SAAUoC,EACVnC,QAAS,iBACTJ,SAAU,CACR,CACEJ,MAAO8B,EACPvB,SAAUoC,EACVjC,UAAW,GAEb,CACEV,MAAO0C,EACPU,aAAa,EACbhD,SAAU,CAAEoC,GACZ9B,UAAW,GAIb,CACEV,MAAO,KACPU,UAAW,GAGb,CACEV,MAAO,IACPsD,gBAAgB,EAChBlD,SAAU,CACR8B,EACAG,IAGJ,CACEtC,UAAW,SACXC,MAAO,KACPG,IAAK,KACLI,SAAUoC,EACVjC,UAAW,EACXN,SAAU,CACRO,EACAd,EAAKe,qBACLsB,EACAG,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","sources":["../node_modules/highlight.js/lib/languages/angelscript.js","../node_modules/highlight.js/lib/languages/arduino.js","../node_modules/highlight.js/lib/languages/apache.js","../node_modules/highlight.js/lib/languages/applescript.js","../node_modules/highlight.js/lib/languages/arcade.js","../node_modules/highlight.js/lib/languages/abnf.js","../node_modules/highlight.js/lib/languages/ada.js","../node_modules/highlight.js/lib/languages/armasm.js","../node_modules/highlight.js/lib/languages/accesslog.js","../node_modules/highlight.js/lib/languages/actionscript.js"],"sourcesContent":["/*\nLanguage: AngelScript\nAuthor: Melissa Geels <melissa@nimble.tools>\nCategory: scripting\nWebsite: https://www.angelcode.com/angelscript/\n*/\n\n/** @type LanguageFn */\nfunction angelscript(hljs) {\n  var builtInTypeMode = {\n    className: 'built_in',\n    begin: '\\\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|string|ref|array|double|float|auto|dictionary)'\n  };\n\n  var objectHandleMode = {\n    className: 'symbol',\n    begin: '[a-zA-Z0-9_]+@'\n  };\n\n  var genericMode = {\n    className: 'keyword',\n    begin: '<', end: '>',\n    contains: [ builtInTypeMode, objectHandleMode ]\n  };\n\n  builtInTypeMode.contains = [ genericMode ];\n  objectHandleMode.contains = [ genericMode ];\n\n  return {\n    name: 'AngelScript',\n    aliases: ['asc'],\n\n    keywords:\n      'for in|0 break continue while do|0 return if else case switch namespace is cast ' +\n      'or and xor not get|0 in inout|10 out override set|0 private public const default|0 ' +\n      'final shared external mixin|10 enum typedef funcdef this super import from interface ' +\n      'abstract|0 try catch protected explicit property',\n\n    // avoid close detection with C# and JS\n    illegal: '(^using\\\\s+[A-Za-z0-9_\\\\.]+;$|\\\\bfunction\\\\s*[^\\\\(])',\n\n    contains: [\n      { // 'strings'\n        className: 'string',\n        begin: '\\'', end: '\\'',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        relevance: 0\n      },\n\n      // \"\"\"heredoc strings\"\"\"\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n\n      { // \"strings\"\n        className: 'string',\n        begin: '\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        relevance: 0\n      },\n\n      hljs.C_LINE_COMMENT_MODE, // single-line comments\n      hljs.C_BLOCK_COMMENT_MODE, // comment blocks\n\n      { // metadata\n        className: 'string',\n        begin: '^\\\\s*\\\\[', end: '\\\\]',\n      },\n\n      { // interface or namespace declaration\n        beginKeywords: 'interface namespace', end: /\\{/,\n        illegal: '[;.\\\\-]',\n        contains: [\n          { // interface or namespace name\n            className: 'symbol',\n            begin: '[a-zA-Z0-9_]+'\n          }\n        ]\n      },\n\n      { // class declaration\n        beginKeywords: 'class', end: /\\{/,\n        illegal: '[;.\\\\-]',\n        contains: [\n          { // class name\n            className: 'symbol',\n            begin: '[a-zA-Z0-9_]+',\n            contains: [\n              {\n                begin: '[:,]\\\\s*',\n                contains: [\n                  {\n                    className: 'symbol',\n                    begin: '[a-zA-Z0-9_]+'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n\n      builtInTypeMode, // built-in types\n      objectHandleMode, // object handles\n\n      { // literals\n        className: 'literal',\n        begin: '\\\\b(null|true|false)'\n      },\n\n      { // numbers\n        className: 'number',\n        relevance: 0,\n        begin: '(-?)(\\\\b0[xXbBoOdD][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?f?|\\\\.\\\\d+f?)([eE][-+]?\\\\d+f?)?)'\n      }\n    ]\n  };\n}\n\nmodule.exports = angelscript;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: C++\nCategory: common, system\nWebsite: https://isocpp.org\n*/\n\n/** @type LanguageFn */\nfunction cPlusPlus(hljs) {\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [\n      {\n        begin: /\\\\\\n/\n      }\n    ]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(' +\n    DECLTYPE_AUTO_RE + '|' +\n    optional(NAMESPACE_RE) +\n    '[a-zA-Z_]\\\\w*' + optional(TEMPLATE_ARGUMENT_RE) +\n  ')';\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      'meta-keyword':\n        'if else elif endif define undef warning error line ' +\n        'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, {\n        className: 'meta-string'\n      }),\n      {\n        className: 'meta-string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const COMMON_CPP_HINTS = [\n    'asin',\n    'atan2',\n    'atan',\n    'calloc',\n    'ceil',\n    'cosh',\n    'cos',\n    'exit',\n    'exp',\n    'fabs',\n    'floor',\n    'fmod',\n    'fprintf',\n    'fputs',\n    'free',\n    'frexp',\n    'auto_ptr',\n    'deque',\n    'list',\n    'queue',\n    'stack',\n    'vector',\n    'map',\n    'set',\n    'pair',\n    'bitset',\n    'multiset',\n    'multimap',\n    'unordered_set',\n    'fscanf',\n    'future',\n    'isalnum',\n    'isalpha',\n    'iscntrl',\n    'isdigit',\n    'isgraph',\n    'islower',\n    'isprint',\n    'ispunct',\n    'isspace',\n    'isupper',\n    'isxdigit',\n    'tolower',\n    'toupper',\n    'labs',\n    'ldexp',\n    'log10',\n    'log',\n    'malloc',\n    'realloc',\n    'memchr',\n    'memcmp',\n    'memcpy',\n    'memset',\n    'modf',\n    'pow',\n    'printf',\n    'putchar',\n    'puts',\n    'scanf',\n    'sinh',\n    'sin',\n    'snprintf',\n    'sprintf',\n    'sqrt',\n    'sscanf',\n    'strcat',\n    'strchr',\n    'strcmp',\n    'strcpy',\n    'strcspn',\n    'strlen',\n    'strncat',\n    'strncmp',\n    'strncpy',\n    'strpbrk',\n    'strrchr',\n    'strspn',\n    'strstr',\n    'tanh',\n    'tan',\n    'unordered_map',\n    'unordered_multiset',\n    'unordered_multimap',\n    'priority_queue',\n    'make_pair',\n    'array',\n    'shared_ptr',\n    'abort',\n    'terminate',\n    'abs',\n    'acos',\n    'vfprintf',\n    'vprintf',\n    'vsprintf',\n    'endl',\n    'initializer_list',\n    'unique_ptr',\n    'complex',\n    'imaginary',\n    'std',\n    'string',\n    'wstring',\n    'cin',\n    'cout',\n    'cerr',\n    'clog',\n    'stdin',\n    'stdout',\n    'stderr',\n    'stringstream',\n    'istringstream',\n    'ostringstream'\n  ];\n\n  const CPP_KEYWORDS = {\n    keyword: 'int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof ' +\n      'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +\n      'unsigned long volatile static protected bool template mutable if public friend ' +\n      'do goto auto void enum else break extern using asm case typeid wchar_t ' +\n      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n      'switch continue inline delete alignas alignof constexpr consteval constinit decltype ' +\n      'concept co_await co_return co_yield requires ' +\n      'noexcept static_assert thread_local restrict final override ' +\n      'atomic_bool atomic_char atomic_schar ' +\n      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n      'atomic_ullong new throw return ' +\n      'and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq',\n    built_in: '_Bool _Complex _Imaginary',\n    _relevance_hints: COMMON_CPP_HINTS,\n    literal: 'true false nullptr NULL'\n  };\n\n  const FUNCTION_DISPATCH = {\n    className: \"function.dispatch\",\n    relevance: 0,\n    keywords: CPP_KEYWORDS,\n    begin: concat(\n      /\\b/,\n      /(?!decltype)/,\n      /(?!if)/,\n      /(?!for)/,\n      /(?!while)/,\n      hljs.IDENT_RE,\n      lookahead(/\\s*\\(/))\n  };\n\n  const EXPRESSION_CONTAINS = [\n    FUNCTION_DISPATCH,\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      // needed because we do not have look-behind on the below rule\n      // to prevent it from grabbing the final : in a :: pair\n      {\n        begin: /::/,\n        relevance: 0\n      },\n      // initializers\n      {\n        begin: /:/,\n        endsWithParent: true,\n        contains: [\n          STRINGS,\n          NUMBERS\n        ]\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: 'C++',\n    aliases: [\n      'cc',\n      'c++',\n      'h++',\n      'hpp',\n      'hh',\n      'hxx',\n      'cxx'\n    ],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    classNameAliases: {\n      \"function.dispatch\": \"built_in\"\n    },\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      FUNCTION_DISPATCH,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            {\n              beginKeywords: \"final class struct\"\n            },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: CPP_KEYWORDS\n    }\n  };\n}\n\n/*\nLanguage: Arduino\nAuthor: Stefania Mellai <s.mellai@arduino.cc>\nDescription: The Arduino® Language is a superset of C++. This rules are designed to highlight the Arduino® source code. For info about language see http://www.arduino.cc.\nWebsite: https://www.arduino.cc\n*/\n\n/** @type LanguageFn */\nfunction arduino(hljs) {\n  const ARDUINO_KW = {\n    keyword:\n      'boolean byte word String',\n    built_in:\n      'KeyboardController MouseController SoftwareSerial ' +\n      'EthernetServer EthernetClient LiquidCrystal ' +\n      'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +\n      'HttpClient RobotMotor WiFiClient GSMScanner ' +\n      'FileSystem Scheduler GSMServer YunClient YunServer ' +\n      'IPAddress GSMClient GSMModem Keyboard Ethernet ' +\n      'Console GSMBand Esplora Stepper Process ' +\n      'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +\n      'Client Server GSMPIN FileIO Bridge Serial ' +\n      'EEPROM Stream Mouse Audio Servo File Task ' +\n      'GPRS WiFi Wire TFT GSM SPI SD ',\n    _:\n      'setup loop ' +\n      'runShellCommandAsynchronously analogWriteResolution ' +\n      'retrieveCallingNumber printFirmwareVersion ' +\n      'analogReadResolution sendDigitalPortPair ' +\n      'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +\n      'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +\n      'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +\n      'beginTransmission getSignalStrength runAsynchronously ' +\n      'getAsynchronously listenOnLocalhost getCurrentCarrier ' +\n      'readAccelerometer messageAvailable sendDigitalPorts ' +\n      'lineFollowConfig countryNameWrite runShellCommand ' +\n      'readStringUntil rewindDirectory readTemperature ' +\n      'setClockDivider readLightSensor endTransmission ' +\n      'analogReference detachInterrupt countryNameRead ' +\n      'attachInterrupt encryptionType readBytesUntil ' +\n      'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +\n      'userNameWrite readJoystickY readJoystickX mouseReleased ' +\n      'openNextFile scanNetworks noInterrupts digitalWrite ' +\n      'beginSpeaker mousePressed isActionDone mouseDragged ' +\n      'displayLogos noAutoscroll addParameter remoteNumber ' +\n      'getModifiers keyboardRead userNameRead waitContinue ' +\n      'processInput parseCommand printVersion readNetworks ' +\n      'writeMessage blinkVersion cityNameRead readMessage ' +\n      'setDataMode parsePacket isListening setBitOrder ' +\n      'beginPacket isDirectory motorsWrite drawCompass ' +\n      'digitalRead clearScreen serialEvent rightToLeft ' +\n      'setTextSize leftToRight requestFrom keyReleased ' +\n      'compassRead analogWrite interrupts WiFiServer ' +\n      'disconnect playMelody parseFloat autoscroll ' +\n      'getPINUsed setPINUsed setTimeout sendAnalog ' +\n      'readSlider analogRead beginWrite createChar ' +\n      'motorsStop keyPressed tempoWrite readButton ' +\n      'subnetMask debugPrint macAddress writeGreen ' +\n      'randomSeed attachGPRS readString sendString ' +\n      'remotePort releaseAll mouseMoved background ' +\n      'getXChange getYChange answerCall getResult ' +\n      'voiceCall endPacket constrain getSocket writeJSON ' +\n      'getButton available connected findUntil readBytes ' +\n      'exitValue readGreen writeBlue startLoop IPAddress ' +\n      'isPressed sendSysex pauseMode gatewayIP setCursor ' +\n      'getOemKey tuneWrite noDisplay loadImage switchPIN ' +\n      'onRequest onReceive changePIN playFile noBuffer ' +\n      'parseInt overflow checkPIN knobRead beginTFT ' +\n      'bitClear updateIR bitWrite position writeRGB ' +\n      'highByte writeRed setSpeed readBlue noStroke ' +\n      'remoteIP transfer shutdown hangCall beginSMS ' +\n      'endWrite attached maintain noCursor checkReg ' +\n      'checkPUK shiftOut isValid shiftIn pulseIn ' +\n      'connect println localIP pinMode getIMEI ' +\n      'display noBlink process getBand running beginSD ' +\n      'drawBMP lowByte setBand release bitRead prepare ' +\n      'pointTo readRed setMode noFill remove listen ' +\n      'stroke detach attach noTone exists buffer ' +\n      'height bitSet circle config cursor random ' +\n      'IRread setDNS endSMS getKey micros ' +\n      'millis begin print write ready flush width ' +\n      'isPIN blink clear press mkdir rmdir close ' +\n      'point yield image BSSID click delay ' +\n      'read text move peek beep rect line open ' +\n      'seek fill size turn stop home find ' +\n      'step tone sqrt RSSI SSID ' +\n      'end bit tan cos sin pow map abs max ' +\n      'min get run put',\n    literal:\n      'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +\n      'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +\n      'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +\n      'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +\n      'DEFAULT OUTPUT INPUT HIGH LOW'\n  };\n\n  const ARDUINO = cPlusPlus(hljs);\n\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\n\n  kws.keyword += ' ' + ARDUINO_KW.keyword;\n  kws.literal += ' ' + ARDUINO_KW.literal;\n  kws.built_in += ' ' + ARDUINO_KW.built_in;\n  kws._ += ' ' + ARDUINO_KW._;\n\n  ARDUINO.name = 'Arduino';\n  ARDUINO.aliases = ['ino'];\n  ARDUINO.supersetOf = \"cpp\";\n\n  return ARDUINO;\n}\n\nmodule.exports = arduino;\n","/*\nLanguage: Apache config\nAuthor: Ruslan Keba <rukeba@gmail.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://httpd.apache.org\nDescription: language definition for Apache configuration files (httpd.conf & .htaccess)\nCategory: common, config\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction apache(hljs) {\n  const NUMBER_REF = {\n    className: 'number',\n    begin: /[$%]\\d+/\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: /\\d+/\n  };\n  const IP_ADDRESS = {\n    className: \"number\",\n    begin: /\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?/\n  };\n  const PORT_NUMBER = {\n    className: \"number\",\n    begin: /:\\d{1,5}/\n  };\n  return {\n    name: 'Apache config',\n    aliases: [ 'apacheconf' ],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'section',\n        begin: /<\\/?/,\n        end: />/,\n        contains: [\n          IP_ADDRESS,\n          PORT_NUMBER,\n          // low relevance prevents us from claming XML/HTML where this rule would\n          // match strings inside of XML tags\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 })\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords aren’t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: {\n          nomarkup:\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n            'sethandler errordocument loadmodule options header listen serverroot ' +\n            'servername'\n        },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: { literal: 'on off all deny allow' },\n          contains: [\n            {\n              className: 'meta',\n              begin: /\\s\\[/,\n              end: /\\]$/\n            },\n            {\n              className: 'variable',\n              begin: /[\\$%]\\{/,\n              end: /\\}/,\n              contains: [\n                'self',\n                NUMBER_REF\n              ]\n            },\n            IP_ADDRESS,\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n}\n\nmodule.exports = apache;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: AppleScript\nAuthors: Nathan Grigg <nathan@nathanamy.org>, Dr. Drang <drdrang@gmail.com>\nCategory: scripting\nWebsite: https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction applescript(hljs) {\n  const STRING = hljs.inherit(\n    hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    });\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    contains: [\n      'self',\n      hljs.C_NUMBER_MODE,\n      STRING\n    ]\n  };\n  const COMMENT_MODE_1 = hljs.COMMENT(/--/, /$/);\n  const COMMENT_MODE_2 = hljs.COMMENT(\n    /\\(\\*/,\n    /\\*\\)/,\n    {\n      contains: [\n        'self', // allow nesting\n        COMMENT_MODE_1\n      ]\n    }\n  );\n  const COMMENTS = [\n    COMMENT_MODE_1,\n    COMMENT_MODE_2,\n    hljs.HASH_COMMENT_MODE\n  ];\n\n  const KEYWORD_PATTERNS = [\n    /apart from/,\n    /aside from/,\n    /instead of/,\n    /out of/,\n    /greater than/,\n    /isn't|(doesn't|does not) (equal|come before|come after|contain)/,\n    /(greater|less) than( or equal)?/,\n    /(starts?|ends|begins?) with/,\n    /contained by/,\n    /comes (before|after)/,\n    /a (ref|reference)/,\n    /POSIX (file|path)/,\n    /(date|time) string/,\n    /quoted form/\n  ];\n\n  const BUILT_IN_PATTERNS = [\n    /clipboard info/,\n    /the clipboard/,\n    /info for/,\n    /list (disks|folder)/,\n    /mount volume/,\n    /path to/,\n    /(close|open for) access/,\n    /(get|set) eof/,\n    /current date/,\n    /do shell script/,\n    /get volume settings/,\n    /random number/,\n    /set volume/,\n    /system attribute/,\n    /system info/,\n    /time to GMT/,\n    /(load|run|store) script/,\n    /scripting components/,\n    /ASCII (character|number)/,\n    /localized string/,\n    /choose (application|color|file|file name|folder|from list|remote application|URL)/,\n    /display (alert|dialog)/\n  ];\n\n  return {\n    name: 'AppleScript',\n    aliases: [ 'osascript' ],\n    keywords: {\n      keyword:\n        'about above after against and around as at back before beginning ' +\n        'behind below beneath beside between but by considering ' +\n        'contain contains continue copy div does eighth else end equal ' +\n        'equals error every exit fifth first for fourth from front ' +\n        'get given global if ignoring in into is it its last local me ' +\n        'middle mod my ninth not of on onto or over prop property put ref ' +\n        'reference repeat returning script second set seventh since ' +\n        'sixth some tell tenth that the|0 then third through thru ' +\n        'timeout times to transaction try until where while whose with ' +\n        'without',\n      literal:\n        'AppleScript false linefeed return pi quote result space tab true',\n      built_in:\n        'alias application boolean class constant date file integer list ' +\n        'number real record string text ' +\n        'activate beep count delay launch log offset read round ' +\n        'run say summarize write ' +\n        'character characters contents day frontmost id item length ' +\n        'month name paragraph paragraphs rest reverse running time version ' +\n        'weekday word words year'\n    },\n    contains: [\n      STRING,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'built_in',\n        begin: concat(\n          /\\b/,\n          either(...BUILT_IN_PATTERNS),\n          /\\b/\n        )\n      },\n      {\n        className: 'built_in',\n        begin: /^\\s*return\\b/\n      },\n      {\n        className: 'literal',\n        begin:\n          /\\b(text item delimiters|current application|missing value)\\b/\n      },\n      {\n        className: 'keyword',\n        begin: concat(\n          /\\b/,\n          either(...KEYWORD_PATTERNS),\n          /\\b/\n        )\n      },\n      {\n        beginKeywords: 'on',\n        illegal: /[${=;\\n]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS\n        ]\n      },\n      ...COMMENTS\n    ],\n    illegal: /\\/\\/|->|=>|\\[\\[/\n  };\n}\n\nmodule.exports = applescript;\n","/*\n Language: ArcGIS Arcade\n Category: scripting\n Author: John Foster <jfoster@esri.com>\n Website: https://developers.arcgis.com/arcade/\n Description: ArcGIS Arcade is an expression language used in many Esri ArcGIS products such as Pro, Online, Server, Runtime, JavaScript, and Python\n*/\n\n/** @type LanguageFn */\nfunction arcade(hljs) {\n  const IDENT_RE = '[A-Za-z_][0-9A-Za-z_]*';\n  const KEYWORDS = {\n    keyword:\n      'if for while var new function do return void else break',\n    literal:\n      'BackSlash DoubleQuote false ForwardSlash Infinity NaN NewLine null PI SingleQuote Tab TextFormatting true undefined',\n    built_in:\n      'Abs Acos Angle Attachments Area AreaGeodetic Asin Atan Atan2 Average Bearing Boolean Buffer BufferGeodetic ' +\n      'Ceil Centroid Clip Console Constrain Contains Cos Count Crosses Cut Date DateAdd ' +\n      'DateDiff Day Decode DefaultValue Dictionary Difference Disjoint Distance DistanceGeodetic Distinct ' +\n      'DomainCode DomainName Equals Exp Extent Feature FeatureSet FeatureSetByAssociation FeatureSetById FeatureSetByPortalItem ' +\n      'FeatureSetByRelationshipName FeatureSetByTitle FeatureSetByUrl Filter First Floor Geometry GroupBy Guid HasKey Hour IIf IndexOf ' +\n      'Intersection Intersects IsEmpty IsNan IsSelfIntersecting Length LengthGeodetic Log Max Mean Millisecond Min Minute Month ' +\n      'MultiPartToSinglePart Multipoint NextSequenceValue Now Number OrderBy Overlaps Point Polygon ' +\n      'Polyline Portal Pow Random Relate Reverse RingIsClockWise Round Second SetGeometry Sin Sort Sqrt Stdev Sum ' +\n      'SymmetricDifference Tan Text Timestamp Today ToLocal Top Touches ToUTC TrackCurrentTime ' +\n      'TrackGeometryWindow TrackIndex TrackStartTime TrackWindow TypeOf Union UrlEncode Variance ' +\n      'Weekday When Within Year '\n  };\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '\\\\$[datastore|feature|layer|map|measure|sourcefeature|sourcelayer|targetfeature|targetlayer|value|view]+'\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0[bB][01]+)'\n      },\n      {\n        begin: '\\\\b(0[oO][0-7]+)'\n      },\n      {\n        begin: hljs.C_NUMBER_RE\n      }\n    ],\n    relevance: 0\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: [] // defined later\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  const PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    name: 'ArcGIS Arcade',\n    keywords: KEYWORDS,\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      SYMBOL,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/,\n        relevance: 0,\n        contains: [{\n          begin: IDENT_RE + '\\\\s*:',\n          returnBegin: true,\n          relevance: 0,\n          contains: [{\n            className: 'attr',\n            begin: IDENT_RE,\n            relevance: 0\n          }]\n        }]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(return)\\\\b)\\\\s*',\n        keywords: 'return',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>',\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [{\n              className: 'params',\n              variants: [\n                {\n                  begin: IDENT_RE\n                },\n                {\n                  begin: /\\(\\s*\\)/\n                },\n                {\n                  begin: /\\(/,\n                  end: /\\)/,\n                  excludeBegin: true,\n                  excludeEnd: true,\n                  keywords: KEYWORDS,\n                  contains: PARAMS_CONTAINS\n                }\n              ]\n            }]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: IDENT_RE\n          }),\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n}\n\nmodule.exports = arcade;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Augmented Backus-Naur Form\nAuthor: Alex McKibben <alex@nullscope.net>\nWebsite: https://tools.ietf.org/html/rfc5234\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction abnf(hljs) {\n  const regexes = {\n    ruleDeclaration: /^[a-zA-Z][a-zA-Z0-9-]*/,\n    unexpectedChars: /[!@#$^&',?+~`|:]/\n  };\n\n  const keywords = [\n    \"ALPHA\",\n    \"BIT\",\n    \"CHAR\",\n    \"CR\",\n    \"CRLF\",\n    \"CTL\",\n    \"DIGIT\",\n    \"DQUOTE\",\n    \"HEXDIG\",\n    \"HTAB\",\n    \"LF\",\n    \"LWSP\",\n    \"OCTET\",\n    \"SP\",\n    \"VCHAR\",\n    \"WSP\"\n  ];\n\n  const commentMode = hljs.COMMENT(/;/, /$/);\n\n  const terminalBinaryMode = {\n    className: \"symbol\",\n    begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\n  };\n\n  const terminalDecimalMode = {\n    className: \"symbol\",\n    begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\n  };\n\n  const terminalHexadecimalMode = {\n    className: \"symbol\",\n    begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/\n  };\n\n  const caseSensitivityIndicatorMode = {\n    className: \"symbol\",\n    begin: /%[si]/\n  };\n\n  const ruleDeclarationMode = {\n    className: \"attribute\",\n    begin: concat(regexes.ruleDeclaration, /(?=\\s*=)/)\n  };\n\n  return {\n    name: 'Augmented Backus-Naur Form',\n    illegal: regexes.unexpectedChars,\n    keywords: keywords,\n    contains: [\n      ruleDeclarationMode,\n      commentMode,\n      terminalBinaryMode,\n      terminalDecimalMode,\n      terminalHexadecimalMode,\n      caseSensitivityIndicatorMode,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = abnf;\n","/*\nLanguage: Ada\nAuthor: Lars Schulna <kartoffelbrei.mit.muskatnuss@gmail.org>\nDescription: Ada is a general-purpose programming language that has great support for saftey critical and real-time applications.\n             It has been developed by the DoD and thus has been used in military and safety-critical applications (like civil aviation).\n             The first version appeared in the 80s, but it's still actively developed today with\n             the newest standard being Ada2012.\n*/\n\n// We try to support full Ada2012\n//\n// We highlight all appearances of types, keywords, literals (string, char, number, bool)\n// and titles (user defined function/procedure/package)\n// CSS classes are set accordingly\n//\n// Languages causing problems for language detection:\n// xml (broken by Foo : Bar type), elm (broken by Foo : Bar type), vbscript-html (broken by body keyword)\n// sql (ada default.txt has a lot of sql keywords)\n\n/** @type LanguageFn */\nfunction ada(hljs) {\n  // Regular expression for Ada numeric literals.\n  // stolen form the VHDL highlighter\n\n  // Decimal literal:\n  const INTEGER_RE = '\\\\d(_|\\\\d)*';\n  const EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  const DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n\n  // Based literal:\n  const BASED_INTEGER_RE = '\\\\w+';\n  const BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\n  const NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\n  // Identifier regex\n  const ID_REGEX = '[A-Za-z](_?[A-Za-z0-9.])*';\n\n  // bad chars, only allowed in literals\n  const BAD_CHARS = `[]\\\\{\\\\}%#'\"`;\n\n  // Ada doesn't have block comments, only line comments\n  const COMMENTS = hljs.COMMENT('--', '$');\n\n  // variable declarations of the form\n  // Foo : Bar := Baz;\n  // where only Bar will be highlighted\n  const VAR_DECLS = {\n    // TODO: These spaces are not required by the Ada syntax\n    // however, I have yet to see handwritten Ada code where\n    // someone does not put spaces around :\n    begin: '\\\\s+:\\\\s+',\n    end: '\\\\s*(:=|;|\\\\)|=>|$)',\n    // endsWithParent: true,\n    // returnBegin: true,\n    illegal: BAD_CHARS,\n    contains: [\n      {\n        // workaround to avoid highlighting\n        // named loops and declare blocks\n        beginKeywords: 'loop for declare others',\n        endsParent: true\n      },\n      {\n        // properly highlight all modifiers\n        className: 'keyword',\n        beginKeywords: 'not null constant access function procedure in out aliased exception'\n      },\n      {\n        className: 'type',\n        begin: ID_REGEX,\n        endsParent: true,\n        relevance: 0\n      }\n    ]\n  };\n\n  return {\n    name: 'Ada',\n    case_insensitive: true,\n    keywords: {\n      keyword:\n                'abort else new return abs elsif not reverse abstract end ' +\n                'accept entry select access exception of separate aliased exit or some ' +\n                'all others subtype and for out synchronized array function overriding ' +\n                'at tagged generic package task begin goto pragma terminate ' +\n                'body private then if procedure type case in protected constant interface ' +\n                'is raise use declare range delay limited record when delta loop rem while ' +\n                'digits renames with do mod requeue xor',\n      literal:\n                'True False'\n    },\n    contains: [\n      COMMENTS,\n      // strings \"foobar\"\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        contains: [{\n          begin: /\"\"/,\n          relevance: 0\n        }]\n      },\n      // characters ''\n      {\n        // character literals always contain one char\n        className: 'string',\n        begin: /'.'/\n      },\n      {\n        // number literals\n        className: 'number',\n        begin: NUMBER_RE,\n        relevance: 0\n      },\n      {\n        // Attributes\n        className: 'symbol',\n        begin: \"'\" + ID_REGEX\n      },\n      {\n        // package definition, maybe inside generic\n        className: 'title',\n        begin: '(\\\\bwith\\\\s+)?(\\\\bprivate\\\\s+)?\\\\bpackage\\\\s+(\\\\bbody\\\\s+)?',\n        end: '(is|$)',\n        keywords: 'package body',\n        excludeBegin: true,\n        excludeEnd: true,\n        illegal: BAD_CHARS\n      },\n      {\n        // function/procedure declaration/definition\n        // maybe inside generic\n        begin: '(\\\\b(with|overriding)\\\\s+)?\\\\b(function|procedure)\\\\s+',\n        end: '(\\\\bis|\\\\bwith|\\\\brenames|\\\\)\\\\s*;)',\n        keywords: 'overriding function procedure with is renames return',\n        // we need to re-match the 'function' keyword, so that\n        // the title mode below matches only exactly once\n        returnBegin: true,\n        contains:\n                [\n                  COMMENTS,\n                  {\n                    // name of the function/procedure\n                    className: 'title',\n                    begin: '(\\\\bwith\\\\s+)?\\\\b(function|procedure)\\\\s+',\n                    end: '(\\\\(|\\\\s+|$)',\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    illegal: BAD_CHARS\n                  },\n                  // 'self'\n                  // // parameter types\n                  VAR_DECLS,\n                  {\n                    // return type\n                    className: 'type',\n                    begin: '\\\\breturn\\\\s+',\n                    end: '(\\\\s+|;|$)',\n                    keywords: 'return',\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    // we are done with functions\n                    endsParent: true,\n                    illegal: BAD_CHARS\n\n                  }\n                ]\n      },\n      {\n        // new type declarations\n        // maybe inside generic\n        className: 'type',\n        begin: '\\\\b(sub)?type\\\\s+',\n        end: '\\\\s+',\n        keywords: 'type',\n        excludeBegin: true,\n        illegal: BAD_CHARS\n      },\n\n      // see comment above the definition\n      VAR_DECLS\n\n      // no markup\n      // relevance boosters for small snippets\n      // {begin: '\\\\s*=>\\\\s*'},\n      // {begin: '\\\\s*:=\\\\s*'},\n      // {begin: '\\\\s+:=\\\\s+'},\n    ]\n  };\n}\n\nmodule.exports = ada;\n","/*\nLanguage: ARM Assembly\nAuthor: Dan Panzarella <alsoelp@gmail.com>\nDescription: ARM Assembly including Thumb and Thumb2 instructions\nCategory: assembler\n*/\n\n/** @type LanguageFn */\nfunction armasm(hljs) {\n  // local labels: %?[FB]?[AT]?\\d{1,2}\\w+\n\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('^[ \\\\t]*(?=#)', '$', {\n        relevance: 0,\n        excludeBegin: true\n      }),\n      hljs.COMMENT('[;@]', '$', {\n        relevance: 0\n      }),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  return {\n    name: 'ARM Assembly',\n    case_insensitive: true,\n    aliases: ['arm'],\n    keywords: {\n      $pattern: '\\\\.?' + hljs.IDENT_RE,\n      meta:\n        // GNU preprocs\n        '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ' +\n        // ARM directives\n        'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',\n      built_in:\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 ' + // standard registers\n        'pc lr sp ip sl sb fp ' + // typical regs plus backward compatibility\n        'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 ' + // more regs and fp\n        'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 ' + // coprocessor regs\n        'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 ' + // more coproc\n        'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 ' + // advanced SIMD NEON regs\n\n        // program status registers\n        'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf ' +\n        'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf ' +\n\n        // NEON and VFP registers\n        's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 ' +\n        's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 ' +\n        'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 ' +\n        'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ' +\n\n        '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @'\n    },\n    contains: [\n      {\n        className: 'keyword',\n        begin: '\\\\b(' + // mnemonics\n            'adc|' +\n            '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|' +\n            'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|' +\n            'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|' +\n            'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|' +\n            'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|' +\n            'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|' +\n            'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|' +\n            'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|' +\n            'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|' +\n            'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|' +\n            '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|' +\n            'wfe|wfi|yield' +\n        ')' +\n        '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?' + // condition codes\n        '[sptrx]?' + // legal postfixes\n        '(?=\\\\s)' // followed by space\n      },\n      COMMENT,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '[^\\\\\\\\]\\'',\n        relevance: 0\n      },\n      {\n        className: 'title',\n        begin: '\\\\|',\n        end: '\\\\|',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      {\n        className: 'number',\n        variants: [\n          { // hex\n            begin: '[#$=]?0x[0-9a-f]+'\n          },\n          { // bin\n            begin: '[#$=]?0b[01]+'\n          },\n          { // literal\n            begin: '[#$=]\\\\d+'\n          },\n          { // bare number\n            begin: '\\\\b\\\\d+'\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'symbol',\n        variants: [\n          { // GNU ARM syntax\n            begin: '^[ \\\\t]*[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+:'\n          },\n          { // ARM syntax\n            begin: '^[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+'\n          },\n          { // label reference\n            begin: '[=#]\\\\w+'\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = armasm;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: concat(/\"/, either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS,\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: ActionScript\nAuthor: Alexander Myadzel <myadzel@gmail.com>\nCategory: scripting\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction actionscript(hljs) {\n  const IDENT_RE = /[a-zA-Z_$][a-zA-Z0-9_$]*/;\n  const IDENT_FUNC_RETURN_TYPE_RE = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/;\n\n  const AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: /[.]{3}/,\n    end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    name: 'ActionScript',\n    aliases: [ 'as' ],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'package',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        beginKeywords: 'import include',\n        end: /;/,\n        keywords: { 'meta-keyword': 'import include' }\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /[{;]/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          { begin: concat(/:\\s*/, IDENT_FUNC_RETURN_TYPE_RE) }\n        ]\n      },\n      hljs.METHOD_GUARD\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = actionscript;\n"],"names":["module","exports","hljs","builtInTypeMode","className","begin","objectHandleMode","genericMode","end","contains","name","aliases","keywords","illegal","BACKSLASH_ESCAPE","relevance","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","beginKeywords","optional","re","concat","_len","arguments","length","args","Array","_key","map","x","source","join","ARDUINO_KW","ARDUINO","COMMENT","DECLTYPE_AUTO_RE","NAMESPACE_RE","FUNCTION_TYPE_RE","CPP_PRIMITIVE_TYPES","STRINGS","variants","END_SAME_AS_BEGIN","NUMBERS","PREPROCESSOR","inherit","TITLE_MODE","IDENT_RE","FUNCTION_TITLE","CPP_KEYWORDS","keyword","built_in","_relevance_hints","literal","FUNCTION_DISPATCH","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","FUNCTION_DECLARATION","returnBegin","excludeEnd","endsWithParent","classNameAliases","preprocessor","strings","cPlusPlus","kws","_","supersetOf","IP_ADDRESS","case_insensitive","HASH_COMMENT_MODE","QUOTE_STRING_MODE","nomarkup","starts","either","_len2","_key2","STRING","PARAMS","C_NUMBER_MODE","COMMENT_MODE_1","COMMENTS","UNDERSCORE_TITLE_MODE","KEYWORDS","NUMBER","C_NUMBER_RE","SUBST","TEMPLATE_STRING","APOS_STRING_MODE","REGEXP_MODE","PARAMS_CONTAINS","RE_STARTERS_RE","excludeBegin","regexes","ruleDeclaration","unexpectedChars","commentMode","ruleDeclarationMode","NUMBER_MODE","INTEGER_RE","EXPONENT_RE","NUMBER_RE","ID_REGEX","BAD_CHARS","VAR_DECLS","endsParent","$pattern","meta","_hljs","HTTP_VERBS","AS3_REST_ARG_MODE","METHOD_GUARD"],"sourceRoot":""}