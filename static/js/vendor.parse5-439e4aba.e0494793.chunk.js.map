{"version":3,"file":"static/js/vendor.parse5-439e4aba.e0494793.chunk.js","mappings":"0PAgBA,IAAIA,GACJ,SAAWA,GACPA,EAAcA,EAAuB,QAAI,GAAK,UAC9CA,EAAcA,EAA2B,YAAI,GAAK,cAClDA,EAAcA,EAA2B,YAAI,GAAK,cAClDA,EAAcA,EAAuB,QAAI,GAAK,UAC9CA,EAAcA,EAAiC,kBAAI,GAAK,oBACxDA,EAAcA,EAA0B,WAAI,GAAK,aACjDA,EAAcA,EAAuB,QAAI,GAAK,UAC9CA,EAAcA,EAAoB,KAAI,GAAK,OAC3CA,EAAcA,EAAwB,SAAI,GAAK,WAC/CA,EAAcA,EAA6B,cAAI,GAAK,gBACpDA,EAAcA,EAA0B,WAAI,IAAM,aAClDA,EAAcA,EAA+B,gBAAI,IAAM,kBACvDA,EAAcA,EAA6B,cAAI,IAAM,gBACrDA,EAAcA,EAAsB,OAAI,IAAM,SAC9CA,EAAcA,EAAuB,QAAI,IAAM,UAC/CA,EAAcA,EAAyB,UAAI,IAAM,YACjDA,EAAcA,EAAkC,mBAAI,IAAM,qBAC1DA,EAAcA,EAA2B,YAAI,IAAM,cACnDA,EAAcA,EAA0B,WAAI,IAAM,aAClDA,EAAcA,EAA2B,YAAI,IAAM,cACnDA,EAAcA,EAA8B,eAAI,IAAM,iBACtDA,EAAcA,EAAgC,iBAAI,IAAM,mBACxDA,EAAcA,EAAoC,qBAAI,IAAM,sBAC/D,CAxBD,CAwBGA,IAAkBA,EAAgB,CAAC,IACtC,MAAMC,EAAW,CACbC,WAAY,EACZC,UAAW,EACXC,aAAc,EACdC,SAAU,EACVC,QAAS,EACTC,WAAY,GAEVC,EAAuB,IAAIC,IAAI,CAACC,EAAAA,OAAEC,MAAOD,EAAAA,OAAEE,MAAOF,EAAAA,OAAEG,MAAOH,EAAAA,OAAEI,MAAOJ,EAAAA,OAAEK,KACtEC,EAAuB,CACzBC,kBAAkB,EAClBC,wBAAwB,EACxBC,YAAaC,EAAAA,EACbC,aAAc,MAGX,MAAMC,EACTC,WAAAA,CAAYC,EAASC,GAIC,IAFtBC,EAAeC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAElBG,EAAaH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACZI,KAAKL,gBAAkBA,EACvBK,KAAKD,cAAgBA,EACrBC,KAAKC,aAAe,KACpBD,KAAKE,SAAU,EAEfF,KAAKG,cAAgBlC,EAAcmC,QAEnCJ,KAAKK,sBAAwBpC,EAAcmC,QAE3CJ,KAAKM,YAAc,KAEnBN,KAAKO,YAAc,KAEnBP,KAAKQ,kBAAmB,EAOxBR,KAAKS,uBAAyB,GAE9BT,KAAKU,uBAAyB,GAE9BV,KAAKW,uCAAwC,EAE7CX,KAAKY,YAAa,EAElBZ,KAAKa,iBAAkB,EAEvBb,KAAKc,wBAAyB,EAC9Bd,KAAKP,QAAU,IACRR,KACAQ,GAEPO,KAAKZ,YAAcY,KAAKP,QAAQL,YAChCY,KAAKV,aAAeU,KAAKP,QAAQH,aAE7BU,KAAKV,eACLU,KAAKP,QAAQN,wBAAyB,GAE1Ca,KAAKN,SAAWA,QAA2CA,EAAWM,KAAKZ,YAAY2B,iBACvFf,KAAKgB,UAAY,IAAIC,EAAAA,EAAUjB,KAAKP,QAASO,MAC7CA,KAAKkB,yBAA2B,IAAIC,EAAAA,EAAsBnB,KAAKZ,aAC/DY,KAAKoB,kBAAoBzB,GAAkB0B,EAAAA,EAAAA,UAASrB,KAAKZ,YAAYkC,WAAW3B,IAAoBhB,EAAAA,OAAE4C,QACtGvB,KAAKwB,iBAAiB7B,QAAyDA,EAAkBK,KAAKN,SAAUM,KAAKoB,mBACrHpB,KAAKyB,aAAe,IAAIC,EAAAA,EAAiB1B,KAAKN,SAAUM,KAAKZ,YAAaY,KAC9E,CAEA,YAAO2B,CAAMC,EAAMnC,GACf,MAAMoC,EAAS,IAAI7B,KAAKP,GAExB,OADAoC,EAAOb,UAAUc,MAAMF,GAAM,GACtBC,EAAOnC,QAClB,CACA,wBAAOqC,CAAkBpC,EAAiBF,GACtC,MAAMuC,EAAO,IACN/C,KACAQ,GAIPE,UAA4EA,EAAkBqC,EAAK5C,YAAY6C,cAAcC,EAAAA,UAAGC,SAAUC,EAAAA,GAAGC,KAAM,KAInJ,MAAMC,EAAeN,EAAK5C,YAAY6C,cAAc,eAAgBG,EAAAA,GAAGC,KAAM,IACvER,EAAS,IAAI7B,KAAKgC,EAAMM,EAAc3C,GAQ5C,OAPIkC,EAAOT,oBAAsBzC,EAAAA,OAAEwD,UAC/BN,EAAOpB,uBAAuB8B,QAAQtE,EAAcuE,aAExDX,EAAOY,mCACPZ,EAAOa,yBACPb,EAAOc,sBACPd,EAAOe,6BACAf,CACX,CACAgB,WAAAA,GACI,MAAMC,EAAc9C,KAAKZ,YAAY2D,cAAc/C,KAAKN,UAClDsD,EAAWhD,KAAKZ,YAAY6D,yBAElC,OADAjD,KAAKkD,YAAYJ,EAAaE,GACvBA,CACX,CAGAG,IAAAA,CAAKC,EAAOC,EAAMC,GACd,IAAIC,EACJ,IAAKvD,KAAKV,aACN,OACJ,MAAMkE,EAAgC,QAAzBD,EAAKH,EAAMK,gBAA6B,IAAPF,EAAgBA,EAAKrF,EAC7DwF,EAAM,CACRL,OACAlF,UAAWqF,EAAIrF,UACfC,SAAUoF,EAAIpF,SACdC,YAAamF,EAAInF,YACjBC,QAASgF,EAAcE,EAAIrF,UAAYqF,EAAIlF,QAC3CC,OAAQ+E,EAAcE,EAAIpF,SAAWoF,EAAIjF,OACzCC,UAAW8E,EAAcE,EAAInF,YAAcmF,EAAIhF,WAEnDwB,KAAKV,aAAaoE,EACtB,CAGAC,UAAAA,CAAWC,EAAMC,EAAKC,GAClB,IAAIP,EAAIQ,EACsC,QAA7CA,GAAMR,EAAKvD,KAAKZ,aAAauE,kBAA+B,IAAPI,GAAyBA,EAAGC,KAAKT,EAAIK,GACvFE,GAAS9D,KAAKyB,aAAawC,SAAW,GACtCjE,KAAKwB,iBAAiBoC,EAAMC,EACpC,CAEAK,SAAAA,CAAUN,EAAME,GACZ,IAAIP,EAAIQ,EAKR,GAJI/D,KAAKP,QAAQN,wBACba,KAAKmE,gBAAgBP,EAAM5D,KAAKC,cAES,QAA5C8D,GAAMR,EAAKvD,KAAKZ,aAAa8E,iBAA8B,IAAPH,GAAyBA,EAAGC,KAAKT,EAAIK,EAAM5D,KAAKyB,aAAa2C,SAC9GN,EAAO,CACP,IAAIM,EACAC,EAC+B,IAA/BrE,KAAKyB,aAAawC,UAAkBjE,KAAKL,iBACzCyE,EAAUpE,KAAKL,gBACf0E,EAAerE,KAAKoB,qBAGjBgD,UAASC,gBAAiBrE,KAAKyB,cAEtCzB,KAAKwB,iBAAiB4C,EAASC,EACnC,CACJ,CACA7C,gBAAAA,CAAiB4C,EAASP,GACtB,MAAMS,EAASF,IAAYpE,KAAKN,UAAYM,KAAKZ,YAAYmF,gBAAgBH,KAAahC,EAAAA,GAAGC,KAC7FrC,KAAKQ,kBAAoB8D,EACzBtE,KAAKgB,UAAUwD,eAAiBF,IAAWtE,KAAKyE,oBAAoBZ,EAAKO,EAC7E,CAEAM,oBAAAA,CAAqBzE,EAAc0E,GAC/B3E,KAAK4E,eAAe3E,EAAcmC,EAAAA,GAAGC,MACrCrC,KAAKgB,UAAU6D,MAAQF,EACvB3E,KAAKK,sBAAwBL,KAAKG,cAClCH,KAAKG,cAAgBlC,EAAc6G,IACvC,CACAC,wBAAAA,GACI/E,KAAKG,cAAgBlC,EAAc6G,KACnC9E,KAAKK,sBAAwBpC,EAAc+G,QAC3ChF,KAAKgB,UAAU6D,MAAQI,EAAAA,EAAcC,SACzC,CAGAC,0BAAAA,GACI,OAAsC,IAA/BnF,KAAKyB,aAAawC,UAAkBjE,KAAKL,gBAC1CK,KAAKL,gBACLK,KAAKyB,aAAa2C,OAC5B,CAEAxB,0BAAAA,GACI,IAAIgB,EAAO5D,KAAKL,gBAChB,KAAOiE,GAAM,CACT,GAAI5D,KAAKZ,YAAYkC,WAAWsC,KAAU1B,EAAAA,UAAGkD,KAAM,CAC/CpF,KAAKO,YAAcqD,EACnB,KACJ,CACAA,EAAO5D,KAAKZ,YAAYiG,cAAczB,EAC1C,CACJ,CACAnB,gCAAAA,GACI,GAAKzC,KAAKL,iBAAmBK,KAAKZ,YAAYmF,gBAAgBvE,KAAKL,mBAAqByC,EAAAA,GAAGC,KAG3F,OAAQrC,KAAKoB,mBACT,KAAKzC,EAAAA,OAAE2G,MACP,KAAK3G,EAAAA,OAAE4G,SACHvF,KAAKgB,UAAU6D,MAAQI,EAAAA,EAAcO,OACrC,MAEJ,KAAK7G,EAAAA,OAAE8G,MACP,KAAK9G,EAAAA,OAAE+G,IACP,KAAK/G,EAAAA,OAAEgH,OACP,KAAKhH,EAAAA,OAAEiH,QACP,KAAKjH,EAAAA,OAAEkH,SACP,KAAKlH,EAAAA,OAAEmH,SACH9F,KAAKgB,UAAU6D,MAAQI,EAAAA,EAAcc,QACrC,MAEJ,KAAKpH,EAAAA,OAAEqH,OACHhG,KAAKgB,UAAU6D,MAAQI,EAAAA,EAAcgB,YACrC,MAEJ,KAAKtH,EAAAA,OAAEuG,UACHlF,KAAKgB,UAAU6D,MAAQI,EAAAA,EAAcC,UAMjD,CAGAgB,gBAAAA,CAAiB9C,GACb,MAAM+C,EAAO/C,EAAM+C,MAAQ,GACrBC,EAAWhD,EAAMgD,UAAY,GAC7BC,EAAWjD,EAAMiD,UAAY,GAEnC,GADArG,KAAKZ,YAAYkH,gBAAgBtG,KAAKN,SAAUyG,EAAMC,EAAUC,GAC5DjD,EAAMK,SAAU,CAChB,MACM8C,EADmBvG,KAAKZ,YAAYoH,cAAcxG,KAAKN,UACxB+G,MAAM7C,GAAS5D,KAAKZ,YAAYsH,mBAAmB9C,KACpF2C,GACAvG,KAAKZ,YAAYuH,0BAA0BJ,EAAanD,EAAMK,SAEtE,CACJ,CAEAmD,oBAAAA,CAAqBC,EAASpD,GAC1B,GAAIzD,KAAKP,QAAQN,uBAAwB,CACrC,MAAMqE,EAAMC,GAAY,IACjBA,EACHqD,SAAUrD,GAEdzD,KAAKZ,YAAYuH,0BAA0BE,EAASrD,EACxD,CACA,GAAIxD,KAAK+G,iCACL/G,KAAKgH,qBAAqBH,OAEzB,CACD,MAAMI,EAASjH,KAAKyB,aAAayF,yBACjClH,KAAKZ,YAAY+H,YAAYF,EAAQJ,EACzC,CACJ,CAMAO,cAAAA,CAAehE,EAAOiE,GAClB,MAAMR,EAAU7G,KAAKZ,YAAY6C,cAAcmB,EAAMkE,QAASD,EAAcjE,EAAMmE,OAClFvH,KAAK4G,qBAAqBC,EAASzD,EAAMK,SAC7C,CAEAmB,cAAAA,CAAexB,EAAOiE,GAClB,MAAMR,EAAU7G,KAAKZ,YAAY6C,cAAcmB,EAAMkE,QAASD,EAAcjE,EAAMmE,OAClFvH,KAAK4G,qBAAqBC,EAASzD,EAAMK,UACzCzD,KAAKyB,aAAa+F,KAAKX,EAASzD,EAAMqE,MAC1C,CAEAC,kBAAAA,CAAmBJ,EAASG,GACxB,MAAMZ,EAAU7G,KAAKZ,YAAY6C,cAAcqF,EAASlF,EAAAA,GAAGC,KAAM,IACjErC,KAAK4G,qBAAqBC,EAAS,MACnC7G,KAAKyB,aAAa+F,KAAKX,EAASY,EACpC,CAEAE,eAAAA,CAAgBvE,GACZ,MAAMwE,EAAO5H,KAAKZ,YAAY6C,cAAcmB,EAAMkE,QAASlF,EAAAA,GAAGC,KAAMe,EAAMmE,OACpEM,EAAU7H,KAAKZ,YAAY6D,yBACjCjD,KAAKZ,YAAY0I,mBAAmBF,EAAMC,GAC1C7H,KAAK4G,qBAAqBgB,EAAMxE,EAAMK,UACtCzD,KAAKyB,aAAa+F,KAAKI,EAAMxE,EAAMqE,OAC/BzH,KAAKP,QAAQN,wBACba,KAAKZ,YAAYuH,0BAA0BkB,EAAS,KAC5D,CAEAnF,sBAAAA,GACI,MAAMmE,EAAU7G,KAAKZ,YAAY6C,cAAcC,EAAAA,UAAGG,KAAMD,EAAAA,GAAGC,KAAM,IAC7DrC,KAAKP,QAAQN,wBACba,KAAKZ,YAAYuH,0BAA0BE,EAAS,MACxD7G,KAAKZ,YAAY+H,YAAYnH,KAAKyB,aAAa2C,QAASyC,GACxD7G,KAAKyB,aAAa+F,KAAKX,EAASlI,EAAAA,OAAE0D,KACtC,CAEA0F,kBAAAA,CAAmB3E,EAAO6D,GACtB,MAAMe,EAAchI,KAAKZ,YAAY6I,kBAAkB7E,EAAM8E,MAC7DlI,KAAKZ,YAAY+H,YAAYF,EAAQe,GACjChI,KAAKP,QAAQN,wBACba,KAAKZ,YAAYuH,0BAA0BqB,EAAa5E,EAAMK,SAEtE,CAEA0E,iBAAAA,CAAkB/E,GACd,IAAI6D,EACAmB,EAcJ,GAbIpI,KAAK+G,oCACFE,SAAQmB,iBAAkBpI,KAAKqI,gCAC9BD,EACApI,KAAKZ,YAAYkJ,iBAAiBrB,EAAQ7D,EAAMmF,MAAOH,GAGvDpI,KAAKZ,YAAYoJ,WAAWvB,EAAQ7D,EAAMmF,SAI9CtB,EAASjH,KAAKyB,aAAayF,yBAC3BlH,KAAKZ,YAAYoJ,WAAWvB,EAAQ7D,EAAMmF,SAEzCnF,EAAMK,SACP,OACJ,MAAMgF,EAAWzI,KAAKZ,YAAYoH,cAAcS,GAC1CyB,EAAcN,EAAgBK,EAASE,YAAYP,GAAiBK,EAAS5I,OAC7E+I,EAAWH,EAASC,EAAc,GAGxC,GADc1I,KAAKZ,YAAYyJ,0BAA0BD,GAC9C,CACP,MAAM,QAAEtK,EAAO,OAAEC,EAAM,UAAEC,GAAc4E,EAAMK,SAC7CzD,KAAKZ,YAAY0J,6BAA6BF,EAAU,CAAEtK,UAASC,SAAQC,aAC/E,MACSwB,KAAKP,QAAQN,wBAClBa,KAAKZ,YAAYuH,0BAA0BiC,EAAUxF,EAAMK,SAEnE,CAEAP,WAAAA,CAAY6F,EAAOC,GACf,IAAK,IAAIC,EAAQjJ,KAAKZ,YAAY2D,cAAcgG,GAAQE,EAAOA,EAAQjJ,KAAKZ,YAAY2D,cAAcgG,GAClG/I,KAAKZ,YAAY8J,WAAWD,GAC5BjJ,KAAKZ,YAAY+H,YAAY6B,EAAWC,EAEhD,CAEA9E,eAAAA,CAAgB0C,EAASsC,GACrB,GAAInJ,KAAKZ,YAAYyJ,0BAA0BhC,IAAYsC,EAAa1F,SAAU,CAC9E,MAAM2F,EAAQD,EAAa1F,SACrB4F,EAAKrJ,KAAKZ,YAAYkC,WAAWuF,GACjCyC,EAGNH,EAAaI,OAASC,EAAAA,EAAUC,SAAWJ,IAAOF,EAAa7B,QACzD,CACEoC,OAAQ,IAAKN,GACb9K,QAAS8K,EAAM9K,QACfC,OAAQ6K,EAAM7K,OACdC,UAAW4K,EAAM5K,WAEnB,CACEF,QAAS8K,EAAMjL,UACfI,OAAQ6K,EAAMhL,SACdI,UAAW4K,EAAM/K,aAEzB2B,KAAKZ,YAAY0J,6BAA6BjC,EAASyC,EAC3D,CACJ,CAEAK,0CAAAA,CAA2CvG,GAEvC,IAAKpD,KAAKQ,iBACN,OAAO,EACX,IAAI4D,EACAC,EAQJ,OAPmC,IAA/BrE,KAAKyB,aAAawC,UAAkBjE,KAAKL,iBACzCyE,EAAUpE,KAAKL,gBACf0E,EAAerE,KAAKoB,qBAGjBgD,UAASC,gBAAiBrE,KAAKyB,eAElC2B,EAAMqE,QAAU9I,EAAAA,OAAEiL,KAClB5J,KAAKZ,YAAYkC,WAAW8C,KAAalC,EAAAA,UAAG2H,gBAC5C7J,KAAKZ,YAAYmF,gBAAgBH,KAAahC,EAAAA,GAAG0H,UAKrD9J,KAAKgB,UAAUwD,gBAGTpB,EAAMqE,QAAU9I,EAAAA,OAAEoL,QAAU3G,EAAMqE,QAAU9I,EAAAA,OAAEqL,cAC3ChK,KAAKyE,oBAAoBJ,EAAcD,EAAShC,EAAAA,GAAGC,MAChE,CAEA4H,aAAAA,CAAc7G,GACV,OAAQA,EAAMmG,MACV,KAAKC,EAAAA,EAAUU,UACXlK,KAAKmK,YAAY/G,GACjB,MAEJ,KAAKoG,EAAAA,EAAUY,eACXpK,KAAKqK,gBAAgBjH,GACrB,MAEJ,KAAKoG,EAAAA,EAAUc,QACXtK,KAAKuK,UAAUnH,GACf,MAEJ,KAAKoG,EAAAA,EAAUgB,QACXxK,KAAKyK,UAAUrH,GACf,MAEJ,KAAKoG,EAAAA,EAAUkB,UACX1K,KAAK2K,iBAAiBvH,GACtB,MAEJ,KAAKoG,EAAAA,EAAUC,QACXzJ,KAAK4K,SAASxH,GACd,MAEJ,KAAKoG,EAAAA,EAAUqB,IACX7K,KAAK8K,MAAM1H,GACX,MAEJ,KAAKoG,EAAAA,EAAUuB,qBACX/K,KAAKgL,sBAAsB5H,GAIvC,CAGAqB,mBAAAA,CAAoBZ,EAAKgD,EAASoE,GAC9B,MAAMC,EAAKlL,KAAKZ,YAAYmF,gBAAgBsC,GACtCU,EAAQvH,KAAKZ,YAAY+L,YAAYtE,GAC3C,OAAOuE,EAAAA,GAAkCvH,EAAKqH,EAAI3D,EAAO0D,EAC7D,CAGAI,oCAAAA,GACI,MAAMC,EAAatL,KAAKkB,yBAAyBqK,QAAQ1L,OACzD,GAAIyL,EAAY,CACZ,MAAME,EAAWxL,KAAKkB,yBAAyBqK,QAAQE,WAAWC,GAAUA,EAAMnC,OAASoC,EAAAA,EAAUC,QAAU5L,KAAKyB,aAAaoK,SAASH,EAAM7E,WAEhJ,IAAK,IAAIiF,EADSN,EAAW,EAAIF,EAAa,EAAIE,EAAW,EACrCM,GAAK,EAAGA,IAAK,CACjC,MAAMJ,EAAQ1L,KAAKkB,yBAAyBqK,QAAQO,GACpD9L,KAAK4E,eAAe8G,EAAMtI,MAAOpD,KAAKZ,YAAYmF,gBAAgBmH,EAAM7E,UACxE6E,EAAM7E,QAAU7G,KAAKyB,aAAa2C,OACtC,CACJ,CACJ,CAGA2H,eAAAA,GACI/L,KAAKyB,aAAauK,yBAClBhM,KAAKyB,aAAawK,0BAClBjM,KAAKkB,yBAAyBgL,oBAC9BlM,KAAKG,cAAgBlC,EAAckO,MACvC,CAEAC,cAAAA,GACIpM,KAAKyB,aAAa4K,oCAAoC1N,EAAAA,OAAE2N,GACxDtM,KAAKyB,aAAa8K,sBAAsB5N,EAAAA,OAAE2N,EAC9C,CAGA3J,mBAAAA,GACI,IAAK,IAAImJ,EAAI9L,KAAKyB,aAAawC,SAAU6H,GAAK,EAAGA,IAE7C,OAAc,IAANA,GAAW9L,KAAKL,gBAAkBK,KAAKoB,kBAAoBpB,KAAKyB,aAAa+K,OAAOV,IACxF,KAAKnN,EAAAA,OAAEK,GAEH,YADAgB,KAAKG,cAAgBlC,EAAckO,QAGvC,KAAKxN,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEI,MACP,KAAKJ,EAAAA,OAAEG,MAEH,YADAkB,KAAKG,cAAgBlC,EAAcwO,eAGvC,KAAK9N,EAAAA,OAAE+N,QAEH,YADA1M,KAAKG,cAAgBlC,EAAc0O,YAGvC,KAAKhO,EAAAA,OAAEiO,SAEH,YADA5M,KAAKG,cAAgBlC,EAAc4O,iBAGvC,KAAKlO,EAAAA,OAAEC,MAEH,YADAoB,KAAKG,cAAgBlC,EAAc6O,UAGvC,KAAKnO,EAAAA,OAAEoO,KAEH,YADA/M,KAAKG,cAAgBlC,EAAc+G,SAGvC,KAAKrG,EAAAA,OAAEqO,SAEH,YADAhN,KAAKG,cAAgBlC,EAAcgP,aAGvC,KAAKtO,EAAAA,OAAEuO,OAEH,YADAlN,KAAKmN,6BAA6BrB,GAGtC,KAAKnN,EAAAA,OAAEwD,SAEH,YADAnC,KAAKG,cAAgBH,KAAKS,uBAAuB,IAGrD,KAAK9B,EAAAA,OAAE0D,KAEH,YADArC,KAAKG,cAAgBH,KAAKM,YAAcrC,EAAcmP,WAAanP,EAAcoP,aAGrF,KAAK1O,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAE4O,GACH,GAAIzB,EAAI,EAEJ,YADA9L,KAAKG,cAAgBlC,EAAcuP,SAGvC,MAEJ,KAAK7O,EAAAA,OAAE8O,KACH,GAAI3B,EAAI,EAEJ,YADA9L,KAAKG,cAAgBlC,EAAcyP,SAOnD1N,KAAKG,cAAgBlC,EAAc+G,OACvC,CAEAmI,4BAAAA,CAA6BQ,GACzB,GAAIA,EAAY,EACZ,IAAK,IAAI7B,EAAI6B,EAAY,EAAG7B,EAAI,EAAGA,IAAK,CACpC,MAAMzC,EAAKrJ,KAAKyB,aAAa+K,OAAOV,GACpC,GAAIzC,IAAO1K,EAAAA,OAAEwD,SACT,MAEC,GAAIkH,IAAO1K,EAAAA,OAAEC,MAEd,YADAoB,KAAKG,cAAgBlC,EAAc2P,mBAG3C,CAEJ5N,KAAKG,cAAgBlC,EAAc4P,SACvC,CAGAC,+BAAAA,CAAgCzE,GAC5B,OAAO5K,EAAqBsP,IAAI1E,EACpC,CAEAtC,8BAAAA,GACI,OAAO/G,KAAKc,wBAA0Bd,KAAK8N,gCAAgC9N,KAAKyB,aAAa4C,aACjG,CAEAgE,4BAAAA,GACI,IAAK,IAAIyD,EAAI9L,KAAKyB,aAAawC,SAAU6H,GAAK,EAAGA,IAAK,CAClD,MAAMkC,EAAchO,KAAKyB,aAAawM,MAAMnC,GAC5C,OAAQ9L,KAAKyB,aAAa+K,OAAOV,IAC7B,KAAKnN,EAAAA,OAAEwD,SACH,GAAInC,KAAKZ,YAAYmF,gBAAgByJ,KAAiB5L,EAAAA,GAAGC,KACrD,MAAO,CAAE4E,OAAQjH,KAAKZ,YAAY8O,mBAAmBF,GAAc5F,cAAe,MAEtF,MAEJ,KAAKzJ,EAAAA,OAAEC,MAAO,CACV,MAAMqI,EAASjH,KAAKZ,YAAYiG,cAAc2I,GAC9C,OAAI/G,EACO,CAAEA,SAAQmB,cAAe4F,GAE7B,CAAE/G,OAAQjH,KAAKyB,aAAawM,MAAMnC,EAAI,GAAI1D,cAAe,KACpE,EAIR,CACA,MAAO,CAAEnB,OAAQjH,KAAKyB,aAAawM,MAAM,GAAI7F,cAAe,KAChE,CAEApB,oBAAAA,CAAqBH,GACjB,MAAMpD,EAAWzD,KAAKqI,+BAClB5E,EAAS2E,cACTpI,KAAKZ,YAAY+O,aAAa1K,EAASwD,OAAQJ,EAASpD,EAAS2E,eAGjEpI,KAAKZ,YAAY+H,YAAY1D,EAASwD,OAAQJ,EAEtD,CAGAuH,iBAAAA,CAAkBvH,EAASwH,GACvB,MAAMnD,EAAKlL,KAAKZ,YAAYmF,gBAAgBsC,GAC5C,OAAOyH,EAAAA,iBAAiBpD,GAAI6C,IAAIM,EACpC,CAEAlE,WAAAA,CAAY/G,GAER,GADApD,KAAKa,iBAAkB,EACnBb,KAAKgB,UAAUwD,eAw/E3B,SAAmC+J,EAAGnL,GAClCmL,EAAEpG,kBAAkB/E,GACpBmL,EAAE3N,YAAa,CACnB,CA1/EY4N,CAA0BxO,KAAMoD,QAGpC,OAAQpD,KAAKG,eACT,KAAKlC,EAAcmC,QACfqO,EAAmBzO,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcyQ,YACfC,EAAgB3O,KAAMoD,GACtB,MAEJ,KAAKnF,EAAcoP,YACfuB,EAAgB5O,KAAMoD,GACtB,MAEJ,KAAKnF,EAAcyP,QACfmB,EAAY7O,KAAMoD,GAClB,MAEJ,KAAKnF,EAAc6Q,kBACfC,EAAoB/O,KAAMoD,GAC1B,MAEJ,KAAKnF,EAAcmP,WACf4B,EAAehP,KAAMoD,GACrB,MAEJ,KAAKnF,EAAc+G,QACnB,KAAK/G,EAAc0O,WACnB,KAAK1O,EAAcuP,QACnB,KAAKvP,EAAcuE,YACfyM,EAAgBjP,KAAMoD,GACtB,MAEJ,KAAKnF,EAAc6G,KACnB,KAAK7G,EAAc4P,UACnB,KAAK5P,EAAc2P,mBACf5N,KAAKmI,kBAAkB/E,GACvB,MAEJ,KAAKnF,EAAc6O,SACnB,KAAK7O,EAAcwO,cACnB,KAAKxO,EAAckO,OACf+C,EAAiBlP,KAAMoD,GACvB,MAEJ,KAAKnF,EAAckR,cACfC,EAAqBpP,KAAMoD,GAC3B,MAEJ,KAAKnF,EAAc4O,gBACfwC,GAAmBrP,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcqR,WACfC,GAAevP,KAAMoD,GACrB,MAEJ,KAAKnF,EAAcuR,iBACfC,GAAoBzP,KAAMoD,GAMtC,CAEAiH,eAAAA,CAAgBjH,GAEZ,GADApD,KAAKa,iBAAkB,EACnBb,KAAKgB,UAAUwD,eA66E3B,SAAuC+J,EAAGnL,GACtCA,EAAMmF,MAAQmH,EAAAA,GACdnB,EAAEpG,kBAAkB/E,EACxB,CA/6EYuM,CAA8B3P,KAAMoD,QAGxC,OAAQpD,KAAKG,eACT,KAAKlC,EAAcmC,QACfqO,EAAmBzO,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcyQ,YACfC,EAAgB3O,KAAMoD,GACtB,MAEJ,KAAKnF,EAAcoP,YACfuB,EAAgB5O,KAAMoD,GACtB,MAEJ,KAAKnF,EAAcyP,QACfmB,EAAY7O,KAAMoD,GAClB,MAEJ,KAAKnF,EAAc6Q,kBACfC,EAAoB/O,KAAMoD,GAC1B,MAEJ,KAAKnF,EAAcmP,WACf4B,EAAehP,KAAMoD,GACrB,MAEJ,KAAKnF,EAAc6G,KACf9E,KAAKmI,kBAAkB/E,GACvB,MAEJ,KAAKnF,EAAc6O,SACnB,KAAK7O,EAAcwO,cACnB,KAAKxO,EAAckO,OACf+C,EAAiBlP,KAAMoD,GACvB,MAEJ,KAAKnF,EAAc4O,gBACfwC,GAAmBrP,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcqR,WACfC,GAAevP,KAAMoD,GACrB,MAEJ,KAAKnF,EAAcuR,iBACfC,GAAoBzP,KAAMoD,GAMtC,CAEAmH,SAAAA,CAAUnH,GAEN,GADApD,KAAKa,iBAAkB,EACnBb,KAAKQ,iBACLoP,EAAc5P,KAAMoD,QAGxB,OAAQpD,KAAKG,eACT,KAAKlC,EAAcmC,QACnB,KAAKnC,EAAcyQ,YACnB,KAAKzQ,EAAcoP,YACnB,KAAKpP,EAAcyP,QACnB,KAAKzP,EAAc6Q,kBACnB,KAAK7Q,EAAcmP,WACnB,KAAKnP,EAAc+G,QACnB,KAAK/G,EAAc6O,SACnB,KAAK7O,EAAc0O,WACnB,KAAK1O,EAAc4O,gBACnB,KAAK5O,EAAcwO,cACnB,KAAKxO,EAAckO,OACnB,KAAKlO,EAAcuP,QACnB,KAAKvP,EAAc4P,UACnB,KAAK5P,EAAc2P,mBACnB,KAAK3P,EAAcuE,YACnB,KAAKvE,EAAcgP,YACnB,KAAKhP,EAAc4R,eACfD,EAAc5P,KAAMoD,GACpB,MAEJ,KAAKnF,EAAckR,cACfW,EAAiB9P,KAAMoD,GACvB,MAEJ,KAAKnF,EAAcqR,YA4f/B,SAAwCf,EAAGnL,GACvCmL,EAAExG,mBAAmB3E,EAAOmL,EAAE9M,aAAawM,MAAM,GACrD,CA7fgB8B,CAA+B/P,KAAMoD,GACrC,MAEJ,KAAKnF,EAAcuR,iBACnB,KAAKvR,EAAc+R,sBA0f/B,SAAiCzB,EAAGnL,GAChCmL,EAAExG,mBAAmB3E,EAAOmL,EAAE7O,SAClC,CA3fgBuQ,CAAwBjQ,KAAMoD,GAM1C,CAEAqH,SAAAA,CAAUrH,GAEN,OADApD,KAAKa,iBAAkB,EACfb,KAAKG,eACT,KAAKlC,EAAcmC,SA8gB/B,SAA8BmO,EAAGnL,GAC7BmL,EAAErI,iBAAiB9C,GACnB,MAAM8M,EAAO9M,EAAM+M,YAAcC,EAAAA,cAAcC,OAASC,EAAAA,EAAwBlN,GAC3EkN,EAAAA,EAAqBlN,IACtBmL,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIC,sBAEtBjC,EAAEnP,YAAYqR,gBAAgBlC,EAAE7O,SAAUwQ,GAC1C3B,EAAEpO,cAAgBlC,EAAcyQ,WACpC,CArhBgBgC,CAAqB1Q,KAAMoD,GAC3B,MAEJ,KAAKnF,EAAcoP,YACnB,KAAKpP,EAAcyP,QACnB,KAAKzP,EAAc6Q,kBACnB,KAAK7Q,EAAcmP,WACfpN,KAAKmD,KAAKC,EAAOmN,EAAAA,EAAII,kBACrB,MAEJ,KAAK1S,EAAckR,cACfW,EAAiB9P,KAAMoD,GAMnC,CAEAwN,UAAAA,CAAWxN,GACPpD,KAAKa,iBAAkB,EACvBb,KAAKC,aAAemD,EACpBpD,KAAK2K,iBAAiBvH,GAClBA,EAAMyN,cAAgBzN,EAAM0N,gBAC5B9Q,KAAKmD,KAAKC,EAAOmN,EAAAA,EAAIQ,8CAE7B,CAYApG,gBAAAA,CAAiBvH,GACTpD,KAAK2J,2CAA2CvG,GA0yE5D,SAAkCmL,EAAGnL,GACjC,GAAIgI,EAAAA,GAA0BhI,GAC1B4N,GAA+BzC,GAC/BA,EAAE0C,+BAA+B7N,OAEhC,CACD,MAAMgB,EAAUmK,EAAEpJ,6BACZ+L,EAAY3C,EAAEnP,YAAYmF,gBAAgBH,GAC5C8M,IAAc9O,EAAAA,GAAG0H,OACjBsB,EAAAA,GAAsChI,GAEjC8N,IAAc9O,EAAAA,GAAGwH,MACtBwB,EAAAA,GAAqChI,GACrCgI,EAAAA,GAAmChI,IAEvCgI,EAAAA,GAAmChI,GAC/BA,EAAMyN,YACNtC,EAAEnH,eAAehE,EAAO8N,GAGxB3C,EAAE3J,eAAexB,EAAO8N,GAE5B9N,EAAM0N,gBAAiB,CAC3B,CACJ,CAj0EYK,CAAyBnR,KAAMoD,GAG/BpD,KAAKiR,+BAA+B7N,EAE5C,CAEA6N,8BAAAA,CAA+B7N,GAC3B,OAAQpD,KAAKG,eACT,KAAKlC,EAAcmC,QACfqO,EAAmBzO,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcyQ,aAye/B,SAA4BH,EAAGnL,GACvBA,EAAMqE,QAAU9I,EAAAA,OAAE0D,MAClBkM,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAcoP,aAGhCsB,EAAgBJ,EAAGnL,EAE3B,CAhfgBgO,CAAmBpR,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcoP,aA2f/B,SAA4BkB,EAAGnL,GAC3B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAE8O,KACHc,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEjO,YAAciO,EAAE9M,aAAa2C,QAC/BmK,EAAEpO,cAAgBlC,EAAcyP,QAChC,MAEJ,QACIkB,EAAgBL,EAAGnL,GAG/B,CA1gBgBkO,CAAmBtR,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcyP,QACf6D,EAAevR,KAAMoD,GACrB,MAEJ,KAAKnF,EAAc6Q,mBAwnB/B,SAAgCP,EAAGnL,GAC/B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAE6S,SACP,KAAK7S,EAAAA,OAAE8S,QACP,KAAK9S,EAAAA,OAAE8O,KACP,KAAK9O,EAAAA,OAAE+S,KACP,KAAK/S,EAAAA,OAAEgT,KACP,KAAKhT,EAAAA,OAAEkH,SACP,KAAKlH,EAAAA,OAAE8G,MACH8L,EAAehD,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEmH,SACHyI,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIqB,sBAClB,MAEJ,QACI7C,EAAoBR,EAAGnL,GAGnC,CA/oBgByO,CAAuB7R,KAAMoD,GAC7B,MAEJ,KAAKnF,EAAcmP,YAsqB/B,SAA2BmB,EAAGnL,GAC1B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEoO,KACHwB,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAE3N,YAAa,EACf2N,EAAEpO,cAAgBlC,EAAc+G,QAChC,MAEJ,KAAKrG,EAAAA,OAAEqO,SACHuB,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAcgP,YAChC,MAEJ,KAAKtO,EAAAA,OAAEmT,KACP,KAAKnT,EAAAA,OAAE6S,SACP,KAAK7S,EAAAA,OAAE8S,QACP,KAAK9S,EAAAA,OAAE+S,KACP,KAAK/S,EAAAA,OAAEgT,KACP,KAAKhT,EAAAA,OAAEkH,SACP,KAAKlH,EAAAA,OAAEqH,OACP,KAAKrH,EAAAA,OAAE8G,MACP,KAAK9G,EAAAA,OAAEwD,SACP,KAAKxD,EAAAA,OAAE2G,MACHiJ,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIwB,2BAClBxD,EAAE9M,aAAa+F,KAAK+G,EAAEjO,YAAa3B,EAAAA,OAAE8O,MACrC8D,EAAehD,EAAGnL,GAClBmL,EAAE9M,aAAauQ,OAAOzD,EAAEjO,aACxB,MAEJ,KAAK3B,EAAAA,OAAE8O,KACHc,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAI0B,iCAClB,MAEJ,QACIjD,EAAeT,EAAGnL,GAG9B,CA9sBgB8O,CAAkBlS,KAAMoD,GACxB,MAEJ,KAAKnF,EAAc+G,QACfqM,EAAerR,KAAMoD,GACrB,MAEJ,KAAKnF,EAAc6O,SACfqF,EAAgBnS,KAAMoD,GACtB,MAEJ,KAAKnF,EAAckR,cACfW,EAAiB9P,KAAMoD,GACvB,MAEJ,KAAKnF,EAAc0O,YA0nD/B,SAA2B4B,EAAGnL,GAC1B,MAAMiG,EAAKjG,EAAMqE,MACb2K,EAAoBrE,IAAI1E,GACpBkF,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAE+N,WACjC6B,EAAE9M,aAAauK,yBACfuC,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAE+N,SACvC6B,EAAErN,yBAAyBgL,oBAC3BqC,EAAEpO,cAAgBlC,EAAc6O,SAChCqF,EAAgB5D,EAAGnL,IAIvBiO,EAAe9C,EAAGnL,EAE1B,CAvoDgBkP,CAAkBtS,KAAMoD,GACxB,MAEJ,KAAKnF,EAAc4O,gBACf0F,GAAsBvS,KAAMoD,GAC5B,MAEJ,KAAKnF,EAAcwO,cACf+F,GAAoBxS,KAAMoD,GAC1B,MAEJ,KAAKnF,EAAckO,OACfsG,GAAczS,KAAMoD,GACpB,MAEJ,KAAKnF,EAAcuP,SAw2D/B,SAAwBe,EAAGnL,GACvB,MAAMiG,EAAKjG,EAAMqE,MACb2K,EAAoBrE,IAAI1E,IACpBkF,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAE2O,KAAOiB,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAE4O,OACzEgB,EAAExC,kBACF0G,GAAclE,EAAGnL,IAIrBiO,EAAe9C,EAAGnL,EAE1B,CAl3DgBsP,CAAe1S,KAAMoD,GACrB,MAEJ,KAAKnF,EAAc4P,UACf8E,GAAiB3S,KAAMoD,GACvB,MAEJ,KAAKnF,EAAc2P,oBA++D/B,SAAiCW,EAAGnL,GAChC,MAAMiG,EAAKjG,EAAMqE,MACb4B,IAAO1K,EAAAA,OAAE+N,SACTrD,IAAO1K,EAAAA,OAAEC,OACTyK,IAAO1K,EAAAA,OAAEE,OACTwK,IAAO1K,EAAAA,OAAEG,OACTuK,IAAO1K,EAAAA,OAAEI,OACTsK,IAAO1K,EAAAA,OAAEK,IACTqK,IAAO1K,EAAAA,OAAE2O,IACTjE,IAAO1K,EAAAA,OAAE4O,IACTgB,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEuO,QACvCqB,EAAE5L,sBACF4L,EAAE5D,iBAAiBvH,IAGnBuP,GAAiBpE,EAAGnL,EAE5B,CA//DgBwP,CAAwB5S,KAAMoD,GAC9B,MAEJ,KAAKnF,EAAcuE,aAmhE/B,SAA4B+L,EAAGnL,GAC3B,OAAQA,EAAMqE,OAEV,KAAK9I,EAAAA,OAAEmT,KACP,KAAKnT,EAAAA,OAAE6S,SACP,KAAK7S,EAAAA,OAAE8S,QACP,KAAK9S,EAAAA,OAAE+S,KACP,KAAK/S,EAAAA,OAAEgT,KACP,KAAKhT,EAAAA,OAAEkH,SACP,KAAKlH,EAAAA,OAAEqH,OACP,KAAKrH,EAAAA,OAAE8G,MACP,KAAK9G,EAAAA,OAAEwD,SACP,KAAKxD,EAAAA,OAAE2G,MACHiM,EAAehD,EAAGnL,GAClB,MAGJ,KAAKzE,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,MACHwP,EAAE9N,uBAAuB,GAAKxC,EAAc6O,SAC5CyB,EAAEpO,cAAgBlC,EAAc6O,SAChCqF,EAAgB5D,EAAGnL,GACnB,MAEJ,KAAKzE,EAAAA,OAAEkU,IACHtE,EAAE9N,uBAAuB,GAAKxC,EAAc4O,gBAC5C0B,EAAEpO,cAAgBlC,EAAc4O,gBAChC0F,GAAsBhE,EAAGnL,GACzB,MAEJ,KAAKzE,EAAAA,OAAEK,GACHuP,EAAE9N,uBAAuB,GAAKxC,EAAcwO,cAC5C8B,EAAEpO,cAAgBlC,EAAcwO,cAChC+F,GAAoBjE,EAAGnL,GACvB,MAEJ,KAAKzE,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAE4O,GACHgB,EAAE9N,uBAAuB,GAAKxC,EAAckO,OAC5CoC,EAAEpO,cAAgBlC,EAAckO,OAChCsG,GAAclE,EAAGnL,GACjB,MAEJ,QACImL,EAAE9N,uBAAuB,GAAKxC,EAAc+G,QAC5CuJ,EAAEpO,cAAgBlC,EAAc+G,QAChCqM,EAAe9C,EAAGnL,GAG9B,CAtkEgB0P,CAAmB9S,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcqR,YAulE/B,SAA2Bf,EAAGnL,GACtBA,EAAMqE,QAAU9I,EAAAA,OAAE0D,KAClBgP,EAAe9C,EAAGnL,GAGlBmM,GAAehB,EAAGnL,EAE1B,CA7lEgB2P,CAAkB/S,KAAMoD,GACxB,MAEJ,KAAKnF,EAAcgP,aAsnE/B,SAA4BsB,EAAGnL,GAC3B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEqO,SACHuB,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3B,MAEJ,KAAK1D,EAAAA,OAAEqU,MACHzE,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAC3Be,EAAM0N,gBAAiB,EACvB,MAEJ,KAAKnS,EAAAA,OAAEkH,SACH0L,EAAehD,EAAGnL,GAM9B,CA3oEgB6P,CAAmBjT,KAAMoD,GACzB,MAEJ,KAAKnF,EAAc4R,gBAmpE/B,SAA+BtB,EAAGnL,GAC9B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEkH,SACH0L,EAAehD,EAAGnL,GAM9B,CA/pEgB8P,CAAsBlT,KAAMoD,GAC5B,MAEJ,KAAKnF,EAAcuR,kBAoqE/B,SAAgCjB,EAAGnL,GAC3BA,EAAMqE,QAAU9I,EAAAA,OAAE0D,KAClBgP,EAAe9C,EAAGnL,GAGlBqM,GAAoBlB,EAAGnL,EAE/B,CA1qEgB+P,CAAuBnT,KAAMoD,GAC7B,MAEJ,KAAKnF,EAAc+R,sBA8qE/B,SAAoCzB,EAAGnL,GACnC,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEkH,SACH0L,EAAehD,EAAGnL,GAM9B,CA1rEgBgQ,CAA2BpT,KAAMoD,GAM7C,CAEAwH,QAAAA,CAASxH,GACLpD,KAAKa,iBAAkB,EACvBb,KAAKC,aAAemD,EAChBpD,KAAKQ,iBAytEjB,SAAgC+N,EAAGnL,GAC/B,GAAIA,EAAMqE,QAAU9I,EAAAA,OAAE2N,GAAKlJ,EAAMqE,QAAU9I,EAAAA,OAAE0U,GAGzC,OAFArC,GAA+BzC,QAC/BA,EAAE+E,6BAA6BlQ,GAGnC,IAAK,IAAI0I,EAAIyC,EAAE9M,aAAawC,SAAU6H,EAAI,EAAGA,IAAK,CAC9C,MAAMjF,EAAU0H,EAAE9M,aAAawM,MAAMnC,GACrC,GAAIyC,EAAEnP,YAAYmF,gBAAgBsC,KAAazE,EAAAA,GAAGC,KAAM,CACpDkM,EAAE+E,6BAA6BlQ,GAC/B,KACJ,CACA,MAAMkE,EAAUiH,EAAEnP,YAAYkC,WAAWuF,GACzC,GAAIS,EAAQiM,gBAAkBnQ,EAAMkE,QAAS,CAEzClE,EAAMkE,QAAUA,EAChBiH,EAAE9M,aAAa+R,gBAAgB1H,GAC/B,KACJ,CACJ,CACJ,CA5uEY2H,CAAuBzT,KAAMoD,GAG7BpD,KAAKsT,6BAA6BlQ,EAE1C,CAEAkQ,4BAAAA,CAA6BlQ,GACzB,OAAQpD,KAAKG,eACT,KAAKlC,EAAcmC,QACfqO,EAAmBzO,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcyQ,aAwY/B,SAA0BH,EAAGnL,GACzB,MAAMiG,EAAKjG,EAAMqE,MACb4B,IAAO1K,EAAAA,OAAE0D,MAAQgH,IAAO1K,EAAAA,OAAE8O,MAAQpE,IAAO1K,EAAAA,OAAEoO,MAAQ1D,IAAO1K,EAAAA,OAAE0U,IAC5D1E,EAAgBJ,EAAGnL,EAE3B,CA5YgBsQ,CAAiB1T,KAAMoD,GACvB,MAEJ,KAAKnF,EAAcoP,aAka/B,SAA0BkB,EAAGnL,GACzB,MAAMiG,EAAKjG,EAAMqE,MACb4B,IAAO1K,EAAAA,OAAE8O,MAAQpE,IAAO1K,EAAAA,OAAEoO,MAAQ1D,IAAO1K,EAAAA,OAAE0D,MAAQgH,IAAO1K,EAAAA,OAAE0U,GAC5DzE,EAAgBL,EAAGnL,GAGnBmL,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIoD,iCAE1B,CAzagBC,CAAiB5T,KAAMoD,GACvB,MAEJ,KAAKnF,EAAcyP,SAse/B,SAAsBa,EAAGnL,GACrB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE8O,KACHc,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcmP,WAChC,MAEJ,KAAKzO,EAAAA,OAAEoO,KACP,KAAKpO,EAAAA,OAAE0U,GACP,KAAK1U,EAAAA,OAAE0D,KACHwM,EAAYN,EAAGnL,GACf,MAEJ,KAAKzE,EAAAA,OAAEwD,SACH2R,EAAqBvF,EAAGnL,GACxB,MAEJ,QACImL,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIoD,kCAG9B,CA1fgBI,CAAa/T,KAAMoD,GACnB,MAEJ,KAAKnF,EAAc6Q,mBAuiB/B,SAA8BP,EAAGnL,GAC7B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEmH,SACHyI,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcyP,QAChC,MAEJ,KAAK/O,EAAAA,OAAE0U,GACHtE,EAAoBR,EAAGnL,GACvB,MAEJ,QACImL,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIoD,kCAG9B,CArjBgBK,CAAqBhU,KAAMoD,GAC3B,MAEJ,KAAKnF,EAAcmP,YAsmB/B,SAAyBmB,EAAGnL,GACxB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEoO,KACP,KAAKpO,EAAAA,OAAE0D,KACP,KAAK1D,EAAAA,OAAE0U,GACHrE,EAAeT,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEwD,SACH2R,EAAqBvF,EAAGnL,GACxB,MAEJ,QACImL,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIoD,kCAG9B,CArnBgBM,CAAgBjU,KAAMoD,GACtB,MAEJ,KAAKnF,EAAc+G,QACfkP,EAAalU,KAAMoD,GACnB,MAEJ,KAAKnF,EAAc6G,MA40C/B,SAAsByJ,EAAGnL,GACrB,IAAIG,EACAH,EAAMqE,QAAU9I,EAAAA,OAAEqH,SACS,QAA1BzC,EAAKgL,EAAExO,qBAAkC,IAAPwD,GAAyBA,EAAGS,KAAKuK,EAAGA,EAAE9M,aAAa2C,UAE1FmK,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBoO,EAAElO,qBACxB,CAl1CgB8T,CAAanU,KAAMoD,GACnB,MAEJ,KAAKnF,EAAc6O,SACfsH,EAAcpU,KAAMoD,GACpB,MAEJ,KAAKnF,EAAckR,cACfW,EAAiB9P,KAAMoD,GACvB,MAEJ,KAAKnF,EAAc0O,YA2hD/B,SAAyB4B,EAAGnL,GACxB,MAAMiG,EAAKjG,EAAMqE,MACjB,OAAQ4B,GACJ,KAAK1K,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEC,MACC2P,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAE+N,WACjC6B,EAAE9M,aAAauK,yBACfuC,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAE+N,SACvC6B,EAAErN,yBAAyBgL,oBAC3BqC,EAAEpO,cAAgBlC,EAAc6O,SAC5BzD,IAAO1K,EAAAA,OAAEC,OACTwV,EAAc7F,EAAGnL,IAGzB,MAEJ,KAAKzE,EAAAA,OAAEoO,KACP,KAAKpO,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAE0D,KACP,KAAK1D,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAE4O,GACP,KAAK5O,EAAAA,OAAEI,MACP,KAAKJ,EAAAA,OAAEK,GAEH,MAEJ,QACIkV,EAAa3F,EAAGnL,GAG5B,CA3jDgBiR,CAAgBrU,KAAMoD,GACtB,MAEJ,KAAKnF,EAAc4O,iBA+kD/B,SAA6B0B,EAAGnL,GAC5B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEiO,SACC2B,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEiO,WAClC2B,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAc6O,UAEpC,MAEJ,KAAKnO,EAAAA,OAAEwD,SACH2R,EAAqBvF,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEkU,IAEH,MAEJ,QACIxD,GAAmBd,EAAGnL,GAGlC,CAnmDgBkR,CAAoBtU,KAAMoD,GAC1B,MAEJ,KAAKnF,EAAcwO,cACf8H,GAAkBvU,KAAMoD,GACxB,MAEJ,KAAKnF,EAAckO,OACfqI,GAAYxU,KAAMoD,GAClB,MAEJ,KAAKnF,EAAcuP,SAswD/B,SAAsBe,EAAGnL,GACrB,MAAMiG,EAAKjG,EAAMqE,MACjB,OAAQ4B,GACJ,KAAK1K,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAE4O,GACCgB,EAAE9M,aAAa4Q,gBAAgBhJ,KAC/BkF,EAAE9M,aAAauK,yBACfuC,EAAE9M,aAAa8K,sBAAsBlD,GACrCkF,EAAErN,yBAAyBgL,oBAC3BqC,EAAEpO,cAAgBlC,EAAckO,QAEpC,MAEJ,KAAKxN,EAAAA,OAAEC,MACP,KAAKD,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,MACP,KAAKJ,EAAAA,OAAEK,GACCuP,EAAE9M,aAAa4Q,gBAAgBhJ,KAC/BkF,EAAExC,kBACFyI,GAAYjG,EAAGnL,IAEnB,MAEJ,KAAKzE,EAAAA,OAAEoO,KACP,KAAKpO,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAE0D,KAEH,MAEJ,QACI6R,EAAa3F,EAAGnL,GAG5B,CAzyDgBqR,CAAazU,KAAMoD,GACnB,MAEJ,KAAKnF,EAAc4P,UACf6G,GAAe1U,KAAMoD,GACrB,MAEJ,KAAKnF,EAAc2P,oBAm5D/B,SAA+BW,EAAGnL,GAC9B,MAAMiG,EAAKjG,EAAMqE,MACb4B,IAAO1K,EAAAA,OAAE+N,SACTrD,IAAO1K,EAAAA,OAAEC,OACTyK,IAAO1K,EAAAA,OAAEE,OACTwK,IAAO1K,EAAAA,OAAEG,OACTuK,IAAO1K,EAAAA,OAAEI,OACTsK,IAAO1K,EAAAA,OAAEK,IACTqK,IAAO1K,EAAAA,OAAE2O,IACTjE,IAAO1K,EAAAA,OAAE4O,GACLgB,EAAE9M,aAAa4Q,gBAAgBhJ,KAC/BkF,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEuO,QACvCqB,EAAE5L,sBACF4L,EAAE3D,SAASxH,IAIfsR,GAAenG,EAAGnL,EAE1B,CAr6DgBuR,CAAsB3U,KAAMoD,GAC5B,MAEJ,KAAKnF,EAAcuE,aA09D/B,SAA0B+L,EAAGnL,GACrBA,EAAMqE,QAAU9I,EAAAA,OAAEwD,UAClB2R,EAAqBvF,EAAGnL,EAEhC,CA79DgBwR,CAAiB5U,KAAMoD,GACvB,MAEJ,KAAKnF,EAAcqR,WACfuF,GAAgB7U,KAAMoD,GACtB,MAEJ,KAAKnF,EAAcgP,aA+hE/B,SAA0BsB,EAAGnL,GACrBA,EAAMqE,QAAU9I,EAAAA,OAAEqO,UAAauB,EAAE9M,aAAaqT,6BAC9CvG,EAAE9M,aAAaoS,MACVtF,EAAE5O,iBAAmB4O,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEqO,WACxDuB,EAAEpO,cAAgBlC,EAAc4R,gBAG5C,CAriEgBkF,CAAiB/U,KAAMoD,GACvB,MAEJ,KAAKnF,EAAc4R,gBAmjE/B,SAA6BtB,EAAGnL,GACxBA,EAAMqE,QAAU9I,EAAAA,OAAE0D,OAClBkM,EAAEpO,cAAgBlC,EAAc+R,qBAExC,CAtjEgBgF,CAAoBhV,KAAMoD,GAC1B,MAEJ,KAAKnF,EAAcuR,iBACfC,GAAoBzP,KAAMoD,GAMtC,CAEA0H,KAAAA,CAAM1H,GACF,OAAQpD,KAAKG,eACT,KAAKlC,EAAcmC,QACfqO,EAAmBzO,KAAMoD,GACzB,MAEJ,KAAKnF,EAAcyQ,YACfC,EAAgB3O,KAAMoD,GACtB,MAEJ,KAAKnF,EAAcoP,YACfuB,EAAgB5O,KAAMoD,GACtB,MAEJ,KAAKnF,EAAcyP,QACfmB,EAAY7O,KAAMoD,GAClB,MAEJ,KAAKnF,EAAc6Q,kBACfC,EAAoB/O,KAAMoD,GAC1B,MAEJ,KAAKnF,EAAcmP,WACf4B,EAAehP,KAAMoD,GACrB,MAEJ,KAAKnF,EAAc+G,QACnB,KAAK/G,EAAc6O,SACnB,KAAK7O,EAAc0O,WACnB,KAAK1O,EAAc4O,gBACnB,KAAK5O,EAAcwO,cACnB,KAAKxO,EAAckO,OACnB,KAAKlO,EAAcuP,QACnB,KAAKvP,EAAc4P,UACnB,KAAK5P,EAAc2P,mBACfqH,EAAUjV,KAAMoD,GAChB,MAEJ,KAAKnF,EAAc6G,MA6uC/B,SAAmByJ,EAAGnL,GAClBmL,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAI2E,oCAClB3G,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBoO,EAAElO,sBACpBkO,EAAEzD,MAAM1H,EACZ,CAjvCgB+R,CAAUnV,KAAMoD,GAChB,MAEJ,KAAKnF,EAAckR,cACfW,EAAiB9P,KAAMoD,GACvB,MAEJ,KAAKnF,EAAcuE,YACf4S,GAAcpV,KAAMoD,GACpB,MAEJ,KAAKnF,EAAcqR,WACnB,KAAKrR,EAAcgP,YACnB,KAAKhP,EAAc4R,eACnB,KAAK5R,EAAcuR,iBACnB,KAAKvR,EAAc+R,qBACfqF,EAAYrV,KAAMoD,GAM9B,CAEA4H,qBAAAA,CAAsB5H,GAClB,GAAIpD,KAAKa,kBACLb,KAAKa,iBAAkB,EACnBuC,EAAMmF,MAAM+M,WAAW,KAAO5F,EAAAA,GAAoB6F,WAAW,CAC7D,GAA2B,IAAvBnS,EAAMmF,MAAM1I,OACZ,OAEJuD,EAAMmF,MAAQnF,EAAMmF,MAAMiN,OAAO,EACrC,CAEJ,GAAIxV,KAAKgB,UAAUwD,cACfxE,KAAKmI,kBAAkB/E,QAG3B,OAAQpD,KAAKG,eACT,KAAKlC,EAAcyP,QACnB,KAAKzP,EAAc6Q,kBACnB,KAAK7Q,EAAcmP,WACnB,KAAKnP,EAAc6G,KACnB,KAAK7G,EAAc4O,gBACnB,KAAK5O,EAAc4P,UACnB,KAAK5P,EAAc2P,mBACnB,KAAK3P,EAAcgP,YACnB,KAAKhP,EAAc4R,eACf7P,KAAKmI,kBAAkB/E,GACvB,MAEJ,KAAKnF,EAAc+G,QACnB,KAAK/G,EAAc0O,WACnB,KAAK1O,EAAcuP,QACnB,KAAKvP,EAAcuE,YACnB,KAAKvE,EAAcqR,WACnB,KAAKrR,EAAcuR,iBACnB,KAAKvR,EAAc+R,qBACfyF,EAA0BzV,KAAMoD,GAChC,MAEJ,KAAKnF,EAAc6O,SACnB,KAAK7O,EAAcwO,cACnB,KAAKxO,EAAckO,OACf+C,EAAiBlP,KAAMoD,GACvB,MAEJ,KAAKnF,EAAckR,cACfuG,EAA+B1V,KAAMoD,GAMjD,EAMJ,SAASuS,EAA+BpH,EAAGnL,GACvC,IAAIwS,EAAyBrH,EAAErN,yBAAyB2U,kCAAkCzS,EAAMkE,SAahG,OAZIsO,EACKrH,EAAE9M,aAAaoK,SAAS+J,EAAuB/O,SAI1C0H,EAAE9M,aAAaqU,WAAW1S,EAAMqE,SACtCmO,EAAyB,OAJzBrH,EAAErN,yBAAyB6U,YAAYH,GACvCA,EAAyB,MAO7BI,EAAoBzH,EAAGnL,GAEpBwS,CACX,CAEA,SAASK,EAAsB1H,EAAGqH,GAC9B,IAAIM,EAAgB,KAChBC,EAAM5H,EAAE9M,aAAawC,SACzB,KAAOkS,GAAO,EAAGA,IAAO,CACpB,MAAMtP,EAAU0H,EAAE9M,aAAawM,MAAMkI,GACrC,GAAItP,IAAY+O,EAAuB/O,QACnC,MAEA0H,EAAEH,kBAAkBvH,EAAS0H,EAAE9M,aAAa+K,OAAO2J,MACnDD,EAAgBrP,EAExB,CAKA,OAJKqP,IACD3H,EAAE9M,aAAa+R,gBAAgB2C,EAAM,EAAI,EAAIA,GAC7C5H,EAAErN,yBAAyB6U,YAAYH,IAEpCM,CACX,CAEA,SAASE,EAAY7H,EAAG2H,EAAeG,GACnC,IAAIC,EAAcJ,EACdK,EAAchI,EAAE9M,aAAa+U,kBAAkBN,GACnD,IAAK,IAAIpK,EAAI,EAAGjF,EAAU0P,EAAa1P,IAAYwP,EAAmBvK,IAAKjF,EAAU0P,EAAa,CAE9FA,EAAchI,EAAE9M,aAAa+U,kBAAkB3P,GAC/C,MAAM4P,EAAelI,EAAErN,yBAAyBwV,gBAAgB7P,GAC1D8P,EAAkBF,GAAgB3K,GArrCrB,GAsrCmB2K,GAAgBE,GAE9CA,GACApI,EAAErN,yBAAyB6U,YAAYU,GAE3ClI,EAAE9M,aAAauQ,OAAOnL,KAGtBA,EAAU+P,EAA2BrI,EAAGkI,GACpCH,IAAgBJ,IAChB3H,EAAErN,yBAAyB2V,SAAWJ,GAE1ClI,EAAEnP,YAAY8J,WAAWoN,GACzB/H,EAAEnP,YAAY+H,YAAYN,EAASyP,GACnCA,EAAczP,EAEtB,CACA,OAAOyP,CACX,CAEA,SAASM,EAA2BrI,EAAGkI,GACnC,MAAMvL,EAAKqD,EAAEnP,YAAYmF,gBAAgBkS,EAAa5P,SAChDiQ,EAAavI,EAAEnP,YAAY6C,cAAcwU,EAAarT,MAAMkE,QAAS4D,EAAIuL,EAAarT,MAAMmE,OAGlG,OAFAgH,EAAE9M,aAAasV,QAAQN,EAAa5P,QAASiQ,GAC7CL,EAAa5P,QAAUiQ,EAChBA,CACX,CAEA,SAASE,EAAiCzI,EAAG0I,EAAgBX,GACzD,MAAMjN,EAAKkF,EAAEnP,YAAYkC,WAAW2V,GAC9BpT,GAAMxC,EAAAA,EAAAA,UAASgI,GACrB,GAAIkF,EAAET,gCAAgCjK,GAClC0K,EAAEvH,qBAAqBsP,OAEtB,CACD,MAAMpL,EAAKqD,EAAEnP,YAAYmF,gBAAgB0S,GACrCpT,IAAQlF,EAAAA,OAAEwD,UAAY+I,IAAO9I,EAAAA,GAAGC,OAChC4U,EAAiB1I,EAAEnP,YAAY8O,mBAAmB+I,IAEtD1I,EAAEnP,YAAY+H,YAAY8P,EAAgBX,EAC9C,CACJ,CAEA,SAASY,EAA2B3I,EAAG2H,EAAeN,GAClD,MAAM1K,EAAKqD,EAAEnP,YAAYmF,gBAAgBqR,EAAuB/O,UAC1D,MAAEzD,GAAUwS,EACZkB,EAAavI,EAAEnP,YAAY6C,cAAcmB,EAAMkE,QAAS4D,EAAI9H,EAAMmE,OACxEgH,EAAErL,YAAYgT,EAAeY,GAC7BvI,EAAEnP,YAAY+H,YAAY+O,EAAeY,GACzCvI,EAAErN,yBAAyBiW,2BAA2BL,EAAY1T,GAClEmL,EAAErN,yBAAyB6U,YAAYH,GACvCrH,EAAE9M,aAAauQ,OAAO4D,EAAuB/O,SAC7C0H,EAAE9M,aAAa2V,YAAYlB,EAAeY,EAAY1T,EAAMqE,MAChE,CAEA,SAAS4P,EAAmB9I,EAAGnL,GAC3B,IAAK,IAAI0I,EAAI,EAAGA,EA/uCO,EA+uCiBA,IAAK,CACzC,MAAM8J,EAAyBD,EAA+BpH,EAAGnL,GACjE,IAAKwS,EACD,MAEJ,MAAMM,EAAgBD,EAAsB1H,EAAGqH,GAC/C,IAAKM,EACD,MAEJ3H,EAAErN,yBAAyB2V,SAAWjB,EACtC,MAAMU,EAAcF,EAAY7H,EAAG2H,EAAeN,EAAuB/O,SACnEoQ,EAAiB1I,EAAE9M,aAAa+U,kBAAkBZ,EAAuB/O,SAC/E0H,EAAEnP,YAAY8J,WAAWoN,GACrBW,GACAD,EAAiCzI,EAAG0I,EAAgBX,GACxDY,EAA2B3I,EAAG2H,EAAeN,EACjD,CACJ,CAGA,SAAShG,EAAcrB,EAAGnL,GACtBmL,EAAExG,mBAAmB3E,EAAOmL,EAAE9M,aAAayF,yBAC/C,CAOA,SAASmO,EAAY9G,EAAGnL,GAGpB,GAFAmL,EAAErO,SAAU,EAERkD,EAAMK,SAAU,CAGhB,MAAM6T,EAAS/I,EAAE5O,gBAAkB,EAAI,EACvC,IAAK,IAAImM,EAAIyC,EAAE9M,aAAawC,SAAU6H,GAAKwL,EAAQxL,IAC/CyC,EAAEpK,gBAAgBoK,EAAE9M,aAAawM,MAAMnC,GAAI1I,GAG/C,IAAKmL,EAAE5O,iBAAmB4O,EAAE9M,aAAawC,UAAY,EAAG,CACpD,MAAMsT,EAAchJ,EAAE9M,aAAawM,MAAM,GACnCuJ,EAAejJ,EAAEnP,YAAYyJ,0BAA0B0O,GAC7D,GAAIC,IAAiBA,EAAa9N,SAC9B6E,EAAEpK,gBAAgBoT,EAAanU,GAC3BmL,EAAE9M,aAAawC,UAAY,GAAG,CAC9B,MAAMwT,EAAclJ,EAAE9M,aAAawM,MAAM,GACnCyJ,EAAenJ,EAAEnP,YAAYyJ,0BAA0B4O,GACzDC,IAAiBA,EAAahO,QAC9B6E,EAAEpK,gBAAgBsT,EAAarU,EAEvC,CAER,CACJ,CACJ,CAYA,SAASqL,EAAmBF,EAAGnL,GAC3BmL,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIoH,gBAAgB,GAClCpJ,EAAEnP,YAAYqR,gBAAgBlC,EAAE7O,SAAU0Q,EAAAA,cAAcC,QACxD9B,EAAEpO,cAAgBlC,EAAcyQ,YAChCH,EAAEtE,cAAc7G,EACpB,CAkBA,SAASuL,EAAgBJ,EAAGnL,GACxBmL,EAAE7L,yBACF6L,EAAEpO,cAAgBlC,EAAcoP,YAChCkB,EAAEtE,cAAc7G,EACpB,CA6BA,SAASwL,EAAgBL,EAAGnL,GACxBmL,EAAE7G,mBAAmBxF,EAAAA,UAAGuL,KAAM9O,EAAAA,OAAE8O,MAChCc,EAAEjO,YAAciO,EAAE9M,aAAa2C,QAC/BmK,EAAEpO,cAAgBlC,EAAcyP,QAChCa,EAAEtE,cAAc7G,EACpB,CAGA,SAASmO,EAAehD,EAAGnL,GACvB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEmT,KACP,KAAKnT,EAAAA,OAAE6S,SACP,KAAK7S,EAAAA,OAAE8S,QACP,KAAK9S,EAAAA,OAAE+S,KACP,KAAK/S,EAAAA,OAAEgT,KACHpD,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAC3Be,EAAM0N,gBAAiB,EACvB,MAEJ,KAAKnS,EAAAA,OAAE2G,MACHiJ,EAAE7J,qBAAqBtB,EAAO6B,EAAAA,EAAcO,QAC5C,MAEJ,KAAK7G,EAAAA,OAAEmH,SACCyI,EAAE9O,QAAQP,iBACVqP,EAAE7J,qBAAqBtB,EAAO6B,EAAAA,EAAcc,UAG5CwI,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAc6Q,mBAEpC,MAEJ,KAAKnQ,EAAAA,OAAEkH,SACP,KAAKlH,EAAAA,OAAE8G,MACH8I,EAAE7J,qBAAqBtB,EAAO6B,EAAAA,EAAcc,SAC5C,MAEJ,KAAKpH,EAAAA,OAAEqH,OACHuI,EAAE7J,qBAAqBtB,EAAO6B,EAAAA,EAAcgB,aAC5C,MAEJ,KAAKtH,EAAAA,OAAEwD,SACHoM,EAAE5G,gBAAgBvE,GAClBmL,EAAErN,yBAAyB0W,eAC3BrJ,EAAE3N,YAAa,EACf2N,EAAEpO,cAAgBlC,EAAcuE,YAChC+L,EAAE9N,uBAAuB8B,QAAQtE,EAAcuE,aAC/C,MAEJ,KAAK7D,EAAAA,OAAE8O,KACHc,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAI0B,iCAClB,MAEJ,QACIpD,EAAYN,EAAGnL,GAG3B,CAuBA,SAAS0Q,EAAqBvF,EAAGnL,GACzBmL,EAAE9M,aAAaoW,UAAY,GAC3BtJ,EAAE9M,aAAaqW,mCACXvJ,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEwD,UAClCoM,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIwH,uCAEtBxJ,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEwD,UACvCoM,EAAErN,yBAAyBgL,oBAC3BqC,EAAE9N,uBAAuBuX,QACzBzJ,EAAE5L,uBAGF4L,EAAEpL,KAAKC,EAAOmN,EAAAA,EAAIoD,iCAE1B,CACA,SAAS9E,EAAYN,EAAGnL,GACpBmL,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcmP,WAChCmB,EAAEtE,cAAc7G,EACpB,CA4CA,SAAS2L,EAAoBR,EAAGnL,GAC5B,MAAM6U,EAAU7U,EAAMmG,OAASC,EAAAA,EAAUqB,IAAM0F,EAAAA,EAAI2H,yBAA2B3H,EAAAA,EAAI4H,kCAClF5J,EAAEpL,KAAKC,EAAO6U,GACd1J,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcyP,QAChCa,EAAEtE,cAAc7G,EACpB,CA8DA,SAAS4L,EAAeT,EAAGnL,GACvBmL,EAAE7G,mBAAmBxF,EAAAA,UAAG6K,KAAMpO,EAAAA,OAAEoO,MAChCwB,EAAEpO,cAAgBlC,EAAc+G,QAChCoT,EAAW7J,EAAGnL,EAClB,CAGA,SAASgV,EAAW7J,EAAGnL,GACnB,OAAQA,EAAMmG,MACV,KAAKC,EAAAA,EAAUU,UACX+E,EAAgBV,EAAGnL,GACnB,MAEJ,KAAKoG,EAAAA,EAAUuB,qBACX0K,EAA0BlH,EAAGnL,GAC7B,MAEJ,KAAKoG,EAAAA,EAAUc,QACXsF,EAAcrB,EAAGnL,GACjB,MAEJ,KAAKoG,EAAAA,EAAUkB,UACX2G,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKoG,EAAAA,EAAUC,QACXyK,EAAa3F,EAAGnL,GAChB,MAEJ,KAAKoG,EAAAA,EAAUqB,IACXoK,EAAU1G,EAAGnL,GAMzB,CACA,SAASqS,EAA0BlH,EAAGnL,GAClCmL,EAAElD,uCACFkD,EAAEpG,kBAAkB/E,EACxB,CACA,SAAS6L,EAAgBV,EAAGnL,GACxBmL,EAAElD,uCACFkD,EAAEpG,kBAAkB/E,GACpBmL,EAAE3N,YAAa,CACnB,CAyIA,SAASyX,EAAmB9J,EAAGnL,GAC3BmL,EAAElD,uCACFkD,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAE3N,YAAa,EACfwC,EAAM0N,gBAAiB,CAC3B,CACA,SAASwH,EAAclV,GACnB,MAAMmV,GAAYC,EAAAA,EAAAA,GAAapV,EAAOqV,EAAAA,MAAMC,MAC5C,OAAoB,MAAbH,GAlwDe,WAkwDMA,EAAUhF,aAC1C,CAkDA,SAASoF,EAAsBpK,EAAGnL,GAC9BmL,EAAE7J,qBAAqBtB,EAAO6B,EAAAA,EAAcc,QAChD,CAyDA,SAAS6S,EAAsBrK,EAAGnL,GAC9BmL,EAAElD,uCACFkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,KAC/B,CACA,SAASgP,EAAe9C,EAAGnL,GACvB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEka,EACP,KAAKla,EAAAA,OAAEma,EACP,KAAKna,EAAAA,OAAEoa,EACP,KAAKpa,EAAAA,OAAEqa,EACP,KAAKra,EAAAA,OAAEsa,GACP,KAAKta,EAAAA,OAAEua,GACP,KAAKva,EAAAA,OAAEwa,IACP,KAAKxa,EAAAA,OAAEya,KACP,KAAKza,EAAAA,OAAE0a,KACP,KAAK1a,EAAAA,OAAE2a,MACP,KAAK3a,EAAAA,OAAE4a,OACP,KAAK5a,EAAAA,OAAE6a,QAnKf,SAAyBjL,EAAGnL,GACxBmL,EAAElD,uCACFkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAErN,yBAAyBuY,YAAYlL,EAAE9M,aAAa2C,QAAShB,EACnE,CAgKYsW,CAAgBnL,EAAGnL,GACnB,MAEJ,KAAKzE,EAAAA,OAAEgb,GAlLf,SAAyBpL,EAAGnL,GACxB,MAAMwW,EAAqBrL,EAAErN,yBAAyB2U,kCAAkC3T,EAAAA,UAAGyX,GACvFC,IACAvC,EAAmB9I,EAAGnL,GACtBmL,EAAE9M,aAAauQ,OAAO4H,EAAmB/S,SACzC0H,EAAErN,yBAAyB6U,YAAY6D,IAE3CrL,EAAElD,uCACFkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAErN,yBAAyBuY,YAAYlL,EAAE9M,aAAa2C,QAAShB,EACnE,CAyKYyW,CAAgBtL,EAAGnL,GACnB,MAEJ,KAAKzE,EAAAA,OAAEmb,GACP,KAAKnb,EAAAA,OAAEob,GACP,KAAKpb,EAAAA,OAAEqb,GACP,KAAKrb,EAAAA,OAAEsb,GACP,KAAKtb,EAAAA,OAAEub,GACP,KAAKvb,EAAAA,OAAEwb,IAjQf,SAAsC5L,EAAGnL,GACjCmL,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAEFiO,EAAAA,iBAAiBtM,IAAIQ,EAAE9M,aAAa4C,eACpCkK,EAAE9M,aAAaoS,MAEnBtF,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,KAC/B,CA0PYiY,CAA6B/L,EAAGnL,GAChC,MAEJ,KAAKzE,EAAAA,OAAE2N,EACP,KAAK3N,EAAAA,OAAE4b,GACP,KAAK5b,EAAAA,OAAE6b,GACP,KAAK7b,EAAAA,OAAE8b,GACP,KAAK9b,EAAAA,OAAE+b,IACP,KAAK/b,EAAAA,OAAEgc,IACP,KAAKhc,EAAAA,OAAEic,IACP,KAAKjc,EAAAA,OAAEkc,KACP,KAAKlc,EAAAA,OAAEmc,KACP,KAAKnc,EAAAA,OAAEoc,MACP,KAAKpc,EAAAA,OAAEqc,OACP,KAAKrc,EAAAA,OAAEsc,OACP,KAAKtc,EAAAA,OAAEuc,OACP,KAAKvc,EAAAA,OAAEwc,OACP,KAAKxc,EAAAA,OAAEyc,OACP,KAAKzc,EAAAA,OAAE0c,OACP,KAAK1c,EAAAA,OAAE2c,QACP,KAAK3c,EAAAA,OAAE4c,QACP,KAAK5c,EAAAA,OAAE6c,QACP,KAAK7c,EAAAA,OAAE8c,OACP,KAAK9c,EAAAA,OAAE+c,QACP,KAAK/c,EAAAA,OAAEgd,QACP,KAAKhd,EAAAA,OAAEid,SACP,KAAKjd,EAAAA,OAAEkd,WACP,KAAKld,EAAAA,OAAEmd,YAnSf,SAA+BvN,EAAGnL,GAC1BmL,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAENmC,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,KAC/B,CA+RY0Z,CAAsBxN,EAAGnL,GACzB,MAEJ,KAAKzE,EAAAA,OAAEqd,GACP,KAAKrd,EAAAA,OAAEsd,GACP,KAAKtd,EAAAA,OAAEud,IApQf,SAAgC3N,EAAGnL,GAC/BmL,EAAE3N,YAAa,EACf,MAAMyI,EAAKjG,EAAMqE,MACjB,IAAK,IAAIqE,EAAIyC,EAAE9M,aAAawC,SAAU6H,GAAK,EAAGA,IAAK,CAC/C,MAAMqQ,EAAY5N,EAAE9M,aAAa+K,OAAOV,GACxC,GAAKzC,IAAO1K,EAAAA,OAAEqd,IAAMG,IAAcxd,EAAAA,OAAEqd,KAC9B3S,IAAO1K,EAAAA,OAAEsd,IAAM5S,IAAO1K,EAAAA,OAAEud,MAAQC,IAAcxd,EAAAA,OAAEsd,IAAME,IAAcxd,EAAAA,OAAEud,IAAM,CAC9E3N,EAAE9M,aAAa4K,oCAAoC8P,GACnD5N,EAAE9M,aAAa8K,sBAAsB4P,GACrC,KACJ,CACA,GAAIA,IAAcxd,EAAAA,OAAE4c,SAChBY,IAAcxd,EAAAA,OAAE+b,KAChByB,IAAcxd,EAAAA,OAAE2N,GAChBiC,EAAEH,kBAAkBG,EAAE9M,aAAawM,MAAMnC,GAAIqQ,GAC7C,KAER,CACI5N,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAENmC,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,KAC/B,CA+OY+Z,CAAuB7N,EAAGnL,GAC1B,MAEJ,KAAKzE,EAAAA,OAAE0U,GACP,KAAK1U,EAAAA,OAAE0d,IACP,KAAK1d,EAAAA,OAAE2d,IACP,KAAK3d,EAAAA,OAAE4d,KACP,KAAK5d,EAAAA,OAAE6d,MACP,KAAK7d,EAAAA,OAAE8d,OACHpE,EAAmB9J,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAE+d,IA7Kf,SAA0BnO,EAAGnL,GACrBmL,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAENmC,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAE3N,YAAa,EACfwC,EAAM0N,gBAAiB,CAC3B,CAuKY6L,CAAiBpO,EAAGnL,GACpB,MAEJ,KAAKzE,EAAAA,OAAEie,GACP,KAAKje,EAAAA,OAAEke,KAtHf,SAA0BtO,EAAGnL,GACrBmL,EAAE9M,aAAaqU,WAAWnX,EAAAA,OAAEme,OAC5BvO,EAAE9M,aAAauK,yBAEnBuC,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,KAC/B,CAkHY0a,CAAiBxO,EAAGnL,GACpB,MAEJ,KAAKzE,EAAAA,OAAEqe,GACP,KAAKre,EAAAA,OAAEse,IArHf,SAA0B1O,EAAGnL,GACrBmL,EAAE9M,aAAaqU,WAAWnX,EAAAA,OAAEme,OAC5BvO,EAAE9M,aAAa4K,oCAAoC1N,EAAAA,OAAEke,KAEzDtO,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,KAC/B,CAiHY6a,CAAiB3O,EAAGnL,GACpB,MAEJ,KAAKzE,EAAAA,OAAEwe,IACP,KAAKxe,EAAAA,OAAEye,SAtTf,SAA2B7O,EAAGnL,GACtBmL,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAENmC,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAG3BkM,EAAE1N,iBAAkB,EACpB0N,EAAE3N,YAAa,CACnB,CA8SYyc,CAAkB9O,EAAGnL,GACrB,MAEJ,KAAKzE,EAAAA,OAAE+G,KAzKf,SAA2B6I,EAAGnL,GACtBmL,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAENmC,EAAElD,uCACFkD,EAAE3N,YAAa,EACf2N,EAAE7J,qBAAqBtB,EAAO6B,EAAAA,EAAcc,QAChD,CAmKYuX,CAAkB/O,EAAGnL,GACrB,MAEJ,KAAKzE,EAAAA,OAAEiL,KAhHf,SAA2B2E,EAAGnL,GAC1BmL,EAAElD,uCACFD,EAAAA,GAAmChI,GACnCgI,EAAAA,GAAmChI,GAC/BA,EAAMyN,YACNtC,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGwH,KAG3B2E,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGwH,KAE/BxG,EAAM0N,gBAAiB,CAC3B,CAsGYyM,CAAkBhP,EAAGnL,GACrB,MAEJ,KAAKzE,EAAAA,OAAE0D,MAtWf,SAA4BkM,EAAGnL,GACM,IAA7BmL,EAAE9M,aAAaoW,WACftJ,EAAEnP,YAAYoe,gBAAgBjP,EAAE9M,aAAawM,MAAM,GAAI7K,EAAMmE,MAErE,CAmWYkW,CAAmBlP,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAEmT,KACP,KAAKnT,EAAAA,OAAE+S,KACP,KAAK/S,EAAAA,OAAEgT,KACP,KAAKhT,EAAAA,OAAE8G,MACP,KAAK9G,EAAAA,OAAE2G,MACP,KAAK3G,EAAAA,OAAEqH,OACP,KAAKrH,EAAAA,OAAE8S,QACP,KAAK9S,EAAAA,OAAE6S,SACP,KAAK7S,EAAAA,OAAEwD,SACHoP,EAAehD,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEoO,MAjXf,SAA4BwB,EAAGnL,GAC3B,MAAMqU,EAAclJ,EAAE9M,aAAaic,mCAC/BjG,GAA4C,IAA7BlJ,EAAE9M,aAAaoW,YAC9BtJ,EAAE3N,YAAa,EACf2N,EAAEnP,YAAYoe,gBAAgB/F,EAAarU,EAAMmE,OAEzD,CA4WYoW,CAAmBpP,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAEyG,MA5Uf,SAA4BmJ,EAAGnL,GAC3B,MAAMwa,EAAarP,EAAE9M,aAAaoW,UAAY,EACzCtJ,EAAEhO,cAAeqd,IACdrP,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAENmC,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MACtBub,IACDrP,EAAEhO,YAAcgO,EAAE9M,aAAa2C,SAG3C,CAkUYyZ,CAAmBtP,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAEmf,MA7Qf,SAA4BvP,EAAGnL,GAC3BmL,EAAElD,uCACEkD,EAAE9M,aAAaqU,WAAWnX,EAAAA,OAAEmf,QAC5BzG,EAAmB9I,EAAGnL,GACtBmL,EAAElD,wCAENkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAErN,yBAAyBuY,YAAYlL,EAAE9M,aAAa2C,QAAShB,EACnE,CAsQY2a,CAAmBxP,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAEqf,MA5Jf,SAA4BzP,EAAGnL,GAC3BmL,EAAElD,uCACFD,EAAAA,GAAsChI,GACtCgI,EAAAA,GAAmChI,GAC/BA,EAAMyN,YACNtC,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAG0H,QAG3ByE,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAG0H,QAE/B1G,EAAM0N,gBAAiB,CAC3B,CAkJYmN,CAAmB1P,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAEC,OAtQf,SAA6B2P,EAAGnL,GACxBmL,EAAEnP,YAAY8e,gBAAgB3P,EAAE7O,YAAc0Q,EAAAA,cAAcC,QAAU9B,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IACxGiC,EAAEnC,iBAENmC,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAE3N,YAAa,EACf2N,EAAEpO,cAAgBlC,EAAc6O,QACpC,CAgQYqR,CAAoB5P,EAAGnL,GACvB,MAEJ,KAAKzE,EAAAA,OAAEyf,OAxPf,SAA6B7P,EAAGnL,GAC5BmL,EAAElD,uCACFkD,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MACtBiW,EAAclV,KACfmL,EAAE3N,YAAa,GAEnBwC,EAAM0N,gBAAiB,CAC3B,CAkPYuN,CAAoB9P,EAAGnL,GACvB,MAEJ,KAAKzE,EAAAA,OAAE2f,MACP,KAAK3f,EAAAA,OAAE4f,MACP,KAAK5f,EAAAA,OAAE6f,QAtPf,SAA6BjQ,EAAGnL,GAC5BmL,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAC3Be,EAAM0N,gBAAiB,CAC3B,CAoPY2N,CAAoBlQ,EAAGnL,GACvB,MAEJ,KAAKzE,EAAAA,OAAE+f,OA9Of,SAA6BnQ,EAAGnL,GAC5BA,EAAMkE,QAAUpF,EAAAA,UAAGma,IACnBjZ,EAAMqE,MAAQ9I,EAAAA,OAAE0d,IAChBhE,EAAmB9J,EAAGnL,EAC1B,CA2OYub,CAAoBpQ,EAAGnL,GACvB,MAEJ,KAAKzE,EAAAA,OAAEigB,QAhUf,SAA8BrQ,EAAGnL,GACzBmL,EAAE9M,aAAaqU,WAAWnX,EAAAA,OAAEigB,UAC5BrQ,EAAE9M,aAAauK,yBACfuC,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEigB,SAE3CrQ,EAAElD,uCACFkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAE3N,YAAa,CACnB,CAyTYie,CAAqBtQ,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEmgB,OACP,KAAKngB,EAAAA,OAAEogB,OACP,KAAKpgB,EAAAA,OAAEqgB,SApSf,SAA8BzQ,EAAGnL,GAC7BmL,EAAElD,uCACFkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAErN,yBAAyB0W,eAC3BrJ,EAAE3N,YAAa,CACnB,CAgSYqe,CAAqB1Q,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEgH,QArOf,SAA8B4I,EAAGnL,GAC7BmL,EAAE3N,YAAa,EACf2N,EAAE7J,qBAAqBtB,EAAO6B,EAAAA,EAAcc,QAChD,CAmOYmZ,CAAqB3Q,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEuO,QAhOf,SAA8BqB,EAAGnL,GAC7BmL,EAAElD,uCACFkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAE3N,YAAa,EACf2N,EAAEpO,cACEoO,EAAEpO,gBAAkBlC,EAAc6O,UAC9ByB,EAAEpO,gBAAkBlC,EAAc0O,YAClC4B,EAAEpO,gBAAkBlC,EAAcwO,eAClC8B,EAAEpO,gBAAkBlC,EAAckO,QAClCoC,EAAEpO,gBAAkBlC,EAAcuP,QAChCvP,EAAc2P,mBACd3P,EAAc4P,SAC5B,CAqNYsR,CAAqB5Q,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEygB,OACP,KAAKzgB,EAAAA,OAAE0gB,UAxNf,SAAgC9Q,EAAGnL,GAC3BmL,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEygB,QAClC7Q,EAAE9M,aAAaoS,MAEnBtF,EAAElD,uCACFkD,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,KAC/B,CAmNYid,CAAuB/Q,EAAGnL,GAC1B,MAEJ,KAAKzE,EAAAA,OAAEiH,QACP,KAAKjH,EAAAA,OAAEkH,SACH8S,EAAsBpK,EAAGnL,GACzB,MAEJ,KAAKzE,EAAAA,OAAEqO,UAxaf,SAAgCuB,EAAGnL,GAC/B,MAAMqU,EAAclJ,EAAE9M,aAAaic,mCAC/BnP,EAAE3N,YAAc6W,IAChBlJ,EAAEnP,YAAY8J,WAAWuO,GACzBlJ,EAAE9M,aAAa8d,wBACfhR,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAcgP,YAExC,CAiaYuS,CAAuBjR,EAAGnL,GAC1B,MAEJ,KAAKzE,EAAAA,OAAE4G,UA7Qf,SAAgCgJ,EAAGnL,GAC/BmL,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAG3BkM,EAAE1N,iBAAkB,EACpB0N,EAAEvN,UAAU6D,MAAQI,EAAAA,EAAcO,OAClC+I,EAAElO,sBAAwBkO,EAAEpO,cAC5BoO,EAAE3N,YAAa,EACf2N,EAAEpO,cAAgBlC,EAAc6G,IACpC,CAqQY2a,CAAuBlR,EAAGnL,GAC1B,MAEJ,KAAKzE,EAAAA,OAAEmH,SACCyI,EAAE9O,QAAQP,iBACVyZ,EAAsBpK,EAAGnL,GAGzBwV,EAAsBrK,EAAGnL,GAE7B,MAEJ,KAAKzE,EAAAA,OAAEuG,WApXf,SAAiCqJ,EAAGnL,GAC5BmL,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IAClCiC,EAAEnC,iBAENmC,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEvN,UAAU6D,MAAQI,EAAAA,EAAcC,SACtC,CA+WYwa,CAAwBnR,EAAGnL,GAC3B,MAEJ,KAAKzE,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAE4O,GACP,KAAK5O,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAEK,GACP,KAAKL,EAAAA,OAAE8O,KACP,KAAK9O,EAAAA,OAAEqU,MACP,KAAKrU,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,MACP,KAAKJ,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEiO,SAEH,MAEJ,QACIgM,EAAsBrK,EAAGnL,GAGrC,CAkFA,SAAS4S,EAAoBzH,EAAGnL,GAC5B,MAAMiG,EAAKjG,EAAMkE,QACXzD,EAAMT,EAAMqE,MAClB,IAAK,IAAIqE,EAAIyC,EAAE9M,aAAawC,SAAU6H,EAAI,EAAGA,IAAK,CAC9C,MAAMjF,EAAU0H,EAAE9M,aAAawM,MAAMnC,GAC/BqQ,EAAY5N,EAAE9M,aAAa+K,OAAOV,GAExC,GAAIjI,IAAQsY,IAActY,IAAQlF,EAAAA,OAAE4C,SAAWgN,EAAEnP,YAAYkC,WAAWuF,KAAawC,GAAK,CACtFkF,EAAE9M,aAAa4K,oCAAoCxI,GAC/C0K,EAAE9M,aAAawC,UAAY6H,GAC3ByC,EAAE9M,aAAa+R,gBAAgB1H,GACnC,KACJ,CACA,GAAIyC,EAAEH,kBAAkBvH,EAASsV,GAC7B,KAER,CACJ,CACA,SAASjI,EAAa3F,EAAGnL,GACrB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEgb,EACP,KAAKhb,EAAAA,OAAEoa,EACP,KAAKpa,EAAAA,OAAEka,EACP,KAAKla,EAAAA,OAAEma,EACP,KAAKna,EAAAA,OAAEqa,EACP,KAAKra,EAAAA,OAAEsa,GACP,KAAKta,EAAAA,OAAEua,GACP,KAAKva,EAAAA,OAAEwa,IACP,KAAKxa,EAAAA,OAAEya,KACP,KAAKza,EAAAA,OAAE0a,KACP,KAAK1a,EAAAA,OAAEmf,KACP,KAAKnf,EAAAA,OAAE2a,MACP,KAAK3a,EAAAA,OAAE4a,OACP,KAAK5a,EAAAA,OAAE6a,OACHnC,EAAmB9I,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAE2N,GA5Ef,SAAuBiC,GACdA,EAAE9M,aAAa2Y,iBAAiBzb,EAAAA,OAAE2N,IACnCiC,EAAE7G,mBAAmBxF,EAAAA,UAAGoK,EAAG3N,EAAAA,OAAE2N,GAEjCiC,EAAEnC,gBACN,CAwEYuT,CAAcpR,GACd,MAEJ,KAAK5P,EAAAA,OAAE4b,GACP,KAAK5b,EAAAA,OAAE8b,GACP,KAAK9b,EAAAA,OAAE6b,GACP,KAAK7b,EAAAA,OAAEgc,IACP,KAAKhc,EAAAA,OAAE+b,IACP,KAAK/b,EAAAA,OAAEic,IACP,KAAKjc,EAAAA,OAAEwe,IACP,KAAKxe,EAAAA,OAAEkc,KACP,KAAKlc,EAAAA,OAAEmc,KACP,KAAKnc,EAAAA,OAAEoc,MACP,KAAKpc,EAAAA,OAAEigB,OACP,KAAKjgB,EAAAA,OAAEqc,OACP,KAAKrc,EAAAA,OAAEsc,OACP,KAAKtc,EAAAA,OAAEuc,OACP,KAAKvc,EAAAA,OAAEwc,OACP,KAAKxc,EAAAA,OAAEyc,OACP,KAAKzc,EAAAA,OAAE0c,OACP,KAAK1c,EAAAA,OAAE4c,QACP,KAAK5c,EAAAA,OAAE6c,QACP,KAAK7c,EAAAA,OAAE2c,QACP,KAAK3c,EAAAA,OAAE8c,OACP,KAAK9c,EAAAA,OAAE+c,QACP,KAAK/c,EAAAA,OAAEgd,QACP,KAAKhd,EAAAA,OAAEye,QACP,KAAKze,EAAAA,OAAEid,SACP,KAAKjd,EAAAA,OAAEkd,WACP,KAAKld,EAAAA,OAAEmd,YAjIf,SAA6BvN,EAAGnL,GAC5B,MAAMiG,EAAKjG,EAAMqE,MACb8G,EAAE9M,aAAaqU,WAAWzM,KAC1BkF,EAAE9M,aAAauK,yBACfuC,EAAE9M,aAAa8K,sBAAsBlD,GAE7C,CA4HYuW,CAAoBrR,EAAGnL,GACvB,MAEJ,KAAKzE,EAAAA,OAAEqd,IAxGf,SAAwBzN,GAChBA,EAAE9M,aAAaoe,mBAAmBlhB,EAAAA,OAAEqd,MACpCzN,EAAE9M,aAAa4K,oCAAoC1N,EAAAA,OAAEqd,IACrDzN,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEqd,IAE/C,CAoGY8D,CAAevR,GACf,MAEJ,KAAK5P,EAAAA,OAAEsd,GACP,KAAKtd,EAAAA,OAAEud,IAvGf,SAAwB3N,EAAGnL,GACvB,MAAMiG,EAAKjG,EAAMqE,MACb8G,EAAE9M,aAAaqU,WAAWzM,KAC1BkF,EAAE9M,aAAa4K,oCAAoChD,GACnDkF,EAAE9M,aAAa8K,sBAAsBlD,GAE7C,CAkGY0W,CAAexR,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEmb,GACP,KAAKnb,EAAAA,OAAEob,GACP,KAAKpb,EAAAA,OAAEqb,GACP,KAAKrb,EAAAA,OAAEsb,GACP,KAAKtb,EAAAA,OAAEub,GACP,KAAKvb,EAAAA,OAAEwb,IAzGf,SAAoC5L,GAC5BA,EAAE9M,aAAaue,6BACfzR,EAAE9M,aAAauK,yBACfuC,EAAE9M,aAAawe,+BAEvB,CAqGYC,CAA2B3R,GAC3B,MAEJ,KAAK5P,EAAAA,OAAE0U,IA/Ff,SAAwB9E,GACpBA,EAAElD,uCACFkD,EAAE7G,mBAAmBxF,EAAAA,UAAGmR,GAAI1U,EAAAA,OAAE0U,IAC9B9E,EAAE9M,aAAaoS,MACftF,EAAE3N,YAAa,CACnB,CA2FYuf,CAAe5R,GACf,MAEJ,KAAK5P,EAAAA,OAAEoO,MA9Kf,SAA0BwB,EAAGnL,GACzB,GAAImL,EAAE9M,aAAaqU,WAAWnX,EAAAA,OAAEoO,QAC5BwB,EAAEpO,cAAgBlC,EAAcqR,WAG5Bf,EAAE9O,QAAQN,wBAAwB,CAClC,MAAMsY,EAAclJ,EAAE9M,aAAaic,mCAC/BjG,GACAlJ,EAAEpK,gBAAgBsT,EAAarU,EAEvC,CAER,CAmKYgd,CAAiB7R,EAAGnL,GACpB,MAEJ,KAAKzE,EAAAA,OAAE0D,MArKf,SAA0BkM,EAAGnL,GACrBmL,EAAE9M,aAAaqU,WAAWnX,EAAAA,OAAEoO,QAC5BwB,EAAEpO,cAAgBlC,EAAcqR,WAChCuF,GAAgBtG,EAAGnL,GAE3B,CAiKYid,CAAiB9R,EAAGnL,GACpB,MAEJ,KAAKzE,EAAAA,OAAEyG,MA5Jf,SAA0BmJ,GACtB,MAAMqP,EAAarP,EAAE9M,aAAaoW,UAAY,GACxC,YAAEtX,GAAgBgO,EACnBqP,IACDrP,EAAEhO,YAAc,OAEfA,GAAeqd,IAAerP,EAAE9M,aAAaqU,WAAWnX,EAAAA,OAAEyG,QAC3DmJ,EAAE9M,aAAauK,yBACX4R,EACArP,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEyG,MAElC7E,GACLgO,EAAE9M,aAAauQ,OAAOzR,GAGlC,CA8IY+f,CAAiB/R,GACjB,MAEJ,KAAK5P,EAAAA,OAAEmgB,OACP,KAAKngB,EAAAA,OAAEogB,OACP,KAAKpgB,EAAAA,OAAEqgB,SAzHf,SAA4BzQ,EAAGnL,GAC3B,MAAMiG,EAAKjG,EAAMqE,MACb8G,EAAE9M,aAAaqU,WAAWzM,KAC1BkF,EAAE9M,aAAauK,yBACfuC,EAAE9M,aAAa8K,sBAAsBlD,GACrCkF,EAAErN,yBAAyBgL,oBAEnC,CAmHYqU,CAAmBhS,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAEwD,SACH2R,EAAqBvF,EAAGnL,GACxB,MAEJ,QACI4S,EAAoBzH,EAAGnL,GAGnC,CACA,SAAS6R,EAAU1G,EAAGnL,GACdmL,EAAE9N,uBAAuBZ,OAAS,EAClCuV,GAAc7G,EAAGnL,GAGjBiS,EAAY9G,EAAGnL,EAEvB,CAmBA,SAAS8L,EAAiBX,EAAGnL,GACzB,GAAI3E,EAAqBsP,IAAIQ,EAAE9M,aAAa4C,cAKxC,OAJAkK,EAAE7N,uBAAuBb,OAAS,EAClC0O,EAAE5N,uCAAwC,EAC1C4N,EAAElO,sBAAwBkO,EAAEpO,cAC5BoO,EAAEpO,cAAgBlC,EAAckR,cACxB/L,EAAMmG,MACV,KAAKC,EAAAA,EAAUU,UACXkF,EAAqBb,EAAGnL,GACxB,MAEJ,KAAKoG,EAAAA,EAAUuB,qBACX2K,EAA+BnH,EAAGnL,QAO1Cod,EAAajS,EAAGnL,EAExB,CAoDA,SAAS+O,EAAgB5D,EAAGnL,GACxB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAE4O,GACP,KAAK5O,EAAAA,OAAEK,IAjCf,SAA2BuP,EAAGnL,GAC1BmL,EAAE9M,aAAagf,0BACflS,EAAE7G,mBAAmBxF,EAAAA,UAAGrD,MAAOF,EAAAA,OAAEE,OACjC0P,EAAEpO,cAAgBlC,EAAcwO,cAChC+F,GAAoBjE,EAAGnL,EAC3B,CA6BYsd,CAAkBnS,EAAGnL,GACrB,MAEJ,KAAKzE,EAAAA,OAAE8G,MACP,KAAK9G,EAAAA,OAAEqH,OACP,KAAKrH,EAAAA,OAAEwD,SACHoP,EAAehD,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEkU,KAtDf,SAA4BtE,EAAGnL,GAC3BmL,EAAE9M,aAAagf,0BACflS,EAAE7G,mBAAmBxF,EAAAA,UAAG0K,SAAUjO,EAAAA,OAAEiO,UACpC2B,EAAEpO,cAAgBlC,EAAc4O,gBAChC0F,GAAsBhE,EAAGnL,EAC7B,CAkDYud,CAAmBpS,EAAGnL,GACtB,MAEJ,KAAKzE,EAAAA,OAAEyG,MAzBf,SAA6BmJ,EAAGnL,GACvBmL,EAAEhO,aAA4C,IAA7BgO,EAAE9M,aAAaoW,YACjCtJ,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEhO,YAAcgO,EAAE9M,aAAa2C,QAC/BmK,EAAE9M,aAAaoS,MAEvB,CAoBY+M,CAAoBrS,EAAGnL,GACvB,MAEJ,KAAKzE,EAAAA,OAAEC,OA7Cf,SAA8B2P,EAAGnL,GACzBmL,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAEC,SACjC2P,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEC,OACvC2P,EAAE5L,sBACF4L,EAAE5D,iBAAiBvH,GAE3B,CAwCYyd,CAAqBtS,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,OA9Df,SAA8BwP,EAAGnL,GAC7BmL,EAAE9M,aAAagf,0BACflS,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAcwO,aACpC,CA2DYqU,CAAqBvS,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEyf,OAhDf,SAA8B7P,EAAGnL,GACzBkV,EAAclV,GACdmL,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAG3Bme,EAAajS,EAAGnL,GAEpBA,EAAM0N,gBAAiB,CAC3B,CAyCYiQ,CAAqBxS,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAE+N,SAvFf,SAAgC6B,EAAGnL,GAC/BmL,EAAE9M,aAAagf,0BACflS,EAAErN,yBAAyB0W,eAC3BrJ,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAc0O,UACpC,CAmFYqU,CAAuBzS,EAAGnL,GAC1B,MAEJ,KAAKzE,EAAAA,OAAEiO,UArFf,SAAiC2B,EAAGnL,GAChCmL,EAAE9M,aAAagf,0BACflS,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAc4O,eACpC,CAkFYoU,CAAwB1S,EAAGnL,GAC3B,MAEJ,QACIod,EAAajS,EAAGnL,GAG5B,CACA,SAASgR,EAAc7F,EAAGnL,GACtB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEC,MACC2P,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAEC,SACjC2P,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEC,OACvC2P,EAAE5L,uBAEN,MAEJ,KAAKhE,EAAAA,OAAEwD,SACH2R,EAAqBvF,EAAGnL,GACxB,MAEJ,KAAKzE,EAAAA,OAAEoO,KACP,KAAKpO,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAE0D,KACP,KAAK1D,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAE4O,GACP,KAAK5O,EAAAA,OAAEI,MACP,KAAKJ,EAAAA,OAAEK,GAEH,MAEJ,QACIwhB,EAAajS,EAAGnL,GAG5B,CACA,SAASod,EAAajS,EAAGnL,GACrB,MAAM8d,EAA4B3S,EAAEzN,uBACpCyN,EAAEzN,wBAAyB,EAE3BsX,EAAW7J,EAAGnL,GACdmL,EAAEzN,uBAAyBogB,CAC/B,CAGA,SAASxL,EAA+BnH,EAAGnL,GACvCmL,EAAE7N,uBAAuB8G,KAAKpE,EAClC,CACA,SAASgM,EAAqBb,EAAGnL,GAC7BmL,EAAE7N,uBAAuB8G,KAAKpE,GAC9BmL,EAAE5N,uCAAwC,CAC9C,CACA,SAASmP,EAAiBvB,EAAGnL,GACzB,IAAI0I,EAAI,EACR,GAAIyC,EAAE5N,sCACF,KAAOmL,EAAIyC,EAAE7N,uBAAuBb,OAAQiM,IACxC0U,EAAajS,EAAGA,EAAE7N,uBAAuBoL,SAI7C,KAAOA,EAAIyC,EAAE7N,uBAAuBb,OAAQiM,IACxCyC,EAAEpG,kBAAkBoG,EAAE7N,uBAAuBoL,IAGrDyC,EAAEpO,cAAgBoO,EAAElO,sBACpBkO,EAAEtE,cAAc7G,EACpB,CAGA,MAAMgP,EAAsB,IAAI1T,IAAI,CAACC,EAAAA,OAAE+N,QAAS/N,EAAAA,OAAEkU,IAAKlU,EAAAA,OAAEiO,SAAUjO,EAAAA,OAAEE,MAAOF,EAAAA,OAAE2O,GAAI3O,EAAAA,OAAEG,MAAOH,EAAAA,OAAE4O,GAAI5O,EAAAA,OAAEI,MAAOJ,EAAAA,OAAEK,KAoD5G,SAASuT,GAAsBhE,EAAGnL,GAC9B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEkU,IACHtE,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAC3Be,EAAM0N,gBAAiB,EACvB,MAEJ,KAAKnS,EAAAA,OAAEwD,SACHoP,EAAehD,EAAGnL,GAClB,MAEJ,QACIiM,GAAmBd,EAAGnL,GAGlC,CAuBA,SAASiM,GAAmBd,EAAGnL,GACvBmL,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEiO,WAClC2B,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAc6O,SAChCyB,EAAEtE,cAAc7G,GAExB,CAGA,SAASoP,GAAoBjE,EAAGnL,GAC5B,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEK,GACHuP,EAAE9M,aAAa0f,8BACf5S,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAckO,OAChC,MAEJ,KAAKxN,EAAAA,OAAE4O,GACP,KAAK5O,EAAAA,OAAE2O,GACHiB,EAAE9M,aAAa0f,8BACf5S,EAAE7G,mBAAmBxF,EAAAA,UAAGlD,GAAIL,EAAAA,OAAEK,IAC9BuP,EAAEpO,cAAgBlC,EAAckO,OAChCsG,GAAclE,EAAGnL,GACjB,MAEJ,KAAKzE,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,MACCwP,EAAE9M,aAAa2f,oCACf7S,EAAE9M,aAAa0f,8BACf5S,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAc6O,SAChCqF,EAAgB5D,EAAGnL,IAEvB,MAEJ,QACI+O,EAAgB5D,EAAGnL,GAG/B,CACA,SAASmR,GAAkBhG,EAAGnL,GAC1B,MAAMiG,EAAKjG,EAAMqE,MACjB,OAAQrE,EAAMqE,OACV,KAAK9I,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,MACCwP,EAAE9M,aAAa4Q,gBAAgBhJ,KAC/BkF,EAAE9M,aAAa0f,8BACf5S,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAc6O,UAEpC,MAEJ,KAAKnO,EAAAA,OAAEC,MACC2P,EAAE9M,aAAa2f,oCACf7S,EAAE9M,aAAa0f,8BACf5S,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAc6O,SAChCsH,EAAc7F,EAAGnL,IAErB,MAEJ,KAAKzE,EAAAA,OAAEoO,KACP,KAAKpO,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAE0D,KACP,KAAK1D,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAE4O,GACP,KAAK5O,EAAAA,OAAEK,GAEH,MAEJ,QACIoV,EAAc7F,EAAGnL,GAG7B,CAGA,SAASqP,GAAclE,EAAGnL,GACtB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE4O,GACP,KAAK5O,EAAAA,OAAE2O,GACHiB,EAAE9M,aAAa4f,6BACf9S,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3BkM,EAAEpO,cAAgBlC,EAAcuP,QAChCe,EAAErN,yBAAyB0W,eAC3B,MAEJ,KAAKjZ,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,MACP,KAAKJ,EAAAA,OAAEK,GACCuP,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAEK,MACjCuP,EAAE9M,aAAa4f,6BACf9S,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcwO,cAChC+F,GAAoBjE,EAAGnL,IAE3B,MAEJ,QACI+O,EAAgB5D,EAAGnL,GAG/B,CACA,SAASoR,GAAYjG,EAAGnL,GACpB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAEK,GACCuP,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAEK,MACjCuP,EAAE9M,aAAa4f,6BACf9S,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcwO,eAEpC,MAEJ,KAAK9N,EAAAA,OAAEC,MACC2P,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAEK,MACjCuP,EAAE9M,aAAa4f,6BACf9S,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcwO,cAChC8H,GAAkBhG,EAAGnL,IAEzB,MAEJ,KAAKzE,EAAAA,OAAEE,MACP,KAAKF,EAAAA,OAAEG,MACP,KAAKH,EAAAA,OAAEI,OACCwP,EAAE9M,aAAa4Q,gBAAgBjP,EAAMqE,QAAU8G,EAAE9M,aAAa4Q,gBAAgB1T,EAAAA,OAAEK,OAChFuP,EAAE9M,aAAa4f,6BACf9S,EAAE9M,aAAaoS,MACftF,EAAEpO,cAAgBlC,EAAcwO,cAChC8H,GAAkBhG,EAAGnL,IAEzB,MAEJ,KAAKzE,EAAAA,OAAEoO,KACP,KAAKpO,EAAAA,OAAE+N,QACP,KAAK/N,EAAAA,OAAEkU,IACP,KAAKlU,EAAAA,OAAEiO,SACP,KAAKjO,EAAAA,OAAE0D,KACP,KAAK1D,EAAAA,OAAE2O,GACP,KAAK3O,EAAAA,OAAE4O,GAEH,MAEJ,QACI6G,EAAc7F,EAAGnL,GAG7B,CAsDA,SAASuP,GAAiBpE,EAAGnL,GACzB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0D,KACHgP,EAAe9C,EAAGnL,GAClB,MAEJ,KAAKzE,EAAAA,OAAEygB,OACC7Q,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEygB,QAClC7Q,EAAE9M,aAAaoS,MAEnBtF,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3B,MAEJ,KAAK1D,EAAAA,OAAE0gB,SACC9Q,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEygB,QAClC7Q,EAAE9M,aAAaoS,MAEftF,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAE0gB,UAClC9Q,EAAE9M,aAAaoS,MAEnBtF,EAAE3J,eAAexB,EAAOhB,EAAAA,GAAGC,MAC3B,MAEJ,KAAK1D,EAAAA,OAAE+d,GACCnO,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEygB,QAClC7Q,EAAE9M,aAAaoS,MAEftF,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAE0gB,UAClC9Q,EAAE9M,aAAaoS,MAEnBtF,EAAEnH,eAAehE,EAAOhB,EAAAA,GAAGC,MAC3Be,EAAM0N,gBAAiB,EACvB,MAEJ,KAAKnS,EAAAA,OAAEyf,MACP,KAAKzf,EAAAA,OAAE8d,OACP,KAAK9d,EAAAA,OAAE4G,SACP,KAAK5G,EAAAA,OAAEuO,OACCqB,EAAE9M,aAAa6f,iBAAiB3iB,EAAAA,OAAEuO,UAClCqB,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEuO,QACvCqB,EAAE5L,sBACES,EAAMqE,QAAU9I,EAAAA,OAAEuO,QAClBqB,EAAE5D,iBAAiBvH,IAG3B,MAEJ,KAAKzE,EAAAA,OAAEqH,OACP,KAAKrH,EAAAA,OAAEwD,SACHoP,EAAehD,EAAGnL,GAM9B,CACA,SAASsR,GAAenG,EAAGnL,GACvB,OAAQA,EAAMqE,OACV,KAAK9I,EAAAA,OAAE0gB,SACC9Q,EAAE9M,aAAawC,SAAW,GAC1BsK,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEygB,QAClC7Q,EAAE9M,aAAa+K,OAAO+B,EAAE9M,aAAawC,SAAW,KAAOtF,EAAAA,OAAE0gB,UACzD9Q,EAAE9M,aAAaoS,MAEftF,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAE0gB,UAClC9Q,EAAE9M,aAAaoS,MAEnB,MAEJ,KAAKlV,EAAAA,OAAEygB,OACC7Q,EAAE9M,aAAa4C,eAAiB1F,EAAAA,OAAEygB,QAClC7Q,EAAE9M,aAAaoS,MAEnB,MAEJ,KAAKlV,EAAAA,OAAEuO,OACCqB,EAAE9M,aAAa6f,iBAAiB3iB,EAAAA,OAAEuO,UAClCqB,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEuO,QACvCqB,EAAE5L,uBAEN,MAEJ,KAAKhE,EAAAA,OAAEwD,SACH2R,EAAqBvF,EAAGnL,GAMpC,CAqGA,SAASgS,GAAc7G,EAAGnL,GAClBmL,EAAE9M,aAAaoW,UAAY,GAC3BtJ,EAAE9M,aAAa8K,sBAAsB5N,EAAAA,OAAEwD,UACvCoM,EAAErN,yBAAyBgL,oBAC3BqC,EAAE9N,uBAAuBuX,QACzBzJ,EAAE5L,sBACF4L,EAAEzD,MAAM1H,IAGRiS,EAAY9G,EAAGnL,EAEvB,CAWA,SAASyR,GAAgBtG,EAAGnL,GACxB,IAAIG,EACJ,GAAIH,EAAMqE,QAAU9I,EAAAA,OAAE0D,MAMlB,GALKkM,EAAE5O,kBACH4O,EAAEpO,cAAgBlC,EAAcuR,kBAIhCjB,EAAE9O,QAAQN,wBAA0BoP,EAAE9M,aAAa+K,OAAO,KAAO7N,EAAAA,OAAE0D,KAAM,CACzEkM,EAAEpK,gBAAgBoK,EAAE9M,aAAawM,MAAM,GAAI7K,GAE3C,MAAMqU,EAAclJ,EAAE9M,aAAawM,MAAM,GACrCwJ,KAAiF,QAA/DlU,EAAKgL,EAAEnP,YAAYyJ,0BAA0B4O,UAAiC,IAAPlU,OAAgB,EAASA,EAAGmG,SACrH6E,EAAEpK,gBAAgBsT,EAAarU,EAEvC,OAGAmM,GAAehB,EAAGnL,EAE1B,CACA,SAASmM,GAAehB,EAAGnL,GACvBmL,EAAEpO,cAAgBlC,EAAc+G,QAChCoT,EAAW7J,EAAGnL,EAClB,CAiEA,SAASqM,GAAoBlB,EAAGnL,GAC5BmL,EAAEpO,cAAgBlC,EAAc+G,QAChCoT,EAAW7J,EAAGnL,EAClB,CA2BA,SAAS4N,GAA+BzC,GACpC,KAAOA,EAAEnP,YAAYmF,gBAAgBgK,EAAE9M,aAAa2C,WAAahC,EAAAA,GAAGC,OAC/DkM,EAAE9J,oBAAoB8J,EAAE9M,aAAa4C,aAAckK,EAAE9M,aAAa2C,UACnEmK,EAAE9M,aAAaoS,KAEvB,C","sources":["../node_modules/parse5/dist/parser/index.js"],"sourcesContent":["import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n"],"names":["InsertionMode","BASE_LOC","startLine","startCol","startOffset","endLine","endCol","endOffset","TABLE_STRUCTURE_TAGS","Set","$","TABLE","TBODY","TFOOT","THEAD","TR","defaultParserOptions","scriptingEnabled","sourceCodeLocationInfo","treeAdapter","defaultTreeAdapter","onParseError","Parser","constructor","options","document","fragmentContext","arguments","length","undefined","scriptHandler","this","currentToken","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","skipNextNewLine","fosterParentingEnabled","createDocument","tokenizer","Tokenizer","activeFormattingElements","FormattingElementList","fragmentContextID","getTagID","getTagName","UNKNOWN","_setContextModes","openElements","OpenElementStack","parse","html","parser","write","getFragmentParser","opts","createElement","TN","TEMPLATE","NS","HTML","documentMock","unshift","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","getFirstChild","fragment","createDocumentFragment","_adoptNodes","_err","token","code","beforeToken","_a","loc","location","err","onItemPush","node","tid","isTop","_b","call","stackTop","onItemPop","_setEndLocation","current","currentTagId","isHTML","getNamespaceURI","inForeignNode","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","state","TEXT","switchToPlaintextParsing","IN_BODY","TokenizerMode","PLAINTEXT","_getAdjustedCurrentElement","FORM","getParentNode","TITLE","TEXTAREA","RCDATA","STYLE","XMP","IFRAME","NOEMBED","NOFRAMES","NOSCRIPT","RAWTEXT","SCRIPT","SCRIPT_DATA","_setDocumentType","name","publicId","systemId","setDocumentType","docTypeNode","getChildNodes","find","isDocumentTypeNode","setNodeSourceCodeLocation","_attachElementToTree","element","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","currentTmplContentOrNode","appendChild","_appendElement","namespaceURI","tagName","attrs","push","tagID","_insertFakeElement","_insertTemplate","tmpl","content","setTemplateContent","_appendCommentNode","commentNode","createCommentNode","data","_insertCharacters","beforeElement","_findFosterParentingLocation","insertTextBefore","chars","insertText","siblings","textNodeIdx","lastIndexOf","textNode","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","donor","recipient","child","detachNode","closingToken","ctLoc","tn","endLoc","type","TokenType","END_TAG","endTag","shouldProcessStartTagTokenInForeignContent","SVG","ANNOTATION_XML","MATHML","MGLYPH","MALIGNMARK","_processToken","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","COMMENT","onComment","DOCTYPE","onDoctype","START_TAG","_processStartTag","onEndTag","EOF","onEof","WHITESPACE_CHARACTER","onWhitespaceCharacter","foreignNS","ns","getAttrList","foreignContent","_reconstructActiveFormattingElements","listLength","entries","endIndex","findIndex","entry","EntryType","Marker","contains","i","_closeTableCell","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","_closePElement","generateImpliedEndTagsWithExclusion","P","popUntilTagNamePopped","tagIDs","IN_TABLE_BODY","CAPTION","IN_CAPTION","COLGROUP","IN_COLUMN_GROUP","IN_TABLE","BODY","FRAMESET","IN_FRAMESET","SELECT","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","TD","TH","IN_CELL","HEAD","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","has","openElement","items","getTemplateContent","insertBefore","_isSpecialElement","id","SPECIAL_ELEMENTS","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","mode","forceQuirks","DOCUMENT_MODE","QUIRKS","doctype","ERR","nonConformingDoctype","setDocumentMode","doctypeInInitialMode","misplacedDoctype","onStartTag","selfClosing","ackSelfClosing","nonVoidHtmlElementStartTagWithTrailingSolidus","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","BASEFONT","BGSOUND","LINK","META","nestedNoscriptInHead","startTagInHeadNoScript","BASE","abandonedHeadElementChild","remove","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","hasInTableScope","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","COL","startTagInTemplate","startTagAfterBody","FRAME","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","BR","_endTagOutsideForeignContent","toLowerCase","shortenToLength","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","pop","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","isRootHtmlElementCurrent","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","charCodeAt","LINE_FEED","substr","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","getElementEntryInScopeWithTagName","hasInScope","removeEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","idx","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","aaRecreateElementFromEntry","bookmark","newElement","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","insertMarker","tmplCount","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","getTokenAttr","ATTRS","TYPE","rawTextStartTagInBody","genericStartTagInBody","I","S","B","U","EM","TT","BIG","CODE","FONT","SMALL","STRIKE","STRONG","pushElement","bStartTagInBody","A","activeElementEntry","aStartTagInBody","H1","H2","H3","H4","H5","H6","hasInButtonScope","NUMBERED_HEADERS","numberedHeaderStartTagInBody","DL","OL","UL","DIV","DIR","NAV","MAIN","MENU","ASIDE","CENTER","FIGURE","FOOTER","HEADER","HGROUP","DIALOG","DETAILS","ADDRESS","ARTICLE","SEARCH","SECTION","SUMMARY","FIELDSET","BLOCKQUOTE","FIGCAPTION","addressStartTagInBody","LI","DD","DT","elementId","listItemStartTagInBody","IMG","WBR","AREA","EMBED","KEYGEN","HR","hrStartTagInBody","RB","RTC","RUBY","rbStartTagInBody","RT","RP","rtStartTagInBody","PRE","LISTING","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","adoptAttributes","htmlStartTagInBody","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","inTemplate","formStartTagInBody","NOBR","nobrStartTagInBody","MATH","mathStartTagInBody","getDocumentMode","tableStartTagInBody","INPUT","inputStartTagInBody","PARAM","TRACK","SOURCE","paramStartTagInBody","IMAGE","imageStartTagInBody","BUTTON","buttonStartTagInBody","APPLET","OBJECT","MARQUEE","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","OPTION","OPTGROUP","optgroupStartTagInBody","popAllUpToHtmlElement","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","clearBackToTableContext","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope"],"sourceRoot":""}