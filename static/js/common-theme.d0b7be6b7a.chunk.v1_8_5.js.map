{"version":3,"file":"static/js/common-theme.d0b7be6b7a.chunk.v1_8_5.js","mappings":"gNASA,MAAMA,GAAcC,EAAAA,EAAAA,OAAK,KACvB,MAAM,MAAEC,EAAK,YAAEC,IAAgBC,EAAAA,EAAAA,KAE/B,OACEC,EAAAA,EAAAA,KAAA,UACEC,UAAW,sBAAsBC,EAAAA,EAAOP,cACxCQ,QAASL,EACT,aAAY,aAAuB,SAAVD,EAAmB,QAAU,cACtDO,MAAO,aAAuB,SAAVP,EAAmB,QAAU,cAAcQ,SAEpD,SAAVR,GACCG,EAAAA,EAAAA,KAACM,EAAO,KAERN,EAAAA,EAAAA,KAACO,EAAQ,KAEJ,IAKPD,EAAUA,KACdE,EAAAA,EAAAA,MAAA,OACEC,MAAM,6BACNC,QAAQ,YACRC,MAAM,KACNC,OAAO,KACPC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACf,cAAY,OAAMZ,SAAA,EAElBL,EAAAA,EAAAA,KAAA,UAAQkB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BpB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChCxB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjCxB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,UACvCxB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,QAAQC,GAAG,QAAQC,GAAG,QAAQC,GAAG,WAC1CxB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAC/BxB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjCxB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,OAAOC,GAAG,QAAQC,GAAG,OAAOC,GAAG,WACxCxB,EAAAA,EAAAA,KAAA,QAAMqB,GAAG,QAAQC,GAAG,OAAOC,GAAG,QAAQC,GAAG,YAIvCjB,EAAWA,KACfP,EAAAA,EAAAA,KAAA,OACES,MAAM,6BACNC,QAAQ,YACRC,MAAM,KACNC,OAAO,KACPC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACf,cAAY,OAAMZ,UAElBL,EAAAA,EAAAA,KAAA,QAAMyB,EAAE,sDAKZ9B,EAAY+B,YAAc,cAE1B,S","sources":["components/common/ThemeToggle/index.js"],"sourcesContent":["import { memo } from 'react';\nimport { useTheme } from '../../../contexts/ThemeContext';\nimport '../../../styles/common/buttons.css';\nimport styles from './ThemeToggle.module.css';\n\n/**\n * Theme toggle button that switches between light and dark modes\n * @returns {JSX.Element} - Rendered toggle button\n */\nconst ThemeToggle = memo(() => {\n  const { theme, toggleTheme } = useTheme();\n  \n  return (\n    <button \n      className={`circleActionButton ${styles.ThemeToggle}`} \n      onClick={toggleTheme}\n      aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n      title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n    >\n      {theme === 'dark' ? (\n        <SunIcon />\n      ) : (\n        <MoonIcon />\n      )}\n    </button>\n  );\n});\n\n// SVG icons as components for better performance\nconst SunIcon = () => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    viewBox=\"0 0 24 24\" \n    width=\"20\"\n    height=\"20\"\n    fill=\"none\" \n    stroke=\"currentColor\" \n    strokeWidth=\"2\" \n    strokeLinecap=\"round\" \n    strokeLinejoin=\"round\" \n    aria-hidden=\"true\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n  </svg>\n);\n\nconst MoonIcon = () => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    viewBox=\"0 0 24 24\" \n    width=\"20\"\n    height=\"20\"\n    fill=\"none\" \n    stroke=\"currentColor\" \n    strokeWidth=\"2\" \n    strokeLinecap=\"round\" \n    strokeLinejoin=\"round\" \n    aria-hidden=\"true\"\n  >\n    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n  </svg>\n);\n\n// Display name for debugging\nThemeToggle.displayName = 'ThemeToggle';\n\nexport default ThemeToggle; "],"names":["ThemeToggle","memo","theme","toggleTheme","useTheme","_jsx","className","styles","onClick","title","children","SunIcon","MoonIcon","_jsxs","xmlns","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","d","displayName"],"sourceRoot":""}