{"version":3,"file":"static/js/vendor-refractor-b6f3a405.654ffb4fdc.chunk.v1_9_5.js","mappings":"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","sources":["../node_modules/refractor/lang/tap.js","../node_modules/refractor/lang/textile.js","../node_modules/refractor/lang/t4-cs.js","../node_modules/refractor/lang/t4-templating.js","../node_modules/refractor/lang/t4-vb.js","../node_modules/refractor/lang/tcl.js"],"sourcesContent":["'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = t4Cs\nt4Cs.displayName = 't4Cs'\nt4Cs.aliases = []\nfunction t4Cs(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorCsharp)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","'use strict'\n\nmodule.exports = t4Templating\nt4Templating.displayName = 't4Templating'\nt4Templating.aliases = []\nfunction t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorVbnet = require('./vbnet.js')\nmodule.exports = t4Vb\nt4Vb.displayName = 't4Vb'\nt4Vb.aliases = []\nfunction t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","'use strict'\n\nmodule.exports = tcl\ntcl.displayName = 'tcl'\ntcl.aliases = []\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:else|elseif)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n"],"names":["refractorYaml","require","tap","Prism","register","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias","module","exports","displayName","aliases","textile","modifierRegex","source","parenthesesRegex","withModifier","flags","RegExp","replace","modifierTokens","css","rest","lang","extend","phrase","modifier","tag","list","table","inline","bold","italic","cite","code","inserted","deleted","span","string","url","link","text","image","footnote","acronym","comment","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","refractorT4Templating","refractorCsharp","t4Cs","t4","createT4","t4Templating","createBlock","prefix","contentAlias","delimiter","content","Object","defineProperty","value","insideLang","grammar","className","block","keyword","expression","standard","refractorVbnet","t4Vb","tcl","variable","function","builtin","scope","operator"],"sourceRoot":""}