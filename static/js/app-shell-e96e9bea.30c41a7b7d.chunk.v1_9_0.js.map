{"version":3,"file":"static/js/app-shell-e96e9bea.30c41a7b7d.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/lodash.debounce/index.js","contexts/ContextManager.js","App.js","contexts/AuthContext.js","contexts/ChatStatusContext.js","contexts/ChatHistoryContext.js","components/common/Spinner/index.js","contexts/ApiContext.js","contexts/ChatControlContext.js","contexts/ChatStateContext.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import { createContext, useContext, useMemo, useEffect } from 'react';\nimport { ThemeProvider } from './ThemeContext';\nimport { ApiProvider } from './ApiContext';\nimport { ModelProvider } from './ModelContext';\nimport { SettingsProvider } from './SettingsContext';\nimport { ChatStatusProvider } from './ChatStatusContext';\nimport { ChatHistoryProvider } from './ChatHistoryContext';\nimport { PerformanceMetricsProvider } from './PerformanceMetricsContext';\nimport { StreamingEventsProvider } from './StreamingEventsContext';\nimport { ChatStateProvider } from './ChatStateContext';\nimport { ChatControlProvider } from './ChatControlContext';\n\n// Create a context for managing initialization state\nconst InitializationContext = createContext(null);\n\nexport const useInitialization = () => {\n  const context = useContext(InitializationContext);\n  if (!context) {\n    throw new Error('useInitialization must be used within an InitializationProvider');\n  }\n  return context;\n};\n\n/**\n * ContextManager component that handles all context providers\n * and their initialization states\n */\nexport const ContextManager = ({ children }) => {\n  // Memoize the initialization state to prevent unnecessary re-renders\n  const initializationState = useMemo(() => ({\n    isInitialized: false,\n    setInitialized: (value) => {\n      initializationState.isInitialized = value;\n    }\n  }), []);\n  // Mark as initialized once on mount\n  useEffect(() => {\n    initializationState.setInitialized(true);\n  }, [initializationState]);\n\n  return (\n    <InitializationContext.Provider value={initializationState}>\n      <ThemeProvider>\n        <ApiProvider>\n          <ModelProvider>\n            <SettingsProvider>\n              <ChatStatusProvider>\n                <ChatHistoryProvider>\n                  <PerformanceMetricsProvider>\n                    <StreamingEventsProvider>\n                      <ChatStateProvider>\n                        <ChatControlProvider>\n                          {children}\n                        </ChatControlProvider>\n                      </ChatStateProvider>\n                    </StreamingEventsProvider>\n                  </PerformanceMetricsProvider>\n                </ChatHistoryProvider>\n              </ChatStatusProvider>\n            </SettingsProvider>\n          </ModelProvider>\n        </ApiProvider>\n      </ThemeProvider>\n    </InitializationContext.Provider>\n  );\n}; ","/* eslint-disable no-unused-vars */\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport { ContextManager } from './contexts/ContextManager';\nimport Spinner from './components/common/Spinner';\nimport { performanceMonitor, PERFORMANCE_MARKS, PERFORMANCE_MEASURES } from './utils/performance';\n// (Formatting preloads removed - we rely on on-demand loading)\n\n// === Phase 1: Critical (lazy) components & essential import definitions ===\n// Define all essential dynamic imports once for reuse\nconst ESSENTIAL_IMPORTS = {\n  layout: () => import(/* webpackPreload: true, webpackChunkName: \"layout\" */ './components/layout/Layout'),\n  chatContainer: () => import(/* webpackPreload: true, webpackChunkName: \"chat-container\" */ './components/chat/ChatContainer'),\n  chatInput: () => import(/* webpackPreload: true, webpackChunkName: \"chat-input\" */ './components/chat/ChatInput'),\n  modelDropdown: () => import(/* webpackPreload: true, webpackChunkName: \"models-dropdown\" */ './components/models/ModelDropdown'),\n  sidebar: () => import(/* webpackPreload: true, webpackChunkName: \"layout-sidebar\" */ './components/layout/Sidebar'),\n  themeToggle: () => import(/* webpackPreload: true, webpackChunkName: \"common-theme\" */ './components/common/ThemeToggle'),\n  sidebarToggle: () => import(/* webpackPreload: true, webpackChunkName: \"layout-sidebar-toggle\" */ './components/layout/SidebarToggle'),\n  messageList: () => import(/* webpackPreload: true, webpackChunkName: \"chat-messagelist\" */ './components/chat/MessageList'),\n  authButton: () => import(/* webpackPreload: true, webpackChunkName: \"auth-button\" */ './components/auth/AuthButton'),\n  globalMetrics: () => import(/* webpackPreload: true, webpackChunkName: \"chat-globalmetrics\" */ './components/chat/GlobalMetricsBar'),\n  moreActions: () => import(/* webpackPreload: true, webpackChunkName: \"common-more-actions\" */ './components/common/MoreActions'),\n};\n// Lazy-load the layout using the shared import\nconst Layout = lazy(ESSENTIAL_IMPORTS.layout);\n// Lazy-load the login modal separately\nconst LoginModal = lazy(() => import(/* webpackChunkName: \"login-modal\" */ './components/auth/LoginModal'));\n\n// Only essential preload for core components (plus idle-loaded heavy chunks)\nconst PRELOAD_IMPORTS = {\n  essential: Object.values(ESSENTIAL_IMPORTS),\n  heavy: [\n    () => import(/* webpackPrefetch: true, webpackChunkName: \"markdown-renderer\" */ './components/common/LazyMarkdownRenderer/MarkdownRenderer'),\n    () => import(/* webpackPrefetch: true, webpackChunkName: \"streaming-message\" */ './components/chat/ChatMessage/StreamingMessage'),\n    () => import(/* webpackPrefetch: true, webpackChunkName: \"firebase-config\" */ './firebaseConfig')\n              .then(() => {\n                window.dispatchEvent(new Event('firebaseInitialized'));\n              }),\n  ]\n};\n\n// Remove unused `preloadAsync` helper; keep `preloadSync` for essential sync loads\nconst preloadSync = async (imports) => {\n  await Promise.all(imports.map(fn => fn()));\n};\n\n// Simplify idlePreload: on idle, batch load all heavy imports\nconst idlePreload = (imports, onComplete) => {\n  requestIdleCallback(() => {\n    imports.forEach((fn, idx) => fn()\n      .then(() => onComplete(idx))\n      .catch(() => {})\n    );\n  });\n};\n\n/**\n * AppShell handles phased loading of chunks for optimal startup.\n */\nfunction AppShell() {\n  const [shellReady, setShellReady] = useState(false);\n  const [firebaseReady, setFirebaseReady] = useState(false);\n  const { isLoggingIn, setIsLoggingIn } = useAuth();\n\n  useEffect(() => {\n    let canceled = false;\n\n    async function runPhases() {\n      // Phase 1: Essential components\n      performanceMonitor.mark(PERFORMANCE_MARKS.APP_START);\n      console.log('[Phase1] Loading essential components...');\n      try {\n        await preloadSync(PRELOAD_IMPORTS.essential);\n        performanceMonitor.mark(PERFORMANCE_MARKS.IMPORTANT_COMPONENTS_LOADED);\n        performanceMonitor.measure(\n          PERFORMANCE_MEASURES.IMPORTANT_LOAD_TIME,\n          PERFORMANCE_MARKS.APP_START,\n          PERFORMANCE_MARKS.IMPORTANT_COMPONENTS_LOADED\n        );\n        performanceMonitor.mark(PERFORMANCE_MARKS.COMPONENT_LOAD);\n        performanceMonitor.measure(\n          PERFORMANCE_MEASURES.COMPONENT_LOAD,\n          PERFORMANCE_MARKS.APP_START,\n          PERFORMANCE_MARKS.COMPONENT_LOAD\n        );\n        console.log('[Phase1] Essential components loaded');\n      } catch (error) {\n        console.error('[Phase1] Error loading essential components:', error);\n      }\n\n      // Show initial shell before heavy loads\n      requestAnimationFrame(async () => {\n        if (canceled) return;\n        setShellReady(true);\n        performanceMonitor.mark(PERFORMANCE_MARKS.APP_INTERACTIVE);\n        performanceMonitor.measure(\n          PERFORMANCE_MEASURES.TIME_TO_INTERACTIVE,\n          PERFORMANCE_MARKS.APP_START,\n          PERFORMANCE_MARKS.APP_INTERACTIVE\n        );\n        console.log('[Phase1] App is interactive; idle-preloading heavy components');\n        idlePreload(PRELOAD_IMPORTS.heavy, (idx) => {\n          if (idx === PRELOAD_IMPORTS.heavy.length - 1) {\n            console.log('[Phase2] Heavy components idle-preloaded');\n            setFirebaseReady(true);\n          }\n        });\n      });\n    }\n\n    runPhases();\n    return () => {\n      canceled = true;\n      performanceMonitor.clear();\n    };\n  }, []);\n\n  // Spinner until shell is ready\n  if (!shellReady) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  // Shell ready: render layout + chat UI\n  return (\n    <>\n      <Suspense fallback={<Spinner size=\"small\" />}><Layout /></Suspense>\n      {isLoggingIn && firebaseReady && (\n        <Suspense fallback={<Spinner size=\"small\" />}>\n          <LoginModal onClose={() => setIsLoggingIn(false)} />\n        </Suspense>\n      )}\n    </>\n  );\n}\n\n/** Root App with providers **/\nexport default function App() {\n  return (\n    <AuthProvider>\n      <ContextManager>\n        <AppShell />\n      </ContextManager>\n    </AuthProvider>\n  );\n} ","import { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\nimport { useToast } from './ToastContext';\nimport { useLoading } from './LoadingContext';\n// Firebase is dynamically imported to avoid blocking\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [idToken, setIdToken] = useState(null);\n  const [loading, setLoading] = useState(false); // Changed to false initially - we're proceeding anonymously\n  // Sync with global loading context for auth\n  const [, startAuthLoading, stopAuthLoading] = useLoading('auth');\n  const [error, setError] = useState(null);\n  const [isLoggingIn, setIsLoggingIn] = useState(false); // State to trigger login UI\n  const [isFirebaseInitialized, setIsFirebaseInitialized] = useState(false);\n  const { showToast } = useToast();\n\n  useEffect(() => {\n    if (loading) startAuthLoading(); else stopAuthLoading();\n  }, [loading, startAuthLoading, stopAuthLoading]);\n\n  const login = useCallback(async () => {\n    console.log(\"Login button clicked, setting isLoggingIn to true.\");\n    setIsLoggingIn(true);\n  }, [setIsLoggingIn]);\n\n  const logout = useCallback(async () => {\n    if (!isFirebaseInitialized) {\n      console.log(\"Firebase not initialized yet, cannot logout.\");\n      return;\n    }\n    const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../firebaseConfig');\n    const { signOut: firebaseSignOut } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const auth = getFirebaseAuth();\n    if (!auth) {\n      const msg = \"Firebase not initialized.\";\n      setError(msg);\n      showToast({ type: 'error', message: msg });\n      return;\n    }\n    try {\n      await firebaseSignOut(auth);\n      console.log(\"Sign out successful.\");\n    } catch (err) {\n      console.error(\"Logout failed:\", err);\n      const msg = err.message || 'Failed to logout.';\n      setError(msg);\n      showToast({ type: 'error', message: msg });\n    }\n  }, [isFirebaseInitialized, setError, showToast]);\n\n  // Effect to listen for Firebase auth state changes\n  useEffect(() => {\n    let unsubscribe = null;\n\n    // Listen for the 'firebaseInitialized' event from App.js\n    const handleFirebaseInit = () => {\n      console.log(\"Received Firebase initialized event\");\n      setIsFirebaseInitialized(true);\n      initializeAuthListener();\n    };\n\n    // Function to initialize auth listener\n    const initializeAuthListener = async () => {\n      setLoading(true);\n      // Dynamically import Firebase auth\n      const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../firebaseConfig');\n      const { onAuthStateChanged: firebaseOnAuthStateChanged } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n      \n      const auth = getFirebaseAuth();\n      if (!auth) {\n        console.warn(\"Auth service not available for onAuthStateChanged listener.\");\n        setLoading(false);\n        return;\n      }\n      \n      console.log(\"Setting up Firebase onAuthStateChanged listener.\");\n      unsubscribe = firebaseOnAuthStateChanged(auth, async (user) => {\n        setCurrentUser(user);\n        if (user) {\n          try {\n            // Force refresh is false by default, gets cached token if available\n            const token = await user.getIdToken();\n            setIdToken(token);\n            try { localStorage.setItem('idToken', token); } catch (e) { console.warn('Failed to cache idToken', e); }\n            setError(null); // Clear previous errors on successful login\n            setIsLoggingIn(false); // Ensure login UI closes if open\n            console.log(\"User signed in, token obtained.\");\n          } catch (err) {\n            console.error(\"Failed to get ID token:\", err);\n            const msg = \"Failed to get authentication token.\";\n            setError(msg);\n            showToast({ type: 'error', message: msg });\n            setIdToken(null);\n            // Optionally sign out the user if token fetch fails critically\n            const { signOut: firebaseSignOut } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n            await firebaseSignOut(auth);\n          }\n        } else {\n          // User is signed out\n          setIdToken(null);\n          try { localStorage.removeItem('idToken'); } catch (e) { console.warn('Failed to remove cached idToken', e); }\n          setIsLoggingIn(false); // Ensure login UI closes if open\n          console.log(\"User signed out.\");\n        }\n        setLoading(false); // Auth state determined\n      });\n    };\n\n    // Define a custom event for Firebase initialization\n    window.addEventListener('firebaseInitialized', handleFirebaseInit);\n\n    // Cleanup listener on component unmount\n    return () => {\n      window.removeEventListener('firebaseInitialized', handleFirebaseInit);\n      if (typeof unsubscribe === 'function') {\n      console.log(\"Cleaning up Firebase onAuthStateChanged listener.\");\n        unsubscribe();\n      }\n    };\n  }, [showToast]);\n\n  const value = useMemo(() => ({\n    currentUser,\n    idToken,\n    loading,\n    error,\n    login,\n    logout,\n    isAuthenticated: !!currentUser && !!idToken,\n    isLoggingIn,\n    setIsLoggingIn,\n    isFirebaseInitialized\n  }), [currentUser, idToken, loading, error, login, logout, isLoggingIn, setIsLoggingIn, isFirebaseInitialized]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; ","import { createContext, useContext, useState, useMemo, useEffect } from 'react';\nimport { useLoading } from './LoadingContext';\n\n// Create chat status context\nconst ChatStatusContext = createContext();\n\n// Hook to use chat status context\nexport const useChatStatus = () => {\n  const context = useContext(ChatStatusContext);\n  if (context === undefined) {\n    throw new Error('useChatStatus must be used within a ChatStatusProvider');\n  }\n  return context;\n};\n\n// Provider component for chat status\nexport const ChatStatusProvider = ({ children }) => {\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\n  const [error, setError] = useState(null);\n  // Sync with global loading context for chat\n  const [, startChatLoading, stopChatLoading] = useLoading('chat');\n  useEffect(() => {\n    if (isWaitingForResponse) startChatLoading();\n    else stopChatLoading();\n  }, [isWaitingForResponse, startChatLoading, stopChatLoading]);\n\n  const value = useMemo(() => ({\n    isWaitingForResponse,\n    setIsWaitingForResponse,\n    error,\n    setError,\n  }), [isWaitingForResponse, error]);\n\n  return (\n    <ChatStatusContext.Provider value={value}>\n      {children}\n    </ChatStatusContext.Provider>\n  );\n}; ","import React, { createContext, useContext, useState, useRef,  useCallback, useMemo } from 'react';\n\n// Create chat history context\nconst ChatHistoryContext = createContext();\n\n// Hook to use chat history context\nexport const useChatHistory = () => {\n  const context = useContext(ChatHistoryContext);\n  if (context === undefined) {\n    throw new Error('useChatHistory must be used within a ChatHistoryProvider');\n  }\n  return context;\n};\n\n// Provider component for chat history\nexport const ChatHistoryProvider = ({ children }) => {\n  // State and ref for chat history, with custom setter to sync ref immediately\n  const [chatHistory, internalSetChatHistory] = useState([]);\n  const chatHistoryRef = useRef([]);\n\n  // Wrap setter to sync ref and state in one step\n  const setChatHistory = useCallback((update) => {\n    internalSetChatHistory(prev => {\n      const newHistory = typeof update === 'function' ? update(prev) : update;\n      chatHistoryRef.current = newHistory;\n      return newHistory;\n    });\n  }, []);\n\n  // Add message, stable callback\n  const addMessageToHistory = useCallback((role, content, metrics) => {\n    const timestamp = Date.now();\n    const message = { id: timestamp, role, content, timestamp, ...(metrics && { metrics }) };\n    setChatHistory(prev => [...prev, message]);\n    return message;\n  }, [setChatHistory]);\n\n  // Function to update content of the most recent assistant message (avoiding user replacements)\n  const updateChatWithContent = useCallback((content) => {\n    setChatHistory(prev => {\n      const lastIndex = prev.length - 1;\n      if (lastIndex < 0) return prev;\n      const lastMsg = prev[lastIndex];\n      // No-op if not assistant or same content\n      if (lastMsg.role !== 'assistant' || lastMsg.content === content) {\n        return prev;\n      }\n      // Otherwise clone and update\n      const newHistory = [...prev];\n      newHistory[lastIndex] = { ...lastMsg, content };\n      return newHistory;\n    });\n  }, [setChatHistory]);\n\n  // Memoize context value to avoid re-renders\n  const value = useMemo(() => ({\n    chatHistory,\n    chatHistoryRef,\n    setChatHistory,\n    addMessageToHistory,\n    updateChatWithContent\n  }), [chatHistory, setChatHistory, addMessageToHistory, updateChatWithContent]);\n\n  return (\n    <ChatHistoryContext.Provider value={value}>\n      {children}\n    </ChatHistoryContext.Provider>\n  );\n}; ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Spinner.module.css';\n\n/**\n * Standardized Spinner for all loading states\n * @param {Object} props\n * @param {string} props.size - One of 'small', 'medium', 'large'\n * @param {string} props.tag - Optional loading tag for context\n */\nconst Spinner = ({ size = 'medium', tag }) => {\n  const sizeClass = styles[`Spinner--${size}`] || styles['Spinner--medium'];\n  return (\n    <div className={`${styles.Spinner} ${sizeClass}`} data-loading-tag={tag} aria-label=\"Loading\" role=\"status\">\n      <div className={styles.Spinner__loader} />\n    </div>\n  );\n};\n\nSpinner.propTypes = {\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  tag: PropTypes.string\n};\n\nexport default Spinner; ","import { createContext, useContext, useState, useMemo } from 'react';\n\n// Create API context\nconst ApiContext = createContext();\n\n// Custom hook for using API context\nexport const useApi = () => {\n  const context = useContext(ApiContext);\n  if (context === undefined) {\n    throw new Error('useApi must be used within an ApiProvider');\n  }\n  return context;\n};\n\n// API provider component\nexport const ApiProvider = ({ children }) => {\n  const [apiUrl] = useState(process.env.REACT_APP_API_URL || 'http://localhost:3000/api'); // Base API URL\n\n  // Memoize context value to prevent unnecessary re-renders\n  const value = useMemo(() => ({\n    apiUrl,\n  }), [apiUrl]);\n\n  return (\n    <ApiContext.Provider value={value}>\n      {children}\n    </ApiContext.Provider>\n  );\n}; ","import React, { createContext, useContext, useMemo, useCallback, useRef } from 'react';\nimport { useApi } from './ApiContext';\nimport { useModel } from './ModelContext';\nimport { useSettings } from './SettingsContext';\nimport { useAuth } from './AuthContext';\nimport { useChatHistory } from './ChatHistoryContext';\nimport { useChatStatus } from './ChatStatusContext';\nimport { usePerformanceMetrics } from './PerformanceMetricsContext';\nimport { useStreamingEvents } from './StreamingEventsContext';\nimport { fetchWithRetry } from '../utils/network';\nimport { useToast } from './ToastContext';\n\n// Context for chat actions (controls)\nconst ChatControlContext = createContext();\n\n// Hook to consume chat controls\nexport const useChatControl = () => {\n  const context = useContext(ChatControlContext);\n  if (context === undefined) {\n    throw new Error('useChatControl must be used within a ChatControlProvider');\n  }\n  return context;\n};\n\n// Provider component for chat controls\nexport const ChatControlProvider = ({ children }) => {\n  // Ref to track client-generated request ID for non-streaming\n  const currentRequestIdRef = useRef(null);\n  const { apiUrl } = useApi();\n  const { selectedModel } = useModel();\n  const { settings, getModelAdjustedSettings } = useSettings();\n  const { idToken } = useAuth();\n  const { chatHistoryRef, setChatHistory, addMessageToHistory } = useChatHistory();\n  const { setIsWaitingForResponse, setError } = useChatStatus();\n  const { resetPerformanceMetrics, startPerformanceTimer, setTokenMetricsForLastMessage } = usePerformanceMetrics();\n  const { streamMessageWithFetch, stopStreaming } = useStreamingEvents();\n  const { showToast } = useToast();\n\n  // Helpers\n  const formatModelIdentifier = useCallback((model) => {\n    if (!model || !model.provider || !model.id) return null;\n    return `${model.provider}/${model.id}`;\n  }, []);\n\n  // Action: sendMessage\n  const sendMessage = useCallback(async (message, editIndex = null) => {\n    // Generate unique client-side requestId\n    const clientRequestId = (typeof crypto !== 'undefined' && crypto.randomUUID)\n      ? crypto.randomUUID()\n      : Math.random().toString(36).substring(2) + Date.now().toString(36);\n    currentRequestIdRef.current = clientRequestId;\n    const isEditing = editIndex !== null && Number.isInteger(editIndex) && editIndex >= 0;\n    if (settings.streaming) {\n      return streamMessageWithFetch(message, isEditing ? editIndex : null);\n    }\n    if (!message || !selectedModel) {\n      setError('Please enter a message and select a model');\n      return null;\n    }\n    const modelId = formatModelIdentifier(selectedModel);\n    if (!modelId) {\n      setError('Invalid model selection');\n      return null;\n    }\n    let userMessage;\n    if (isEditing) {\n      setChatHistory(prev => {\n        const truncated = prev.slice(0, editIndex);\n        const original = prev[editIndex];\n        // Preserve original id/timestamp, only update content\n        userMessage = { ...original, content: message };\n        return [...truncated, userMessage];\n      });\n    } else {\n      userMessage = addMessageToHistory('user', message);\n    }\n    const requestStartTime = Date.now();\n    setIsWaitingForResponse(true);\n    setError(null);\n    try {\n      const adjusted = getModelAdjustedSettings(selectedModel);\n      const historyForApi = chatHistoryRef.current.map(({ metrics, ...m }) => m);\n      if (adjusted.systemPrompt && (!historyForApi.length || historyForApi[0].role !== 'system')) {\n        historyForApi.unshift({ role: 'system', content: adjusted.systemPrompt, timestamp: Date.now()-1 });\n      }\n      historyForApi.push(userMessage);\n      const payload = { \n        requestId: clientRequestId,\n        model: modelId, messages: historyForApi,\n        temperature: adjusted.temperature,\n        max_tokens: adjusted.max_tokens,\n        top_p: adjusted.top_p,\n        frequency_penalty: adjusted.frequency_penalty,\n        presence_penalty: adjusted.presence_penalty\n      };\n      resetPerformanceMetrics();\n      startPerformanceTimer();\n      const headers = { 'Content-Type': 'application/json', 'Accept': 'application/json' };\n      if (idToken) headers['Authorization'] = `Bearer ${idToken}`;\n      const response = await fetchWithRetry(new URL('/api/chat/completions', apiUrl).toString(), {\n        method: 'POST', headers, body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        let errMsg = `API error: ${response.status}`;\n        try { const errData = await response.json(); errMsg = errData?.error?.message || errData?.message || errMsg; } catch {};\n        throw new Error(errMsg);\n      }\n      const data = await response.json();\n      console.log('Received non-streaming chat data:', data);\n\n      // Handle server-sent error in response payload\n      if (data.error?.message || data.finishReason === 'error') {\n        const errMsg = data.error?.message || 'Error occurred during generation';\n        console.error('Error in API response:', errMsg);\n        setError(errMsg);\n        const rawUsage = data.usage || {};\n        const promptTokens = rawUsage.promptTokens ?? rawUsage.prompt_tokens ?? 0;\n        const completionTokens = rawUsage.completionTokens ?? rawUsage.completion_tokens ?? 0;\n        const totalTokens = rawUsage.totalTokens ?? rawUsage.total_tokens ?? completionTokens;\n        const requestEndTime = Date.now();\n        const elapsed = requestEndTime - requestStartTime;\n        const tokensPerSecond = elapsed ? Math.round((completionTokens / (elapsed / 1000)) * 10) / 10 : null;\n        const errorMetrics = {\n          startTime: requestStartTime,\n          endTime: requestEndTime,\n          elapsedTime: elapsed,\n          tokenCount: completionTokens,\n          tokensPerSecond,\n          isComplete: true,\n          timeToFirstToken: null,\n          promptTokens,\n          completionTokens,\n          totalTokens,\n          finishReason: data.finishReason || 'error',\n          error: true\n        };\n        addMessageToHistory('assistant', errMsg, errorMetrics);\n        return null;\n      }\n      const content = data.content || 'No Response returned';\n      // Use server-provided usage tokens directly\n      const rawUsage = data.usage || {};\n      const promptTokens = rawUsage.promptTokens ?? rawUsage.prompt_tokens ?? 0;\n      const completionTokens = rawUsage.completionTokens ?? rawUsage.completion_tokens ?? 0;\n      const totalTokens = rawUsage.totalTokens ?? rawUsage.total_tokens ?? completionTokens;\n      // Compute timing and rates\n      const requestEndTime = Date.now();\n      const elapsed = requestEndTime - requestStartTime;\n      const tokensForMetrics = completionTokens > 0 ? completionTokens : 0;\n      const tokensPerSecond = elapsed\n        ? Math.round((tokensForMetrics / (elapsed / 1000)) * 10) / 10\n        : null;\n      const finalMetrics = {\n        startTime: requestStartTime,\n        endTime: requestEndTime,\n        elapsedTime: elapsed,\n        tokenCount: tokensForMetrics,\n        tokensPerSecond,\n        isComplete: true,\n        timeToFirstToken: null,\n        promptTokens,\n        completionTokens,\n        totalTokens,\n        finishReason: data.finishReason\n      };\n      addMessageToHistory('assistant', content, finalMetrics);\n      return content;\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError(err.message);\n      // Show the server error as an assistant reply\n      addMessageToHistory('assistant', err.message || 'An error occurred');\n      return null;\n    } finally {\n      // Clear the clientRequestId after completion\n      currentRequestIdRef.current = null;\n      setIsWaitingForResponse(false);\n    }\n  }, [\n    apiUrl,\n    selectedModel,\n    settings.streaming,\n    getModelAdjustedSettings,\n    idToken,\n    chatHistoryRef,\n    setChatHistory,\n    addMessageToHistory,\n    streamMessageWithFetch,\n    formatModelIdentifier,\n    resetPerformanceMetrics,\n    startPerformanceTimer,\n    setError,\n    setIsWaitingForResponse,\n  ]);\n\n  // Action: stopGeneration\n  const stopGenerationAction = useCallback(async () => {\n    stopStreaming();\n    return true;\n  }, [stopStreaming]);\n\n  // Action: clearChat\n  const clearChat = useCallback(() => {\n    setChatHistory([]);\n    resetPerformanceMetrics();\n  }, [setChatHistory, resetPerformanceMetrics]);\n\n  // Action: newChat\n  const newChat = useCallback(() => {\n    if (chatHistoryRef.current.length > 0) {\n      clearChat();\n    }\n  }, [chatHistoryRef, clearChat]);\n\n  // Action: resetChat\n  const resetChat = useCallback(() => {\n    if (chatHistoryRef.current.length === 0) return;\n    \n    if (window.confirm('Are you sure you want to clear the current chat?')) {\n      clearChat();\n      showToast({ type: 'info', message: 'Chat has been cleared' });\n    }\n  }, [chatHistoryRef, clearChat, showToast]);\n\n  // Action: downloadChat\n  const downloadChat = useCallback(() => {\n    const history = chatHistoryRef.current;\n    if (!history.length) return;\n    try {\n      const formatted = history.map(msg => {\n        const role = msg.role === 'user'\n          ? 'You'\n          : msg.role === 'assistant'\n            ? selectedModel?.name || 'Assistant'\n            : msg.role;\n        let contentText = '';\n        if (typeof msg.content === 'string') {\n          contentText = msg.content;\n        } else if (Array.isArray(msg.content)) {\n          contentText = msg.content\n            .map(part => part.type === 'text' ? part.text : '[Image]')\n            .join('\\n');\n        }\n        return `${role}: ${contentText}\\n`;\n      }).join('');\n      const blob = new Blob([formatted], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `chat_${new Date().toISOString().replace(/:/g, '-')}.txt`;\n      document.body.appendChild(a);\n      a.click();\n      showToast({ type: 'success', message: 'Chat downloaded successfully' });\n      // Clean up anchor and URL\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(\"Error downloading chat:\", error);\n      showToast({ type: 'error', message: 'Failed to download chat. Please try again.' });\n    }\n  }, [chatHistoryRef, selectedModel, showToast]);\n\n  // Action: getOrCreateConversation (stub)\n  const getOrCreateConversation = useCallback((conversationId) => {\n    // implement or delegate\n  }, []);\n\n  // Value\n  const value = useMemo(() => ({\n    sendMessage,\n    stopGeneration: stopGenerationAction,\n    addMessageToHistory,\n    clearChat,\n    newChat,\n    resetChat,\n    downloadChat,\n    getOrCreateConversation,\n    setTokenMetricsForLastMessage\n  }), [\n    sendMessage,\n    stopGenerationAction,\n    addMessageToHistory,\n    clearChat,\n    newChat,\n    resetChat,\n    downloadChat,\n    getOrCreateConversation,\n    setTokenMetricsForLastMessage\n  ]);\n\n  return (\n    <ChatControlContext.Provider value={value}>\n      {children}\n    </ChatControlContext.Provider>\n  );\n}; ","import React, { createContext, useContext, useMemo } from 'react';\nimport { useChatHistory } from './ChatHistoryContext';\nimport { useChatStatus } from './ChatStatusContext';\n\n// Context for read-only chat state\nconst ChatStateContext = createContext();\n\n// Hook to consume chat state\nexport const useChatState = () => {\n  const context = useContext(ChatStateContext);\n  if (context === undefined) {\n    throw new Error('useChatState must be used within a ChatStateProvider');\n  }\n  return context;\n};\n\n// Provider component for chat state\nexport const ChatStateProvider = ({ children }) => {\n  const { chatHistory, chatHistoryRef } = useChatHistory();\n  const { isWaitingForResponse, error } = useChatStatus();\n\n  const value = useMemo(() => ({\n    chatHistory,\n    chatHistoryRef,\n    isWaitingForResponse,\n    error\n  }), [chatHistory, chatHistoryRef, isWaitingForResponse, error]);\n\n  return (\n    <ChatStateContext.Provider value={value}>\n      {children}\n    </ChatStateContext.Provider>\n  );\n}; "],"names":["reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","isObject","value","type","toNumber","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush","InitializationContext","createContext","ContextManager","_ref","children","initializationState","useMemo","isInitialized","setInitialized","useEffect","_jsx","Provider","ThemeProvider","ApiProvider","ModelProvider","SettingsProvider","ChatStatusProvider","ChatHistoryProvider","PerformanceMetricsProvider","StreamingEventsProvider","ChatStateProvider","ChatControlProvider","ESSENTIAL_IMPORTS","layout","chatContainer","chatInput","modelDropdown","sidebar","themeToggle","sidebarToggle","messageList","authButton","globalMetrics","moreActions","Layout","lazy","LoginModal","PRELOAD_IMPORTS","essential","values","heavy","then","window","dispatchEvent","Event","preloadSync","async","Promise","all","imports","map","fn","idlePreload","onComplete","requestIdleCallback","forEach","idx","catch","AppShell","shellReady","setShellReady","useState","firebaseReady","setFirebaseReady","isLoggingIn","setIsLoggingIn","useAuth","canceled","performanceMonitor","mark","PERFORMANCE_MARKS","APP_START","IMPORTANT_COMPONENTS_LOADED","measure","PERFORMANCE_MEASURES","IMPORTANT_LOAD_TIME","COMPONENT_LOAD","error","requestAnimationFrame","APP_INTERACTIVE","TIME_TO_INTERACTIVE","length","runPhases","clear","_jsxs","_Fragment","Suspense","fallback","Spinner","size","onClose","style","display","alignItems","justifyContent","height","App","AuthProvider","AuthContext","context","useContext","Error","currentUser","setCurrentUser","idToken","setIdToken","loading","setLoading","startAuthLoading","stopAuthLoading","useLoading","setError","isFirebaseInitialized","setIsFirebaseInitialized","showToast","useToast","login","useCallback","logout","getFirebaseAuth","signOut","firebaseSignOut","auth","msg","message","err","unsubscribe","handleFirebaseInit","initializeAuthListener","onAuthStateChanged","firebaseOnAuthStateChanged","user","token","getIdToken","localStorage","setItem","e","removeItem","addEventListener","removeEventListener","isAuthenticated","ChatStatusContext","useChatStatus","isWaitingForResponse","setIsWaitingForResponse","startChatLoading","stopChatLoading","ChatHistoryContext","useChatHistory","chatHistory","internalSetChatHistory","chatHistoryRef","useRef","setChatHistory","update","prev","newHistory","current","addMessageToHistory","role","content","metrics","timestamp","id","updateChatWithContent","lastIndex","lastMsg","tag","sizeClass","styles","className","Spinner__loader","ApiContext","useApi","apiUrl","process","ChatControlContext","useChatControl","currentRequestIdRef","selectedModel","useModel","settings","getModelAdjustedSettings","useSettings","resetPerformanceMetrics","startPerformanceTimer","setTokenMetricsForLastMessage","usePerformanceMetrics","streamMessageWithFetch","stopStreaming","useStreamingEvents","formatModelIdentifier","model","provider","sendMessage","editIndex","clientRequestId","crypto","randomUUID","random","substring","isEditing","Number","isInteger","streaming","modelId","userMessage","truncated","original","requestStartTime","_data$error","_ref6","_rawUsage$promptToken2","_ref7","_rawUsage$completionT2","_ref8","_rawUsage$totalTokens2","adjusted","historyForApi","_ref2","m","systemPrompt","unshift","push","payload","requestId","messages","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","headers","response","fetchWithRetry","URL","method","body","JSON","stringify","ok","errMsg","status","_errData$error","errData","json","data","finishReason","_data$error2","_ref3","_rawUsage$promptToken","_ref4","_rawUsage$completionT","_ref5","_rawUsage$totalTokens","rawUsage","usage","promptTokens","prompt_tokens","completionTokens","completion_tokens","totalTokens","total_tokens","requestEndTime","elapsed","errorMetrics","startTime","endTime","elapsedTime","tokenCount","tokensPerSecond","round","isComplete","timeToFirstToken","tokensForMetrics","finalMetrics","stopGenerationAction","clearChat","newChat","resetChat","confirm","downloadChat","history","formatted","name","contentText","Array","isArray","part","text","join","blob","Blob","url","createObjectURL","a","document","createElement","href","download","toISOString","appendChild","click","removeChild","revokeObjectURL","getOrCreateConversation","conversationId","stopGeneration","ChatStateContext","useChatState"],"sourceRoot":""}