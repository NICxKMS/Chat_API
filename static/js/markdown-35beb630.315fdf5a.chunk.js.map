{"version":3,"file":"static/js/markdown-35beb630.315fdf5a.chunk.js","mappings":"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","sources":["../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/react-markdown/node_modules/is-plain-obj/index.js","../node_modules/react-markdown/node_modules/unified/lib/index.js"],"sourcesContent":["/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n"],"names":["u","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","p","q","t","v","a","r","$$typeof","type","exports","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","module","isPlainObject","value","prototype","Object","getPrototypeOf","toStringTag","iterator","unified","base","transformers","trough","attachers","frozen","namespace","freezeIndex","processor","data","key","arguments","length","assertUnfrozen","own","call","Parser","undefined","Compiler","freeze","attacher","options","transformer","use","Number","POSITIVE_INFINITY","_len","Array","_key","settings","addPlugin","TypeError","isArray","addList","addPreset","assign","add","plugin","result","plugins","index","entry","isPlainObj","extend","push","parse","doc","file","vfile","assertParser","newable","String","stringify","node","assertCompiler","assertNode","compile","run","callback","Promise","executor","resolve","reject","done","error","tree","runSync","complete","assertDone","bail","process","isBuffer","processSync","destination","hasOwnProperty","name","keys","Error","asyncName","Boolean","looksLikeAVFile","VFile"],"sourceRoot":""}