{"version":3,"file":"static/js/markdown-1e363059.311d21eb.chunk.js","mappings":"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","sources":["../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/react-markdown/lib/uri-transformer.js"],"sourcesContent":["import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n"],"names":["rehypeFilter","options","allowedElements","disallowedElements","TypeError","allowElement","tree","visit","node","index","parent_","parent","remove","includes","tagName","unwrapDisallowed","children","splice","own","hasOwnProperty","tableElements","Set","childrenToReact","context","child","childIndex","length","type","push","toReact","has","whitespace","value","skipHtml","transform","undefined","transformLinkUri","uriTransformer","parentSchema","schema","name","properties","property","space","svg","call","addProperty","listDepth","position","start","line","column","offset","end","component","components","basic","React","ReactIs","key","linkTarget","target","String","href","title","inline","level","Number","parseInt","charAt","transformImageUri","src","alt","input","getInputElement","checked","Boolean","getElementsBeforeCount","ordered","pos","depth","align","style","textAlign","isHeader","sourcePos","map","join","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","props","prop","ctx","info","find","result","Array","isArray","commaSeparated","commas","spaces","iterator","v","k","slice","replace","styleReplacer","parseStyle","hastToReact","attribute","_","$1","toUpperCase","deprecated","plugins","to","id","renderers","astPlugins","allowDangerousHtml","escapeHtml","source","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","processor","unified","use","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","file","VFile","hastNode","runSync","parse","html","className","propTypes","PropTypes","protocols","uri","url","trim","first","colon","indexOf","protocol","toLowerCase"],"sourceRoot":""}