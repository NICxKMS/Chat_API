{"version":3,"file":"static/js/vendor-refractor-a81a7d65.300e0bd903.chunk.v1_9_5.js","mappings":"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","sources":["../node_modules/refractor/lang/diff.js","../node_modules/refractor/lang/django.js","../node_modules/refractor/lang/dot.js","../node_modules/refractor/lang/docker.js","../node_modules/refractor/lang/dns-zone-file.js","../node_modules/refractor/lang/ebnf.js"],"sourcesContent":["'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n      variable: /\\b\\w+\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dnsZoneFile\ndnsZoneFile.displayName = 'dnsZoneFile'\ndnsZoneFile.aliases = []\nfunction dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n"],"names":["diff","Prism","languages","coord","PREFIXES","unchanged","Object","keys","forEach","name","prefix","alias","test","push","exec","pattern","RegExp","inside","line","lookbehind","defineProperty","value","module","exports","displayName","aliases","refractorMarkupTemplating","require","django","register","comment","tag","delimiter","string","greedy","filter","function","keyword","operator","number","boolean","variable","punctuation","markupTemplating","hooks","add","env","buildPlaceholders","tokenizePlaceholders","jinja2","dot","ID","source","join","IDInside","markup","withID","flags","replace","node","gv","docker","spaceAfterBackSlash","space","option","stringRule","commentRule","re","instruction","options","property","dockerfile","dnsZoneFile","class","type","ebnf","special","definition","rule"],"sourceRoot":""}