{"version":3,"file":"static/js/vendor-refractor-ba3be5d7.24a061ea30.chunk.v1_9_5.js","mappings":"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","sources":["../node_modules/refractor/lang/fsharp.js","../node_modules/refractor/lang/ftl.js","../node_modules/refractor/lang/gdscript.js","../node_modules/refractor/lang/flow.js","../node_modules/refractor/lang/gcode.js","../node_modules/refractor/lang/gap.js","../node_modules/refractor/lang/fortran.js","../node_modules/refractor/lang/gedcom.js"],"sourcesContent":["'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gdscript\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gcode\ngcode.displayName = 'gcode'\ngcode.aliases = []\nfunction gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n"],"names":["fsharp","Prism","languages","extend","comment","pattern","lookbehind","greedy","string","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","annotation","char","module","exports","displayName","aliases","refractorMarkupTemplating","require","ftl","register","FTL_EXPR","source","i","replace","RegExp","interpolation","rest","boolean","function","content","hooks","add","env","buildPlaceholders","tokenizePlaceholders","gdscript","variable","constant","flow","type","Array","isArray","unshift","gcode","property","checksum","gap","shell","continuation","fortran","gedcom","pointer","tag","level"],"sourceRoot":""}