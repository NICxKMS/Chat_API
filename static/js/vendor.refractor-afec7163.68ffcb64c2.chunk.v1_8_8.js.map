{"version":3,"file":"static/js/vendor.refractor-afec7163.68ffcb64c2.chunk.v1_8_8.js","mappings":"sHACA,IAAIA,EAAkBC,EAAQ,OAI9B,SAASC,EAASC,GAChBA,EAAMC,SAASJ,GACd,SAAWG,GAMV,IALA,IAAIE,EACF,mGACGC,OAGIC,EAAI,EAAGA,EADQ,EACeA,IACrCF,EAAmBA,EAAiBG,QAAQ,WAAW,WACrD,OAAOH,CACT,IAEFA,EAAmBA,EAAiBG,QAAQ,UAAW,UAAUF,QACjE,IAAIJ,EAAYC,EAAMM,UAAUP,SAAW,CACzCQ,QAAS,8BACT,kBAAmB,CACjBC,QAASC,OACP,8DAA8DN,OAAOE,QACnE,WACA,WACE,OAAOH,CACT,IAEF,KAEFQ,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACNC,OAAQ,CACNL,QAAS,eACTE,YAAY,EACZI,MAAO,kBACPF,OAAQ,CACN,oBAAqB,CACnBJ,QAAS,iBACTG,QAAQ,EACRC,OAAQ,CACNG,YAAa,YACbhB,SAAU,CACRS,QAAS,UACTM,MAAO,oBACPF,OAAQ,QAIdI,KAAMhB,EAAMM,UAAUO,SAG1BE,YAAa,MAGjBE,OAAQ,CACNT,QAAS,oBACTG,QAAQ,GAEV,aAAc,CACZH,QAAS,mBACTE,YAAY,GAEdQ,QAAS,CACPV,QAAS,iBACTI,OAAQ,CACNG,YAAa,QAGjBI,SAAU,aACVJ,YAAa,CACXP,QACE,uGACFE,YAAY,GAEdU,OAAQ,qBAEVrB,EAAS,mBAAmBa,OAAe,OAAEA,OAC3C,qBACAA,OAAiB,SAAEA,OAASb,EAC9BC,EAAMM,UAAUe,GAAKtB,CACtB,CA5EA,CA4EEC,EACL,CAlFAsB,EAAOC,QAAUxB,EACjBA,EAASyB,YAAc,WACvBzB,EAAS0B,QAAU,E,WCCnB,SAASC,EAAI1B,GACXA,EAAMM,UAAUoB,IAAM,CACpBnB,QAAS,yCAETU,OAAQ,CACNT,QACE,qFACFG,QAAQ,GAEVS,OACE,gHACFF,QACE,0HACFS,SAAU,2BACVR,SAAU,CACR,wCACA,CAEEX,QAAS,qBACTE,YAAY,IAGhBK,YAAa,sBAEjB,CA3BAO,EAAOC,QAAUG,EACjBA,EAAIF,YAAc,MAClBE,EAAID,QAAU,E,WCCd,SAASG,EAAK5B,IACX,SAAWA,GAQV,SAAS6B,EAAYC,GACnB,OAAOrB,OAAO,OAAON,OAAS,MAAQ2B,EAAO,IAAM,aAAa3B,OAClE,CAOA,SAAS4B,EAAUvB,GACjB,OAAOC,OACL,WAAWN,OAAS,MAAQK,EAAU,IAAM,YAAYL,OAE5D,CAGA,IAAI6B,EAAS,6BAA6B7B,OACtC8B,EAAS,IAAMD,EACfE,EAAM,QAENC,EAAQ,UACRC,EACF,oFACGjC,OACDkC,EAAW,CAGbC,QAAS,CACP9B,QAAS,QACTM,MAAO,CAAC,UAAW,UAErBP,QAAS,MACTU,OAAQ,CACNT,QAAS,oBACTG,QAAQ,EACRC,OAAQ,CACN2B,SAAU,oBACVP,OAAQvB,OAAO,IAAMuB,EAAS,OAGlC,gBAAiB,CACfxB,QAASC,OAAO,MAAQuB,GACxBlB,MAAO,CAAC,WAAY,WAEtB,gBAAiB,CACfN,QAASC,OAAO,IAAMuB,GACtBlB,MAAO,YAET0B,OAAQ,CACNhC,QAASC,OAAO,MAAQuB,GACxBlB,MAAO,CAAC,SAAU,aAEpBI,QAAS,CACP,CACEV,QAASC,OACPyB,EACE,8IACAC,GAEJzB,YAAY,GAEd,CACEF,QAASC,OACPyB,EACE,wDACAC,GAEJzB,YAAY,IAGhB+B,QAAS,CACPjC,QAASqB,EAAY,UAAU1B,QAC/BO,YAAY,EACZI,MAAO,WAET4B,YAAa,CACXlC,QAASqB,EAAY,cAAc1B,QACnCO,YAAY,EACZI,MAAO,WAET6B,QAAS,CACPnC,QAASuB,EAAU,QAAQ5B,QAC3BO,YAAY,GAEdU,OAAQ,CACNZ,QAASuB,EAAU,qBAAqB5B,QACxCO,YAAY,GAEdkC,OAAQ,CACNpC,QAASC,OAAOyB,EAAM,oCAAsCF,GAC5DtB,YAAY,EACZE,OAAQ,CACNM,QAAS,aACT2B,SAAUpC,OAAOuB,KAGrBc,MAAO,CACLtC,QAASC,OACPyB,EACE,mCAAmC/B,OACnC6B,EACA,QAAQ7B,OACRiC,EACA,KAAKjC,QAETO,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACNM,QAAS,kBAGT6B,UAAW,KACXpB,SAAU,CACRnB,QAASC,OAAO,SAAWuB,GAC3BtB,YAAY,GAEdK,YAAa,SAGjBiC,OAAQ,CACNxC,QAASC,OACPyB,EACE,yBACAF,EACA,YACAA,EACA,eAEJtB,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACNM,QAAS,UAGT6B,UAAW,KACXhC,YAAa,SAGjBkC,IAAK,CACHzC,QAASC,OAAOyB,EAAMF,GACtBtB,YAAY,GAEdK,YAAa,CAEX,uBACA,CACEP,QAAS,eACTE,YAAY,KAIdwC,EAAM,CACR,cAAezC,OAAOwB,GACtBkB,QAAS,CACP3C,QAASC,OACP,KAAKN,OAAS6B,EAAS,YAAY7B,OAASiC,EAAY,KAAKjC,QAE/DS,OAAQyB,GAEVE,SAAU,CACR/B,QAASC,OAAO,YAAYN,OAAS6B,GACrCtB,YAAY,EACZI,MAAO,YAETE,KAAMqB,GAEJe,EAAQ,oBACRC,EAAU,CACZ7C,QAASC,OAAOyB,EAAME,EArJX,WAsJX1B,YAAY,EACZE,OAAQ,CACN,YAAa,CACXJ,QAASC,OAAO,qBAAuB2C,GACvCxC,OAAQsC,GAEV,oBAAqB,CACnB1C,QAASC,OAAO,wBAA0B2C,GAC1CxC,OAAQsC,GAEVI,KAAM,CACJ9C,QAASC,OAAO,WAAa2C,EAAQ,8BACrCxC,OAAQsC,GAEVX,SAAU,CACR/B,QAASC,OAAOuB,GAChBlB,MAAO,YAETC,YAAa,SAGjBsB,EAAiB,OAAEzB,OAAOmC,UAAYM,EACtChB,EAAgB,MAAEzB,OAAOmC,UAAY/C,EAAMuD,KAAKC,MAAMH,GACtDhB,EAAgB,MAAEzB,OAAOmC,UAAUnC,OAAO6C,QAAUJ,EACpDrD,EAAMM,UAAUsB,KAAOS,EACvBrC,EAAMM,UAAUoD,MAAQrB,EACxBrC,EAAMM,UAAUqD,MAAQtB,EACxBrC,EAAMM,UAAU,cAAgB+B,CACjC,CA7MA,CA6MErC,EACL,CAlNAsB,EAAOC,QAAUK,EACjBA,EAAKJ,YAAc,OACnBI,EAAKH,QAAU,E,WCCf,SAASmC,EAAO5D,IACb,SAAWA,GACVA,EAAMM,UAAUsD,OAAS5D,EAAMM,UAAUuD,OAAO,QAAS,CACvD3C,QAAS,CAEPV,QACE,2bACFE,YAAY,GAEdiB,SAAU,CACR,CACEnB,QAAS,iCACTG,QAAQ,GAEV,CACEH,QAAS,mCACTE,YAAY,EACZC,QAAQ,IAGZS,OACE,kIACFD,SACE,gHAEGnB,EAAMM,UAAUsD,OAAO,cAC9B,IAAIE,EAAsB,CACxB,4BAA6B,CAC3BtD,QAAS,aACTM,MAAO,eAETiD,WAAY,CACVvD,QAAS,UACTI,OAAQZ,EAAMM,UAAUsD,SAG5B5D,EAAMM,UAAU0D,aAAa,SAAU,SAAU,CAE/C,iBAAkB,CAChB,CACExD,QAAS,2CACTM,MAAO,YACPF,OAAQ,CACNqD,cAAe,CACbzD,QAAS,8BACTI,OAAQkD,GAEV7C,OAAQ,YAGZ,CACET,QAAS,iDACTM,MAAO,aACPF,OAAQ,CACNqD,cAAe,CACbzD,QAAS,qDACTE,YAAY,EACZE,OAAQkD,GAEV7C,OAAQ,aAIdiD,KAAM,CAEJ1D,QAAS,6CACTG,QAAQ,YAGLX,EAAMM,UAAUsD,OAAe,OACtC5D,EAAMM,UAAU0D,aAAa,SAAU,UAAW,CAChDG,WAAY,CACV3D,QAAS,sCACTM,MAAO,aAGXd,EAAMM,UAAU0D,aAAa,SAAU,WAAY,CACjDI,MAAO,CACL5D,QAAS,gBACTM,MAAO,YAGXd,EAAMM,UAAU+D,GAAKrE,EAAMM,UAAUsD,OACrC5D,EAAMM,UAAUgE,IAAMtE,EAAMM,UAAUsD,MACvC,CAnFA,CAmFE5D,EACL,CAxFAsB,EAAOC,QAAUqC,EACjBA,EAAOpC,YAAc,SACrBoC,EAAOnC,QAAU,CAAC,KAAM,M,kBCHxB,IAAI8C,EAA4BzE,EAAQ,OACpC0E,EAAe1E,EAAQ,OAI3B,SAAS2E,EAAMzE,GACbA,EAAMC,SAASsE,GACfvE,EAAMC,SAASuE,GACd,SAAWxE,GACVA,EAAMM,UAAUmE,MAAQ,CACtBlE,QAAS,eACT,YAAa,CAEXC,QAAS,kDACTE,YAAY,EACZI,MAAO,aAET4D,UAAW,CACTlE,QAAS,aACTM,MAAO,eAET6D,IAAK,CACHnE,QAAS,mBACTM,MAAO,eACPF,OAAQZ,EAAMM,UAAUqE,MAG5B,IAAIC,EAAc5E,EAAMM,UAAUuD,OAAO,SAAU,CAAC,GACpD7D,EAAMM,UAAU0D,aACd,SACA,aACA,CACE,SAAU,CACRxD,QAAS,qDACTI,OAAQ,CACN,YAAa,CACXJ,QAAS,WACTM,MAAO,aAET,aAAc,CACZN,QAAS,WACTI,OAAQ,CACNG,YAAa,CACX,KACA,CACEP,QAAS,mBACTE,YAAY,IAGhBiE,IAAK,CACHnE,QAAS,mBACTI,OAAQZ,EAAMM,UAAUqE,UAOpCC,EAAYC,KAEd7E,EAAM8E,MAAMC,IAAI,mBAAmB,SAAUC,GAC3C,GAAqB,UAAjBA,EAAI3C,SAAR,CAKArC,EAAMM,UAAU,qBAAqB2E,kBACnCD,EACA,QAHA,wHAMFA,EAAIE,QAAUN,CARd,CASF,IACA5E,EAAM8E,MAAMC,IAAI,kBAAkB,SAAUC,GAC1ChF,EAAMM,UAAU,qBAAqB6E,qBAAqBH,EAAK,QACjE,GACD,CApEA,CAoEEhF,EACL,CA3EAsB,EAAOC,QAAUkD,EACjBA,EAAMjD,YAAc,QACpBiD,EAAMhD,QAAU,E,YCAhB,SAAS2D,EAAKpF,IACX,SAAWA,GACVA,EAAMM,UAAU8E,KAAO,CACrB7E,QAAS,MACTU,OAAQ,CACNT,QAAS,UACTG,QAAQ,GAEVgC,QAAS,qBACTE,SAAU,iDACVuB,MAAO,oCACPiB,KAAM,CACJ7E,QACE,iGACFM,MAAO,cAETI,QAAS,uBACTE,OACE,gIACFL,YAAa,oBAEhB,CApBA,CAoBEf,EACL,CAzBAsB,EAAOC,QAAU6D,EACjBA,EAAK5D,YAAc,OACnB4D,EAAK3D,QAAU,E,YCCf,SAAS6D,EAAItF,GAKXA,EAAMM,UAAUgF,IAAM,CACpBrE,OAAQ,CAENT,QAAS,2DACTG,QAAQ,GAEV4E,UAAW,CACT/E,QACE,uIACFE,YAAY,EACZC,QAAQ,EACRG,MAAO,CAAC,iBAAkB,2BAC1BF,OAAQZ,EAAMM,UAA0B,gBAAK,CAC3CY,QAAS,SACTS,SAAU,qBACVZ,YAAa,WAGjByE,MAAO,CACL,CACEhF,QACE,6EACFM,MAAO,CAAC,QAAS,cAEnB,CACEN,QAAS,2BACTM,MAAO,CAAC,UAAW,cAErB,CACEN,QAAS,yCACTM,MAAO,CAAC,OAAQ,YAElB,CACEN,QAAS,yBACTM,MAAO,CAAC,QAAS,YAEnB,CACEN,QAAS,6CACTM,MAAO,CAAC,QAAS,aAGrB2E,SAAU,CACRjF,QACE,wFACFE,YAAY,GAEdgF,UAAW,CACTlF,QAAS,oCACTE,YAAY,EACZI,MAAO,WAET6E,IAAK,oDACLC,MAAO,CACLpF,QAAS,6DACTE,YAAY,EACZI,MAAO,OAET,aAAc,CACZN,QAAS,kCACTM,MAAO,YAET,cAAe,CACbN,QAAS,sCACTM,MAAO,YAET+E,OAAQ,CACNrF,QACE,qEACFE,YAAY,EACZI,MAAO,YAETgF,KAAM,CACJtF,QACE,oEACFM,MAAO,YAETiF,KAAM,CACJvF,QAAS,6BACTM,MAAO,YAET,YAAa,CACXN,QACE,qFACFE,YAAY,EACZC,QAAQ,EACRG,MAAO,UAETkF,KAAM,CACJxF,QAASC,OACP,4DAA4DN,OAC1D,IACA,4FACGA,OACH,IACA,uKACGA,OACL,KAEFW,MAAO,UAETmF,KAAM,CACJzF,QACE,qEACFM,MAAO,UAET6B,QAAS,2BACTvB,OAAQ,CACNZ,QACE,yGACFE,YAAY,GAEdS,SAAU,6BACVJ,YAAa,WAEjB,CA1HAO,EAAOC,QAAU+D,EACjBA,EAAI9D,YAAc,MAClB8D,EAAI7D,QAAU,E,kBCHd,IAAI8C,EAA4BzE,EAAQ,OAIxC,SAASoG,EAAOlG,GACdA,EAAMC,SAASsE,GACfvE,EAAMM,UAAU4F,OAAS,CACvB3F,QAAS,CACPC,QAAS,2DACTE,YAAY,GAEdgE,UAAW,CACTlE,QAAS,0CACTM,MAAO,eAETG,OAAQ,CACNT,QAAS,kBACTG,QAAQ,GAEVO,QACE,oOACFiF,OACE,ywBACFxE,SAAU,CACR,CACEnB,QAAS,aACTE,YAAY,EACZI,MAAO,UAET,CAEEN,QAAS,6BACTE,YAAY,IAGhBiC,QAAS,yBACTyD,MAAO,CACL5F,QAAS,OACTM,MAAO,YAGTM,OAAQ,oBACRD,SAAU,wDACVJ,YAAa,aACbsF,MAAO,CACL7F,QAAS,YACTM,MAAO,YAGXd,EAAM8E,MAAMC,IAAI,mBAAmB,SAAUC,GAC3C,IAEIsB,GAAY,EAChBtG,EAAMM,UAAU,qBAAqB2E,kBACnCD,EACA,SAJA,uGAMA,SAAUuB,GACR,IAAIC,EAAW,iBAAiBC,KAAKF,GACrC,GAAIC,EAAU,CACZ,IAAI3B,EAAM2B,EAAS,GACnB,GAAY,QAAR3B,IAAkByB,EAEpB,OADAA,GAAY,GACL,EACF,GAAY,WAARzB,EAET,OADAyB,GAAY,GACL,CAEX,CACA,OAAQA,CACV,GAEJ,IACAtG,EAAM8E,MAAMC,IAAI,kBAAkB,SAAUC,GAC1ChF,EAAMM,UAAU,qBAAqB6E,qBAAqBH,EAAK,SACjE,GACF,CA3EA1D,EAAOC,QAAU2E,EACjBA,EAAO1E,YAAc,SACrB0E,EAAOzE,QAAU,E,YCCjB,SAASiF,EAAW1G,GAClBA,EAAMM,UAAUoG,WAAa,CAC3BnG,QAAS,CACPC,QAAS,SACTG,QAAQ,GAEVM,OAAQ,CACNT,QACE,uFACFE,YAAY,EACZC,QAAQ,GAGVgG,GAAI,CACFnG,QAASC,OACP,shBAAshBN,OAAOE,QAC3hB,WACA,WACE,MAAO,0FACJF,MACL,IAEF,KAEFW,MAAO,UAGT8F,KAAM,CACJpG,QACE,qEACFE,YAAY,EACZI,MAAO,UAET+B,SAAU,cACV+C,MAAO,CACLpF,QAAS,qCACTM,MAAO,UAET,4BAA6B,CAC3BN,QAAS,aACTM,MAAO,YAETK,SAAU,IACVsE,SACE,ilIACFoB,SACE,mIACFzF,OAAQ,CACNZ,QAAS,6BACTE,YAAY,GAEdiC,QAAS,mCACT5B,YAAa,SAEjB,CAzDAO,EAAOC,QAAUmF,EACjBA,EAAWlF,YAAc,aACzBkF,EAAWjF,QAAU,E,YCCrB,SAASqF,EAAM9G,GACbA,EAAMM,UAAUwG,MAAQ,CACtBvG,QAAS,CAGPC,QACE,6EACFE,YAAY,GAEdqG,MAAO,CAELvG,QAAS,oCACTG,QAAQ,GAEVM,OAAQ,CAINT,QACE,uEACFG,QAAQ,GAEVuD,KAAM,CAEJ1D,QAAS,+CACTE,YAAY,EACZC,QAAQ,GAEVO,QACE,6PACFyB,QAAS,qBACTvB,OACE,kIAGFD,SACE,+FACFJ,YAAa,oBAEb8F,SAAU,8CAEd,CA5CAvF,EAAOC,QAAUuF,EACjBA,EAAMtF,YAAc,QACpBsF,EAAMrF,QAAU,E,YCChB,SAASuF,EAAQhH,GACfA,EAAMM,UAAU0G,QAAU,CACxBzG,QAAS,CAAC,2BAA4B,WACtCU,OAAQ,CACNT,QAAS,kBACTI,OAAQ,CACNiC,SAAU,aACVb,OAAQ,CAAC,iBAAkB,cAAe,aAE5CrB,QAAQ,GAEVS,OAAQ,sCACRY,OAAQ,CACNxB,QAAS,iEACTE,YAAY,EACZE,OAAQ,CACNM,QAAS,YAGbkD,MAAO,CACL5D,QAAS,iDACTE,YAAY,EACZI,MAAO,UAETa,SAAU,CACRnB,QAAS,6CACTE,YAAY,GAEdQ,QAAS,CACP,CACEV,QACE,sRACFE,YAAY,GAEd,gBAEFiC,QAAS,CACPnC,QAAS,+BACTE,YAAY,GAEdmC,SAAU,CACRrC,QAAS,qBACTE,YAAY,GAEdS,SAAU,CACRX,QACE,uHACFE,YAAY,GAEdK,YAAa,cAEjB,CAtDAO,EAAOC,QAAUyF,EACjBA,EAAQxF,YAAc,UACtBwF,EAAQvF,QAAU,E,YCClB,SAASwF,EAAMjH,IACZ,SAAWA,GACV,IAAIkH,EAAc,6BACdC,EAAY,CACd,mBAAoB,CAClB3G,QAAS0G,EACTpG,MAAO,UAGXd,EAAMM,UAAU2G,MAAQ,CACtB1G,QAAS,MAET6G,MAAO,CACL5G,QACE,mEACFE,YAAY,GAMd2G,SAAU,CACR,CACE7G,QACE,0FACFI,OAAQuG,EACRrG,MAAO,UAET,CACEN,QACE,4FACFE,YAAY,EACZE,OAAQuG,EACRrG,MAAO,WAOXI,QAAS,CACPV,QACE,wFACFE,YAAY,GAEdiF,IAAK,CACHnF,QAAS,uBACTE,YAAY,GAMd4G,SAAU,CACR9G,QACE,4JACFE,YAAY,EACZI,MAAO,cAETa,SAAU,CACRnB,QAAS0G,EACTpG,MAAO,YAETC,YAAa,YAEff,EAAMM,UAAUiH,IAAMvH,EAAMM,UAAU2G,MACtCjH,EAAMM,UAAUkH,QAAUxH,EAAMM,UAAU2G,KAC3C,CAlEA,CAkEEjH,EACL,CAvEAsB,EAAOC,QAAU0F,EACjBA,EAAMzF,YAAc,QACpByF,EAAMxF,QAAU,CAAC,MAAO,U,YCCxB,SAASgG,EAAMzH,GACbA,EAAMM,UAAUmH,MAAQ,CACtBlH,QAAS,CACPC,QAAS,SACTG,QAAQ,GAEVM,OAAQ,CACNT,QACE,mGACFG,QAAQ,GAEV+G,KAAM,CACJlH,QAAS,sBACTE,YAAY,EACZI,MAAO,WAET6G,QAAS,CACPnH,QAAS,qBACTM,MAAO,WAET,aACE,2EACFI,QACE,ibACFyB,QAAS,0BACThB,SAAU,uBACViG,SAAU,CACR,CAEEpH,QACE,2QACFM,MAAO,UAET,CAEEN,QACE,2GACFM,MAAO,WAGXM,OACE,oHACFD,SAAU,kCACVJ,YAAa,iBAEjB,CAhDAO,EAAOC,QAAUkG,EACjBA,EAAMjG,YAAc,QACpBiG,EAAMhG,QAAU,E,YCChB,SAASoG,EAAK7H,GAQZA,EAAMM,UAAUuH,KAAO7H,EAAMM,UAAUuD,OAAO,MAAO,CACnDtD,QAAS,CACP,mBACA,CACEC,QAAS,kBACTE,YAAY,IAGhBoH,OAAQ,CACNtH,QACE,0EACFI,OAAQ,CACNG,YAAa,UAIjBgH,SAAU,CACRvH,QACE,0GACFI,OAAQ,CAENiC,SAAU,aAGd4C,SAAU,0CACVtE,SAAU,aAEZnB,EAAMM,UAAU0D,aAAa,OAAQ,WAAY,CAC/CnB,SAAU,CAER,CACErC,QAAS,cACTI,OAAQ,CACNG,YAAa,MAGjB,aAEF,cAAe,CACbP,QAAS,sCACTE,YAAY,EACZI,MAAO,aAGb,CAvDAQ,EAAOC,QAAUsG,EACjBA,EAAKrG,YAAc,OACnBqG,EAAKpG,QAAU,E,YCCf,SAASuG,EAAWhI,GAClBA,EAAMM,UAAU0H,WAAa,CAC3BzH,QAAS,CACP,CACEC,QAAS,4BACTE,YAAY,GAEd,CACEF,QAAS,eACTE,YAAY,IAGhB,sBAAuB,CAGrBF,QAAS,kDACTE,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACNiC,SAAU,CACRrC,QAAS,sCACTE,YAAY,GAEduD,cAAe,CACbzD,QAAS,uBACTE,YAAY,EACZE,OAAQ,CACN,4BAA6B,CAC3BJ,QAAS,WACTM,MAAO,cAIbG,OAAQ,YAGZA,OAAQ,CACN,CACET,QAAS,qCACTG,QAAQ,GAEV,CACEH,QAAS,iBACTG,QAAQ,GAEV,kBAEFoG,MAAO,CACL,CACEvG,QAAS,8DACTG,QAAQ,EACRC,OAAQ,CACNL,QAAS,CACPC,QAAS,eACTE,YAAY,KAIlB,CACEF,QAAS,uDACTG,QAAQ,IAGZO,QAAS,CACPV,QACE,wQACFE,YAAY,GAEd,mBAAoB,CAClBF,QACE,+JACFE,YAAY,EACZI,MAAO,YAET6B,QAAS,CACPnC,QAAS,iDACTE,YAAY,GAEd6B,SAAU,CAER/B,QAAS,8BACTE,YAAY,EACZI,MAAO,YAETM,OAAQ,2DACR6G,WAAY,4BACZ9G,SAAU,CAER,CACEX,QAAS,aACTE,YAAY,GAwBd,qLAEFK,YAAa,oBAEff,EAAMM,UAAU0H,WAAW,uBAAuBpH,OACjC,cACfA,OAAOI,KAAOhB,EAAMM,UAAU0H,UAClC,CA5HA1G,EAAOC,QAAUyG,EACjBA,EAAWxG,YAAc,aACzBwG,EAAWvG,QAAU,E,YCCrB,SAASyG,EAAMlI,IAEZ,SAAWA,GAMV,IAAImI,EAAQ,sDAAsDhI,OAQlE,SAASiI,EAAO5H,EAAS6H,GACvB,OAAO5H,OAAOD,EAAQH,QAAQ,WAAY8H,GAAQE,EACpD,CACArI,EAAMM,UAAU4H,MAAQ,CACtB3H,QAAS,CACPC,QAAS,QAEX8H,OAAQ,CACN9H,QAAS,MACTG,QAAQ,GAEVM,OAAQ,CACNT,QAAS,0BACTG,QAAQ,GAEVgC,QAAS,CACPnC,QAAS4H,EAAO,yCAAyCjI,QACzDO,YAAY,GAEd,gBAAiB,CACfF,QAAS4H,EAAO,2CAA2CjI,QAC3DO,YAAY,EACZI,MAAO,WAET,kBAAmB,CACjBN,QAAS4H,EAAO,mCAAmCjI,QACnDO,YAAY,EACZI,MAAO,WAETuE,KAAM,CACJ,CACE7E,QAAS4H,EACP,mEACGjI,QAELO,YAAY,EACZI,MAAO,WAET,CACEN,QAAS4H,EACP,0DAA0DjI,QAE5DO,YAAY,EACZI,MAAO,cAQXI,QAAS,CACPV,QAAS4H,EACP,qPACGjI,QAELO,YAAY,GAGdoB,KAAM,CAEJtB,QAAS4H,EACP,2EACGjI,QAELO,YAAY,GAGdU,OAAQ,CACNZ,QAAS4H,EACP,2FACGjI,OACH,KAEFO,YAAY,GAGdK,YAAa,iBAMb,gBAAiB,CACfP,QAAS,0BACTM,MAAO,aAGXd,EAAMM,UAAUiI,IAAMvI,EAAMM,UAAU4H,KACvC,CAvGA,CAuGElI,EACL,CA7GAsB,EAAOC,QAAU2G,EACjBA,EAAM1G,YAAc,QACpB0G,EAAMzG,QAAU,CAAC,M,YCCjB,SAAS+G,EAAOxI,GACdA,EAAMM,UAAUkI,OAAS,CACvBjI,QAAS,CACPC,QAAS,UACTG,QAAQ,GAEVM,OAAQ,CACNT,QAAS,0BACTG,QAAQ,GAEV,cAAe,CACbH,QACE,4HACFG,QAAQ,EACRG,MAAO,YAGT,iBAAkB,CAChBN,QAAS,OACTM,MAAO,QAET,mBAAoB,CAClBN,QACE,8HACFM,MAAO,QAET,eAAgB,CACdN,QACE,+HACFM,MAAO,WAET,qBAAsB,CACpBN,QAAS,6DACTM,MAAO,WAET,iBAAkB,CAChBN,QAAS,kDACTM,MAAO,YAGTM,OAAQ,0CACRD,SAAU,eACVJ,YAAa,SAEjB,CA/CAO,EAAOC,QAAUiH,EACjBA,EAAOhH,YAAc,SACrBgH,EAAO/G,QAAU,E","sources":["../node_modules/refractor/lang/lilypond.js","../node_modules/refractor/lang/lua.js","../node_modules/refractor/lang/lisp.js","../node_modules/refractor/lang/kotlin.js","../node_modules/refractor/lang/latte.js","../node_modules/refractor/lang/llvm.js","../node_modules/refractor/lang/log.js","../node_modules/refractor/lang/liquid.js","../node_modules/refractor/lang/keepalived.js","../node_modules/refractor/lang/julia.js","../node_modules/refractor/lang/lolcode.js","../node_modules/refractor/lang/latex.js","../node_modules/refractor/lang/kusto.js","../node_modules/refractor/lang/less.js","../node_modules/refractor/lang/livescript.js","../node_modules/refractor/lang/kumir.js","../node_modules/refractor/lang/keyman.js"],"sourcesContent":["'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source // symbol starting with & used in function arguments\n    var marker = '&' + symbol // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))' // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/, // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = llvm\nllvm.displayName = 'llvm'\nllvm.aliases = []\nfunction llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","'use strict'\n\nmodule.exports = keepalived\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\nfunction keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = ['tex', 'context']\nfunction latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kusto\nkusto.displayName = 'kusto'\nkusto.aliases = []\nfunction kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            } // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      }, // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = kumir\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\nfunction kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern: /\\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n"],"names":["refractorScheme","require","lilypond","Prism","register","schemeExpression","source","i","replace","languages","comment","pattern","RegExp","lookbehind","greedy","inside","scheme","alias","punctuation","rest","string","keyword","operator","number","ly","module","exports","displayName","aliases","lua","function","lisp","simple_form","name","primitive","symbol","marker","par","space","nestedPar","language","heading","argument","splice","declare","interactive","boolean","defvar","variable","defun","arguments","lambda","car","arg","varform","forms","arglist","keys","util","clone","sublist","elisp","emacs","kotlin","extend","interpolationInside","expression","insertBefore","interpolation","char","annotation","label","kt","kts","refractorMarkupTemplating","refractorPhp","latte","delimiter","php","markupLatte","tag","hooks","add","env","buildPlaceholders","grammar","tokenizePlaceholders","llvm","type","log","exception","level","property","separator","url","email","domain","uuid","hash","date","time","liquid","object","range","empty","insideRaw","match","tagMatch","exec","keepalived","ip","path","constant","julia","regex","lolcode","latex","funcPattern","insideEqu","cdata","equation","headline","tex","context","kusto","verb","command","datetime","less","atrule","selector","livescript","identifier","kumir","nonId","wrapId","flags","prolog","kum","keyman"],"sourceRoot":""}