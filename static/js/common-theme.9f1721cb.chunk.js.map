{"version":3,"file":"static/js/common-theme.9f1721cb.chunk.js","mappings":"qMAQA,MAAMA,GAAcC,EAAAA,EAAAA,OAAK,KACvB,MAAM,MAAEC,EAAK,YAAEC,IAAgBC,EAAAA,EAAAA,KAE/B,OACEC,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAAA,EAAOC,YAClBC,QAASN,EACT,aAAY,aAAuB,SAAVD,EAAmB,QAAU,cACtDQ,MAAO,aAAuB,SAAVR,EAAmB,QAAU,cAAcS,SAEpD,SAAVT,GACCG,EAAAA,EAAAA,KAACO,EAAO,CAACN,UAAWC,EAAAA,EAAOM,QAE3BR,EAAAA,EAAAA,KAACS,EAAQ,CAACR,UAAWC,EAAAA,EAAOM,QAEvB,IAKPD,EAAUG,IAAA,IAAC,UAAET,GAAWS,EAAA,OAC5BC,EAAAA,EAAAA,MAAA,OACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfjB,UAAWA,EACX,cAAY,OAAMK,SAAA,EAElBN,EAAAA,EAAAA,KAAA,UAAQmB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BrB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChCzB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjCzB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,UACvCzB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,QAAQC,GAAG,QAAQC,GAAG,QAAQC,GAAG,WAC1CzB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAC/BzB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjCzB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,OAAOC,GAAG,QAAQC,GAAG,OAAOC,GAAG,WACxCzB,EAAAA,EAAAA,KAAA,QAAMsB,GAAG,QAAQC,GAAG,OAAOC,GAAG,QAAQC,GAAG,WACrC,EAGFhB,EAAWiB,IAAA,IAAC,UAAEzB,GAAWyB,EAAA,OAC7B1B,EAAAA,EAAAA,KAAA,OACEY,MAAM,6BACNC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfjB,UAAWA,EACX,cAAY,OAAMK,UAElBN,EAAAA,EAAAA,KAAA,QAAM2B,EAAE,qDACJ,EAIRhC,EAAYiC,YAAc,cAE1B,S","sources":["components/common/ThemeToggle/index.js"],"sourcesContent":["import { memo } from 'react';\nimport { useTheme } from '../../../contexts/ThemeContext';\nimport styles from './ThemeToggle.module.css';\n\n/**\n * Theme toggle button that switches between light and dark modes\n * @returns {JSX.Element} - Rendered toggle button\n */\nconst ThemeToggle = memo(() => {\n  const { theme, toggleTheme } = useTheme();\n  \n  return (\n    <button \n      className={styles.themeToggle} \n      onClick={toggleTheme}\n      aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n      title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n    >\n      {theme === 'dark' ? (\n        <SunIcon className={styles.icon} />\n      ) : (\n        <MoonIcon className={styles.icon} />\n      )}\n    </button>\n  );\n});\n\n// SVG icons as components for better performance\nconst SunIcon = ({ className }) => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    viewBox=\"0 0 24 24\" \n    fill=\"none\" \n    stroke=\"currentColor\" \n    strokeWidth=\"2\" \n    strokeLinecap=\"round\" \n    strokeLinejoin=\"round\" \n    className={className}\n    aria-hidden=\"true\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n  </svg>\n);\n\nconst MoonIcon = ({ className }) => (\n  <svg \n    xmlns=\"http://www.w3.org/2000/svg\" \n    viewBox=\"0 0 24 24\" \n    fill=\"none\" \n    stroke=\"currentColor\" \n    strokeWidth=\"2\" \n    strokeLinecap=\"round\" \n    strokeLinejoin=\"round\" \n    className={className}\n    aria-hidden=\"true\"\n  >\n    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n  </svg>\n);\n\n// Display name for debugging\nThemeToggle.displayName = 'ThemeToggle';\n\nexport default ThemeToggle; "],"names":["ThemeToggle","memo","theme","toggleTheme","useTheme","_jsx","className","styles","themeToggle","onClick","title","children","SunIcon","icon","MoonIcon","_ref","_jsxs","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","_ref2","d","displayName"],"sourceRoot":""}