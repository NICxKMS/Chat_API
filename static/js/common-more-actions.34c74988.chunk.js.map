{"version":3,"file":"static/js/common-more-actions.34c74988.chunk.js","mappings":"oMAUA,MAyDA,EAzDoBA,IAAuB,IAAtB,QAAEC,EAAU,IAAID,EACnC,MAAOE,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAC/BC,GAAUC,EAAAA,EAAAA,QAAO,OAGvBC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAsBC,IACtBJ,EAAQK,UAAYL,EAAQK,QAAQC,SAASF,EAAMG,SACrDT,GAAU,EACZ,EAIF,OADAU,SAASC,iBAAiB,YAAaN,GAChC,KACLK,SAASE,oBAAoB,YAAaP,EAAmB,CAC9D,GACA,IAMH,OACEQ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOC,qBAAsBC,IAAKf,EAAQgB,SAAA,EACxDC,EAAAA,EAAAA,KAAA,UACEL,UAAW,GAAGC,EAAAA,EAAOK,cAAcrB,EAASgB,EAAAA,EAAOM,OAAS,KAC5DC,QARaC,KACjBvB,GAAWD,EAAO,EAQd,aAAYA,EAAS,qBAAuB,oBAC5C,gBAAeA,EAAOmB,UAEtBC,EAAAA,EAAAA,KAACK,EAAAA,IAAmB,CAACC,KAAM,GAAIX,UAAWC,EAAAA,EAAOW,UAGnDP,EAAAA,EAAAA,KAAA,OAAKL,UAAW,GAAGC,EAAAA,EAAOY,eAAe5B,EAASgB,EAAAA,EAAOa,KAAO,KAAKV,SAClEpB,EAAQ+B,KAAI,CAACC,EAAQC,KACpBlB,EAAAA,EAAAA,MAAA,UAEEC,UAAWC,EAAAA,EAAOiB,aAClBV,QAASA,KACPQ,EAAOR,UACPtB,GAAU,EAAM,EAElB,aAAY8B,EAAOG,MACnBC,MAAO,CAELC,gBAAiBpC,EAAoB,GAARgC,EAAH,KAAoB,OAC9Cb,SAAA,EAEFC,EAAAA,EAAAA,KAAA,QAAML,UAAWC,EAAAA,EAAOqB,WAAWlB,SAAEY,EAAOJ,QAC5CP,EAAAA,EAAAA,KAAA,QAAML,UAAWC,EAAAA,EAAOsB,YAAYnB,SAAEY,EAAOG,UAbxCF,SAiBP,C","sources":["components/common/MoreActions/index.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { KebabHorizontalIcon } from '@primer/octicons-react';\nimport styles from './MoreActions.module.css';\n\n/**\n * More Actions component that shows/hides additional action buttons\n * @param {Object} props - Component props\n * @param {Array} props.actions - Array of action objects with { icon, label, onClick }\n * @returns {JSX.Element} - Rendered component\n */\nconst MoreActions = ({ actions = [] }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  \n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  \n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  \n  return (\n    <div className={styles.moreActionsContainer} ref={menuRef}>\n      <button \n        className={`${styles.moreButton} ${isOpen ? styles.active : ''}`}\n        onClick={toggleMenu}\n        aria-label={isOpen ? 'Close actions menu' : 'Open actions menu'}\n        aria-expanded={isOpen}\n      >\n        <KebabHorizontalIcon size={20} className={styles.icon} />\n      </button>\n      \n      <div className={`${styles.actionsMenu} ${isOpen ? styles.open : ''}`}>\n        {actions.map((action, index) => (\n          <button\n            key={index}\n            className={styles.actionButton}\n            onClick={() => {\n              action.onClick();\n              setIsOpen(false);\n            }}\n            aria-label={action.label}\n            style={{\n              // Add staggered animation delay for each button\n              transitionDelay: isOpen ? `${index * 50}ms` : '0ms'\n            }}\n          >\n            <span className={styles.actionIcon}>{action.icon}</span>\n            <span className={styles.actionLabel}>{action.label}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MoreActions; "],"names":["_ref","actions","isOpen","setIsOpen","useState","menuRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","styles","moreActionsContainer","ref","children","_jsx","moreButton","active","onClick","toggleMenu","KebabHorizontalIcon","size","icon","actionsMenu","open","map","action","index","actionButton","label","style","transitionDelay","actionIcon","actionLabel"],"sourceRoot":""}