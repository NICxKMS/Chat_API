{"version":3,"file":"static/js/small-chunks-4f064d56.b33e5ac5.js","mappings":"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","sources":["components/auth/AuthButton/index.js","components/auth/LoginModal.js","App.js"],"sourcesContent":["import { memo } from 'react';\nimport { SignInIcon} from '@primer/octicons-react';\n// Import icons using the correct paths\nimport styles from './AuthButton.module.css';\n\n/**\n * Auth button component for login/logout\n * @param {Object} props - Component props\n * @param {boolean} props.isAuthenticated - Whether the user is authenticated\n * @param {Function} props.onLogin - Function to handle login\n * @param {Function} props.onLogout - Function to handle logout\n * @param {string} props.userName - User's display name or email\n * @param {boolean} props.isLoading - Whether authentication is in progress\n * @param {Object} props.currentUser - Firebase user object with photoURL\n * @returns {JSX.Element} - Rendered component\n */\nconst AuthButton = memo(({ \n  isAuthenticated, \n  onLogin, \n  onLogout, \n  userName,\n  isLoading,\n  currentUser\n}) => {\n  return (\n    <button \n      className={styles.authButton}\n      onClick={isAuthenticated ? onLogout : onLogin}\n      disabled={isLoading}\n      title={isLoading ? \"Checking authentication...\" : isAuthenticated ? `Logged in as ${userName}. Click to logout.` : \"Login / Sign Up\"}\n      aria-label={isLoading ? \"Loading Authentication\" : isAuthenticated ? \"Logout\" : \"Login or Sign Up\"}\n    >\n      {isLoading ? (\n        <div className={styles.spinner}></div>\n      ) : isAuthenticated ? (\n        currentUser?.photoURL ? (\n          <img \n            src={currentUser.photoURL} \n            alt={`${userName}'s profile`}\n            className={styles.userAvatar}\n            loading=\"lazy\"\n          />\n        ) : (\n          <div className={styles.userInitial}>\n            {userName.charAt(0).toUpperCase()}\n          </div>\n        )\n      ) : (\n        <SignInIcon size={20} className={styles.icon} />\n      )}\n    </button>\n  );\n});\n\n// Display name for debugging\nAuthButton.displayName = 'AuthButton';\n\nexport default AuthButton;\n","import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { IoMdClose } from 'react-icons/io';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaGithub } from 'react-icons/fa';\nimport Spinner from '../common/Spinner';\nimport styles from './LoginModal.module.css';\n// Assuming a Spinner component exists\n\n// Import icons using the correct paths\n// Icon for email/pass\n\nconst LoginModal = ({ onClose }) => {\n  const { setIsLoggingIn, error: authContextError } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Clear local error when auth context error changes (e.g., token fetch error)\n  useEffect(() => {\n    if (authContextError) {\n      setError(authContextError);\n    }\n  }, [authContextError]);\n\n  const handleSignIn = async (provider) => {\n    // Dynamically import Firebase auth to defer load\n    const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../../firebaseConfig');\n    const { signInWithPopup } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const auth = getFirebaseAuth();\n    if (!auth) {\n      setError(\"Firebase not initialized. Cannot sign in.\");\n      return;\n    }\n    setIsLoading(true);\n    setError(null); // Clear previous errors\n    try {\n      await signInWithPopup(auth, provider);\n      // onAuthStateChanged in AuthContext will handle the rest (closing modal, setting user state)\n      console.log(\"Popup sign-in successful.\");\n    } catch (err) {\n      console.error(\"Popup Sign-in Error:\", err);\n      // Customize error messages based on err.code\n      if (err.code === 'auth/popup-closed-by-user') {\n        console.log('Popup sign-in cancelled by user.');\n        // Close the modal as the user cancelled\n        setIsLoggingIn(false);\n        if (onClose) onClose();\n      } else if (err.code === 'auth/cancelled-popup-request') {\n        console.log('Popup sign-in cancelled (multiple requests).');\n        // Close the modal\n        setIsLoggingIn(false);\n        if (onClose) onClose();\n      } else if (err.code === 'auth/popup-blocked') {\n        setError('Popup blocked by browser. Please allow popups for this site.');\n        // Keep modal open to show the error in this case\n        setIsLoading(false);\n      } else {\n        setError(err.message || 'Failed to sign in. Please try again.');\n        // Keep modal open to show unexpected errors\n        setIsLoading(false);\n      }\n    }\n    // No finally block needed, loading is handled by success/error paths\n  };\n\n  const handleEmailSignIn = async (e) => {\n    e.preventDefault(); // Prevent form submission reload\n    const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../../firebaseConfig');\n    const { signInWithEmailAndPassword } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const auth = getFirebaseAuth();\n    if (!auth) {\n      setError(\"Firebase not initialized.\");\n      return;\n    }\n    if (!email || !password) {\n        setError(\"Please enter both email and password.\");\n        return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      // onAuthStateChanged handles the rest\n      console.log(\"Email/Password sign-in successful.\");\n    } catch (err) {\n      console.error(\"Email Sign-in Error:\", err);\n      setError(err.message || 'Failed to sign in with email.');\n      setIsLoading(false);\n    }\n  };\n\n  const handleEmailSignUp = async (e) => {\n    e.preventDefault(); // Prevent form submission reload\n    const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../../firebaseConfig');\n    const { createUserWithEmailAndPassword } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const auth = getFirebaseAuth();\n    if (!auth) {\n      setError(\"Firebase not initialized.\");\n      return;\n    }\n    if (!email || !password) {\n        setError(\"Please enter both email and password.\");\n        return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      // onAuthStateChanged handles the rest\n      console.log(\"Email/Password sign-up successful.\");\n    } catch (err) {\n      console.error(\"Email Sign-up Error:\", err);\n      setError(err.message || 'Failed to sign up with email.');\n      setIsLoading(false);\n    }\n  };\n\n  // Dynamically import GoogleAuthProvider to avoid bundling and missing reference\n  const handleGoogleSignIn = async () => {\n    const { GoogleAuthProvider } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const googleProvider = new GoogleAuthProvider();\n    handleSignIn(googleProvider);\n  };\n\n  // Dynamically import GithubAuthProvider to avoid missing reference\n  const handleGithubSignIn = async () => {\n    const { GithubAuthProvider } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const githubProvider = new GithubAuthProvider();\n    handleSignIn(githubProvider);\n  };\n\n  const closeModal = () => {\n    // Only close if not currently in the middle of a sign-in attempt\n    if (!isLoading) {\n      setIsLoggingIn(false);\n      if (onClose) onClose();\n    }\n  };\n\n  return (\n    <div className={styles.overlay} onClick={closeModal}>\n      <div className={styles.modal} onClick={(e) => e.stopPropagation()}>\n        <button className={styles.closeButton} onClick={closeModal} aria-label=\"Close login\">\n          <IoMdClose />\n        </button>\n        <h2 className={styles.title}>Login / Sign Up</h2>\n        <p className={styles.subtitle}>Choose a provider to continue</p>\n\n        {isLoading && (\n          <div className={`${styles.spinnerContainer} ${styles.fullHeightSpinner}`}> {/* Make spinner take full height when loading */}\n            <Spinner size=\"large\" />\n            <p>Connecting...</p>\n          </div>\n        )}\n\n        {!isLoading && (\n          // Email/Password form is now the default content when not loading\n          <form className={styles.emailForm} onSubmit={handleEmailSignIn}> {/* Added onSubmit */} \n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className={styles.inputField}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className={styles.inputField}\n            />\n            <div className={styles.emailButtonContainer}>\n              <button type=\"submit\" className={styles.emailButton} disabled={isLoading}>\n                Sign In\n              </button>\n              <button type=\"button\" onClick={handleEmailSignUp} className={`${styles.emailButton} ${styles.signUpButton}`} disabled={isLoading}>\n                Sign Up\n              </button>\n            </div>\n          </form>\n        )}\n\n        {/* Alternative Sign-in Providers (Icons) - Shown below email form when not loading */}\n        {!isLoading && (\n          <div className={styles.alternativeLoginContainer}>\n            <p className={styles.alternativeLoginText}>Or sign in with</p>\n            <div className={styles.providerIconContainer}>\n              <button\n                className={styles.providerIconButton}\n                onClick={handleGoogleSignIn}\n                disabled={isLoading}\n                title=\"Sign in with Google\"\n                aria-label=\"Sign in with Google\"\n              >\n                <FcGoogle />\n              </button>\n              <button\n                className={styles.providerIconButton}\n                onClick={handleGithubSignIn}\n                disabled={isLoading}\n                title=\"Sign in with GitHub\"\n                aria-label=\"Sign in with GitHub\"\n              >\n                <FaGithub />\n              </button>\n              {/* Add other provider icons here if needed */}\n            </div>\n          </div>\n        )}\n\n        {error && <p className={styles.error}>{error}</p>}\n\n        <p className={styles.footerText}>\n          By signing in, you agree to our imaginary Terms of Service.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginModal; ","/* eslint-disable no-unused-vars */\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport { ContextManager } from './contexts/ContextManager';\nimport Spinner from './components/common/Spinner';\nimport { performanceMonitor, PERFORMANCE_MARKS, PERFORMANCE_MEASURES } from './utils/performance';\nimport { basicFormattingImports, advancedFormattingImports, modelSelectorImports } from './utils/preloadFormatting';\n\n// === Phase 1: Critical (lazy) components ===\nconst Layout = lazy(() => import(/* webpackPreload: true, webpackChunkName: \"layout\" */ './components/layout/Layout'));\nconst LoginModal = lazy(() => import(/* webpackChunkName: \"login-modal\" */ './components/auth/LoginModal'));\n\n// === Preload lists ===\n// Combined core and UI imports for faster initial load\nconst ESSENTIAL_IMPORTS = [\n  // Core UI components\n  () => import(/* webpackPreload: true, webpackChunkName: \"layout\" */ './components/layout/Layout'),\n  () => import(/* webpackPreload: true, webpackChunkName: \"chat-container\" */ './components/chat/ChatContainer'),\n  () => import(/* webpackPreload: true, webpackChunkName: \"chat-input\" */ './components/chat/ChatInput'),\n  ...modelSelectorImports,\n  () => import(/* webpackChunkName: \"models-dropdown\" */ './components/models/ModelDropdown'),\n  \n  // Additional UI components\n  () => import(/* webpackChunkName: \"layout-sidebar\" */ './components/layout/Sidebar'),\n  () => import(/* webpackChunkName: \"common-theme\" */ './components/common/ThemeToggle'),\n  () => import(/* webpackChunkName: \"layout-sidebar-toggle\" */ './components/layout/SidebarToggle'),\n  () => import(/* webpackChunkName: \"chat-messagelist\" */ './components/chat/MessageList'),\n  () => import(/* webpackChunkName: \"auth-button\" */ './components/auth/AuthButton'),\n  () => import(/* webpackChunkName: \"chat-globalmetrics\" */ './components/chat/GlobalMetricsBar'),\n  () => import(/* webpackChunkName: \"common-more-actions\" */ './components/common/MoreActions'),\n];\n\nconst BASIC_IMPORTS = [\n  ...basicFormattingImports, // Just react-markdown and remark-gfm\n  // Settings panel (load with basic components)\n  () => import(/* webpackChunkName: \"settings-panel\" */ './components/settings/SettingsPanel'),\n];\n\nconst HEAVY_IMPORTS = [\n  ...advancedFormattingImports,          // StreamingMessage and all formatting tools (syntax-highlighter, KaTeX, etc.)\n  // Firebase auth imports\n  () => import(/* webpackChunkName: \"firebase-config\" */ './firebaseConfig').then(mod => mod.initializeFirebase()),\n  () => import(/* webpackChunkName: \"login-modal\" */ './components/auth/LoginModal'),\n];\n\n/**\n * AppShell handles phased loading of chunks for optimal startup.\n */\nfunction AppShell() {\n  const [shellReady, setShellReady] = useState(false);\n  const [firebaseReady, setFirebaseReady] = useState(false);\n  const { isLoggingIn, setIsLoggingIn } = useAuth();\n\n  useEffect(() => {\n    let canceled = false;\n\n    async function runPhases() {\n      // Phase 1: Essential components\n      performanceMonitor.mark(PERFORMANCE_MARKS.APP_START);\n      console.log('[Phase1] Loading essential components...');\n      try {\n        // Load all essential UI components\n        for (const importFn of ESSENTIAL_IMPORTS) {\n          await importFn();\n        }\n        performanceMonitor.mark(PERFORMANCE_MARKS.IMPORTANT_COMPONENTS_LOADED);\n        performanceMonitor.measure(\n          PERFORMANCE_MEASURES.IMPORTANT_LOAD_TIME,\n          PERFORMANCE_MARKS.APP_START,\n          PERFORMANCE_MARKS.IMPORTANT_COMPONENTS_LOADED\n        );\n        performanceMonitor.mark(PERFORMANCE_MARKS.COMPONENT_LOAD);\n        performanceMonitor.measure(\n          PERFORMANCE_MEASURES.COMPONENT_LOAD,\n          PERFORMANCE_MARKS.APP_START,\n          PERFORMANCE_MARKS.COMPONENT_LOAD\n        );\n        console.log('[Phase1] Essential components loaded');\n      } catch (error) {\n        console.error('[Phase1] Error loading essential components:', error);\n      }\n\n      // Show initial shell before heavy loads\n      requestAnimationFrame(() => {\n        if (canceled) return;\n        setShellReady(true);\n        performanceMonitor.mark(PERFORMANCE_MARKS.APP_INTERACTIVE);\n        performanceMonitor.measure(\n          PERFORMANCE_MEASURES.TIME_TO_INTERACTIVE,\n          PERFORMANCE_MARKS.APP_START,\n          PERFORMANCE_MARKS.APP_INTERACTIVE\n        );\n        console.log('[Phase1] App is interactive');\n\n        // Phase 2: Load basic formatting\n        console.log('[Phase2] Loading basic formatting...');\n        Promise.all(BASIC_IMPORTS.map(importFn => importFn()))\n          .then(() => {\n            performanceMonitor.mark(PERFORMANCE_MARKS.APP_READY);\n            performanceMonitor.measure(\n              PERFORMANCE_MEASURES.TOTAL_LOAD,\n              PERFORMANCE_MARKS.APP_START,\n              PERFORMANCE_MARKS.APP_READY\n            );\n            console.log('[Phase2] Basic formatting loaded');\n\n            // Phase 3: Idle-load heavy dependencies (including Firebase)\n            console.log('[Phase3] Scheduling heavy dependencies on idle...');\n            let index = 0;\n            \n            function loadNext(deadline) {\n              let i = index;  // Create a local variable\n              while ((deadline.timeRemaining() > 0 || deadline.didTimeout) && i < HEAVY_IMPORTS.length) {\n                const currentIndex = i;\n                HEAVY_IMPORTS[currentIndex]()\n                  .then(() => {\n                    // Set firebaseReady when Firebase config import is complete\n                    if (currentIndex === HEAVY_IMPORTS.length - 2) { // Firebase config import\n                      console.log('[Phase3] Firebase initialized');\n                      setFirebaseReady(true);\n                      // Dispatch custom event to notify AuthContext\n                      window.dispatchEvent(new Event('firebaseInitialized'));\n                    }\n                  })\n                  .catch(err => console.error(`Idle load error for module ${currentIndex}:`, err));\n                i++;\n              }\n              \n              // Update the outer index variable\n              index = i;\n              \n              if (index < HEAVY_IMPORTS.length) {\n                requestIdleCallback(loadNext, { timeout: 1000 });\n              } else {\n                console.log(`[Phase3] Completed loading ${HEAVY_IMPORTS.length} heavy modules`);\n              }\n            }\n            \n            // Instead of idle callback, which might delay Firebase too much,\n            // preload Firebase immediately then use idle for the rest\n            console.log('[Phase3] Explicitly loading Firebase...');\n            // Load Firebase first (the last two imports in HEAVY_IMPORTS)\n            Promise.all([\n              HEAVY_IMPORTS[HEAVY_IMPORTS.length - 2](), // Firebase config\n              HEAVY_IMPORTS[HEAVY_IMPORTS.length - 1]()  // Login modal\n            ])\n            .then(() => {\n              console.log('[Phase3] Firebase initialized');\n              setFirebaseReady(true);\n              // Dispatch custom event to notify AuthContext\n              window.dispatchEvent(new Event('firebaseInitialized'));\n              \n              // Now load the remaining imports using idle callback\n              if (HEAVY_IMPORTS.length > 2) {\n                index = 0; // Reset index to load non-Firebase modules\n                const nonFirebaseImports = HEAVY_IMPORTS.slice(0, -2);\n                \n                function loadRemainingModules(deadline) {\n                  let j = index;  // Create a local variable\n                  while ((deadline.timeRemaining() > 0 || deadline.didTimeout) && j < nonFirebaseImports.length) {\n                    const currentModuleIndex = j;\n                    nonFirebaseImports[currentModuleIndex]()\n                      .catch(err => console.error(`Idle load error for module ${currentModuleIndex}:`, err));\n                    j++;\n                  }\n                  \n                  // Update the outer index variable\n                  index = j;\n                  \n                  if (index < nonFirebaseImports.length) {\n                    requestIdleCallback(loadRemainingModules, { timeout: 1000 });\n                  } else {\n                    console.log(`[Phase3] Completed loading ${nonFirebaseImports.length} remaining heavy modules`);\n                  }\n                }\n                \n                requestIdleCallback(loadRemainingModules, { timeout: 1000 });\n              }\n            })\n            .catch(err => console.error('[Phase3] Error loading Firebase:', err));\n          })\n          .catch((err) => console.error('[Phase2] Error loading basic formatting:', err));\n      });\n    }\n\n    runPhases();\n    return () => {\n      canceled = true;\n      performanceMonitor.clear();\n    };\n  }, []);\n\n  // Spinner until shell is ready\n  if (!shellReady) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\n        <Spinner size=\"medium\" />\n      </div>\n    );\n  }\n\n  // Shell ready: render layout + chat UI\n  return (\n    <>\n      <Suspense fallback={<Spinner size=\"small\" />}><Layout /></Suspense>\n      {isLoggingIn && firebaseReady && (\n        <Suspense fallback={<Spinner size=\"small\" />}>\n          <LoginModal onClose={() => setIsLoggingIn(false)} />\n        </Suspense>\n      )}\n    </>\n  );\n}\n\n/** Root App with providers **/\nexport default function App() {\n  return (\n    <AuthProvider>\n      <ContextManager>\n        <AppShell />\n      </ContextManager>\n    </AuthProvider>\n  );\n} "],"names":["AuthButton","memo","_ref","isAuthenticated","onLogin","onLogout","userName","isLoading","currentUser","_jsx","className","styles","authButton","onClick","disabled","title","children","spinner","photoURL","src","alt","userAvatar","loading","userInitial","charAt","toUpperCase","SignInIcon","size","icon","displayName","LoginModal","onClose","setIsLoggingIn","error","authContextError","useAuth","setIsLoading","useState","setError","email","setEmail","password","setPassword","useEffect","handleSignIn","async","getFirebaseAuth","signInWithPopup","auth","provider","err","code","message","closeModal","overlay","_jsxs","modal","e","stopPropagation","closeButton","IoMdClose","subtitle","spinnerContainer","fullHeightSpinner","Spinner","emailForm","onSubmit","preventDefault","signInWithEmailAndPassword","type","placeholder","value","onChange","target","required","inputField","emailButtonContainer","emailButton","createUserWithEmailAndPassword","signUpButton","alternativeLoginContainer","alternativeLoginText","providerIconContainer","providerIconButton","GoogleAuthProvider","googleProvider","FcGoogle","GithubAuthProvider","githubProvider","FaGithub","footerText","Layout","lazy","ESSENTIAL_IMPORTS","modelSelectorImports","BASIC_IMPORTS","basicFormattingImports","HEAVY_IMPORTS","advancedFormattingImports","then","mod","initializeFirebase","AppShell","shellReady","setShellReady","firebaseReady","setFirebaseReady","isLoggingIn","canceled","performanceMonitor","mark","PERFORMANCE_MARKS","APP_START","importFn","IMPORTANT_COMPONENTS_LOADED","measure","PERFORMANCE_MEASURES","IMPORTANT_LOAD_TIME","COMPONENT_LOAD","requestAnimationFrame","APP_INTERACTIVE","TIME_TO_INTERACTIVE","Promise","all","map","APP_READY","TOTAL_LOAD","index","length","window","dispatchEvent","Event","nonFirebaseImports","slice","loadRemainingModules","deadline","j","timeRemaining","didTimeout","catch","requestIdleCallback","timeout","runPhases","clear","_Fragment","Suspense","fallback","style","display","alignItems","justifyContent","height","App","AuthProvider","ContextManager"],"sourceRoot":""}