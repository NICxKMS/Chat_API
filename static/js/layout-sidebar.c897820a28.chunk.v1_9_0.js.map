{"version":3,"file":"static/js/layout-sidebar.c897820a28.chunk.v1_9_0.js","mappings":"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","sources":["components/layout/Sidebar/index.js"],"sourcesContent":["import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusIcon, GearIcon, ChevronLeftIcon } from '@primer/octicons-react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useChatControl } from '../../../contexts/ChatControlContext';\nimport { useProfilePicture } from '../../../hooks/useProfilePicture';\nimport Spinner from '../../common/Spinner';\nimport styles from './Sidebar.module.css';\n// Remove unused icons if PlusIcon/GearIcon only used for floating buttons\n// import { GearIcon, PlusIcon } from '@primer/octicons-react'; \n\n// Remove imports for components moved out\n// const ThemeToggle = lazy(() => import('../../common/ThemeToggle'));\n// const ApiStatus = lazy(() => import('../../common/ApiStatus'));\n\n// Sample data (keep for now)\nconst sampleSessions = [\n  { id: 'session-1', title: 'LLM Explanation Chat', timestamp: '2 hours ago' },\n  { id: 'session-2', title: 'React Component Refactoring', timestamp: 'Yesterday' },\n  { id: 'session-3', title: 'CSS Grid Layout Ideas', timestamp: 'Mar 30' },\n  { id: 'session-4', title: 'Python Script Debugging', timestamp: 'Mar 28' },\n];\n\n/**\n * Sidebar component containing app controls and chat session list\n * @param {Object} props - Component props\n * @param {string} [props.className] - Additional CSS class\n * @param {Function} [props.onToggleSettings] - Handler for settings button click\n * @param {Function} [props.onToggleSidebar] - Handler for sidebar toggle button click\n * @returns {JSX.Element} - Rendered sidebar\n */\nconst Sidebar = memo(({ className = '', onToggleSettings = () => console.warn('Settings handler not provided to Sidebar'), onToggleSidebar = () => console.warn('Sidebar toggle handler not provided to Sidebar') }) => {\n  const { currentUser, isAuthenticated } = useAuth();\n  const { newChat } = useChatControl();\n  const { profilePicture: userAvatar, loading: avatarLoading } = useProfilePicture(currentUser?.photoURL);\n  \n  const userName = currentUser?.displayName || currentUser?.email || 'Sir';\n  \n  // Handle button clicks with fallbacks\n  const handleNewChat = (e) => {\n    e.preventDefault();\n    newChat();\n  };\n\n  const handleSettings = (e) => {\n    e.preventDefault();\n    onToggleSettings();\n  };\n\n  return (\n    <div className={`${styles.Sidebar} ${className}`}>\n      {/* Header with Title and Controls */}\n      <div className={styles.Sidebar__header}>\n        <h1 className={styles.Sidebar__title}>AI Chat</h1>\n        <div className={styles.Sidebar__headerControls}>\n          <button \n            className={`${styles.Sidebar__iconButton} ${styles['Sidebar__iconButton--newChat']}`}\n            onClick={handleNewChat}\n            aria-label=\"New chat\"\n            title=\"New chat\"\n          >\n            <PlusIcon size={20} />\n          </button>\n          <button \n            className={`${styles.Sidebar__iconButton} ${styles['Sidebar__iconButton--settings']}`}\n            onClick={handleSettings}\n            aria-label=\"Settings\"\n            title=\"Settings\"\n          >\n            <GearIcon size={20} />\n          </button>\n          <button\n            className={styles.Sidebar__iconButton}\n            onClick={onToggleSidebar}\n            aria-label=\"Close sidebar\"\n            title=\"Close sidebar\"\n          >\n            <ChevronLeftIcon size={20} />\n          </button>\n        </div>\n      </div>\n      \n      {/* Chat Session List */}\n      <div className={styles.Sidebar__chatListContainer}>\n        <ul className={styles.Sidebar__sessionList}>\n          {sampleSessions.map(session => (\n            <li key={session.id} className={styles.Sidebar__sessionItem}>\n              <button className={styles.Sidebar__sessionButton} onClick={() => console.log('Load session:', session.id)}>\n                <span className={styles.Sidebar__sessionTitle}>{session.title}</span>\n                <span className={styles.Sidebar__sessionTimestamp}>{session.timestamp}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Footer */}\n      <div className={styles.Sidebar__footer}>\n        {isAuthenticated ? (\n          <div className={styles.Sidebar__userProfile}>\n            {currentUser?.photoURL ? (\n              avatarLoading ? (\n                <Spinner size=\"small\" tag=\"avatar\" />\n              ) : userAvatar ? (\n                <img\n                  src={userAvatar}\n                  alt={`${userName}'s profile`}\n                  className={styles.Sidebar__userAvatar}\n                />\n              ) : (\n                <div className={styles.Sidebar__userInitial}>\n                  {userName.charAt(0).toUpperCase()}\n                </div>\n              )\n            ) : (\n              <div className={styles.Sidebar__userInitial}>\n                {userName.charAt(0).toUpperCase()}\n              </div>\n            )}\n            <span className={styles.Sidebar__userName}>{userName}</span>\n          </div>\n        ) : (\n          <span className={styles.footerPlaceholderText}></span>\n        )}\n      </div>\n    </div>\n  );\n});\n\nSidebar.displayName = 'Sidebar';\n\n// Define PropTypes\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onToggleSettings: PropTypes.func,\n  onToggleSidebar: PropTypes.func\n};\n\nexport default Sidebar; "],"names":["sampleSessions","id","title","timestamp","Sidebar","memo","_ref","className","onToggleSettings","onToggleSidebar","currentUser","isAuthenticated","useAuth","newChat","useChatControl","profilePicture","userAvatar","loading","avatarLoading","useProfilePicture","photoURL","userName","displayName","email","_jsxs","styles","children","Sidebar__header","_jsx","Sidebar__title","Sidebar__headerControls","Sidebar__iconButton","onClick","e","preventDefault","PlusIcon","size","GearIcon","ChevronLeftIcon","Sidebar__chatListContainer","Sidebar__sessionList","map","session","Sidebar__sessionItem","Sidebar__sessionButton","Sidebar__sessionTitle","Sidebar__sessionTimestamp","Sidebar__footer","Sidebar__userProfile","Spinner","tag","src","alt","Sidebar__userAvatar","Sidebar__userInitial","charAt","toUpperCase","Sidebar__userName","footerPlaceholderText"],"sourceRoot":""}