{"version":3,"file":"static/js/layout-main.8ae793708a.chunk.v1_7_5.js","mappings":"0LAKA,MAAMA,GAAgBC,EAAAA,EAAAA,OAAK,IAAM,+KAoDjC,EArCoBC,IAOb,IAPc,cACnBC,EAAa,cACbC,EAAgB,KAAI,oBACpBC,EAAmB,iBACnBC,EAAgB,eAChBC,EAAc,oBACdC,GACDN,EACC,OACEO,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAAA,EAAOC,YAAYC,UAIlCJ,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAOK,+BAAiCH,UAC1EJ,EAAAA,EAAAA,KAACT,EAAa,CACZI,cAAeA,EACfC,oBAAqBA,EACrBC,iBAAkBA,EAClBH,cAAeA,EACfI,eAAgBA,EAChBC,oBAAqBA,OAGpB,C","sources":["components/layout/MainContent/index.js"],"sourcesContent":["import { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MainContent.module.css';\n\n// Lazily loaded components\nconst ChatContainer = lazy(() => import(/* webpackChunkName: \"chat-container\" */ '../../chat/ChatContainer'));\n\n/**\n * Main content area component containing chat interface and settings\n * @param {Object} props - Component props\n * @param {boolean} props.isSidebarOpen - Whether the sidebar is open (mobile)\n * @param {Function} props.toggleSidebar - Function to toggle the sidebar (mobile)\n * @param {Object} props.selectedModel - The currently selected model object\n * @param {boolean} props.isLoadingModels - Whether models are currently loading\n * @param {Function} props.toggleModelSelector - Function to toggle the model dropdown/modal\n * @param {Function} props.onToggleSettings - Function to handle settings toggle\n * @param {boolean} props.isSettingsOpen - Whether the settings panel is open\n * @param {boolean} props.isModelSelectorOpen - Whether the model selector is open\n * @returns {JSX.Element} - Rendered component\n */\nconst MainContent = ({ \n  isSidebarOpen, \n  selectedModel = null,\n  toggleModelSelector,\n  onToggleSettings,\n  isSettingsOpen,\n  isModelSelectorOpen\n}) => {\n  return (\n    <main className={styles.MainContent}>\n      {/* Removed full-screen model loading overlay; spinner moved to ModelSelectorButton */}\n      \n      {/* Chat area - Pass down remaining relevant props */}\n      <Suspense fallback={<div className={styles.MainContent__chatPlaceholder} />}>\n        <ChatContainer \n          selectedModel={selectedModel}\n          toggleModelSelector={toggleModelSelector}\n          onToggleSettings={onToggleSettings}\n          isSidebarOpen={isSidebarOpen}\n          isSettingsOpen={isSettingsOpen}\n          isModelSelectorOpen={isModelSelectorOpen}\n        />\n      </Suspense>\n    </main>\n  );\n};\n\nMainContent.propTypes = {\n  isSidebarOpen: PropTypes.bool.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  selectedModel: PropTypes.object, // Could refine shape if known\n  toggleModelSelector: PropTypes.func.isRequired,\n  onToggleSettings: PropTypes.func.isRequired,\n  isSettingsOpen: PropTypes.bool.isRequired,\n  isModelSelectorOpen: PropTypes.bool.isRequired\n};\n\nexport default MainContent; "],"names":["ChatContainer","lazy","_ref","isSidebarOpen","selectedModel","toggleModelSelector","onToggleSettings","isSettingsOpen","isModelSelectorOpen","_jsx","className","styles","MainContent","children","Suspense","fallback","MainContent__chatPlaceholder"],"sourceRoot":""}