{"version":3,"file":"static/js/markdown.1b18c1a669.chunk.v1_8_8.js","mappings":";oHASa,IAA4bA,EAAxbC,EAAEC,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,gBAAgBE,EAAEH,OAAOC,IAAI,kBAAkBG,EAAEJ,OAAOC,IAAI,qBAAqBI,EAAEL,OAAOC,IAAI,kBAAkBK,EAAEN,OAAOC,IAAI,kBAAkBM,EAAEP,OAAOC,IAAI,iBAAiBO,EAAER,OAAOC,IAAI,wBAAwBQ,EAAET,OAAOC,IAAI,qBAAqBS,EAAEV,OAAOC,IAAI,kBAAkBU,EAAEX,OAAOC,IAAI,uBAAuBW,EAAEZ,OAAOC,IAAI,cAAcY,EAAEb,OAAOC,IAAI,cAAca,EAAEd,OAAOC,IAAI,mBACtb,SAASc,EAAEC,GAAG,GAAG,iBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIC,EAAED,EAAEE,SAAS,OAAOD,GAAG,KAAKlB,EAAE,OAAOiB,EAAEA,EAAEG,MAAQ,KAAKhB,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAKM,EAAE,KAAKC,EAAE,OAAOK,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEE,UAAY,KAAKV,EAAE,KAAKD,EAAE,KAAKE,EAAE,KAAKI,EAAE,KAAKD,EAAE,KAAKN,EAAE,OAAOU,EAAE,QAAQ,OAAOC,GAAG,KAAKf,EAAE,OAAOe,EAAE,CAAC,CADkMnB,EAAEE,OAAOC,IAAI,0BAC9MmB,EAAQC,gBAAgBd,EAAEa,EAAQE,gBAAgBhB,EAAEc,EAAQG,QAAQxB,EAAEqB,EAAQI,WAAWf,EAAEW,EAAQK,SAAStB,EAAEiB,EAAQM,KAAKb,EAAEO,EAAQO,KAAKf,EAAEQ,EAAQQ,OAAO1B,EAAEkB,EAAQS,SAASxB,EAAEe,EAAQU,WAAW1B,EAAEgB,EAAQW,SAASrB,EACheU,EAAQY,aAAarB,EAAES,EAAQa,YAAY,WAAW,OAAM,CAAE,EAAEb,EAAQc,iBAAiB,WAAW,OAAM,CAAE,EAAEd,EAAQe,kBAAkB,SAASnB,GAAG,OAAOD,EAAEC,KAAKT,CAAC,EAAEa,EAAQgB,kBAAkB,SAASpB,GAAG,OAAOD,EAAEC,KAAKV,CAAC,EAAEc,EAAQiB,UAAU,SAASrB,GAAG,MAAM,iBAAkBA,GAAG,OAAOA,GAAGA,EAAEE,WAAWnB,CAAC,EAAEqB,EAAQkB,aAAa,SAAStB,GAAG,OAAOD,EAAEC,KAAKP,CAAC,EAAEW,EAAQmB,WAAW,SAASvB,GAAG,OAAOD,EAAEC,KAAKb,CAAC,EAAEiB,EAAQoB,OAAO,SAASxB,GAAG,OAAOD,EAAEC,KAAKH,CAAC,EAAEO,EAAQqB,OAAO,SAASzB,GAAG,OAAOD,EAAEC,KAAKJ,CAAC,EACveQ,EAAQsB,SAAS,SAAS1B,GAAG,OAAOD,EAAEC,KAAKd,CAAC,EAAEkB,EAAQuB,WAAW,SAAS3B,GAAG,OAAOD,EAAEC,KAAKX,CAAC,EAAEe,EAAQwB,aAAa,SAAS5B,GAAG,OAAOD,EAAEC,KAAKZ,CAAC,EAAEgB,EAAQyB,WAAW,SAAS7B,GAAG,OAAOD,EAAEC,KAAKN,CAAC,EAAEU,EAAQ0B,eAAe,SAAS9B,GAAG,OAAOD,EAAEC,KAAKL,CAAC,EAClPS,EAAQ2B,mBAAmB,SAAS/B,GAAG,MAAM,iBAAkBA,GAAG,mBAAoBA,GAAGA,IAAIb,GAAGa,IAAIX,GAAGW,IAAIZ,GAAGY,IAAIN,GAAGM,IAAIL,GAAGK,IAAIF,GAAG,iBAAkBE,GAAG,OAAOA,IAAIA,EAAEE,WAAWL,GAAGG,EAAEE,WAAWN,GAAGI,EAAEE,WAAWZ,GAAGU,EAAEE,WAAWX,GAAGS,EAAEE,WAAWT,GAAGO,EAAEE,WAAWpB,QAAG,IAASkB,EAAEgC,YAAkB,EAAE5B,EAAQ6B,OAAOlC,2ECElS,SAASmC,IAAyB,IAAdC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5C,MAAMG,EAAOC,KAAKD,OAUlB,SAASE,EAAIC,EAAOC,IAIhBJ,EAAKG,GAASH,EAAKG,GAAUH,EAAKG,GAAS,IAGxCE,KAAKD,EACZ,CAhBAF,EAAI,uBAAuBI,EAAAA,EAAAA,GAAKV,IAChCM,EAAI,0BAA0BK,EAAAA,EAAAA,MAC9BL,EAAI,wBAAwBM,EAAAA,EAAAA,GAAeZ,GAe7C,2ECtBe,SAASa,IAAwB,IAAdb,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,MAAMG,EAAOC,KAAKD,OAUlB,SAASE,EAAIC,EAAOC,IAIhBJ,EAAKG,GAASH,EAAKG,GAAUH,EAAKG,GAAS,IAGxCE,KAAKD,EACZ,CAhBAF,EAAI,uBAAuBQ,EAAAA,EAAAA,GAAId,IAC/BM,EAAI,0BAA0BS,EAAAA,EAAAA,MAC9BT,EAAI,wBAAwBU,EAAAA,EAAAA,GAAchB,GAe5C,kICLO,MAAMiB,EAQb,SAASC,IACP,MAAMC,GAAeC,EAAAA,EAAAA,KAEfC,EAAY,GAElB,IAEIC,EAFAC,EAAY,CAAC,EAGbC,GAAe,EA2BnB,OAvBAC,EAAUrB,KA6CV,SAAcsB,EAAKlB,GACjB,GAAmB,iBAARkB,EAET,OAAyB,IAArBzB,UAAUC,QACZyB,EAAe,OAAQL,GACvBC,EAAUG,GAAOlB,EACViB,GAIDG,EAAIC,KAAKN,EAAWG,IAAQH,EAAUG,IAAS,KAIzD,GAAIA,EAGF,OAFAC,EAAe,OAAQL,GACvBC,EAAYG,EACLD,EAIT,OAAOF,CACT,EAlEAE,EAAUK,YAAS3B,EACnBsB,EAAUM,cAAW5B,EAGrBsB,EAAUO,OAiEV,WACE,GAAIV,EACF,OAAOG,EAGT,OAASD,EAAcH,EAAUnB,QAAQ,CACvC,MAAO+B,KAAajC,GAAWqB,EAAUG,GAEzC,IAAmB,IAAfxB,EAAQ,GACV,UAGiB,IAAfA,EAAQ,KACVA,EAAQ,QAAKG,GAIf,MAAM+B,EAAcD,EAASJ,KAAKJ,KAAczB,GAErB,mBAAhBkC,GACTf,EAAagB,IAAID,EAErB,CAKA,OAHAZ,GAAS,EACTE,EAAcY,OAAOC,kBAEdZ,CACT,EA1FAA,EAAUJ,UAAYA,EAEtBI,EAAUU,IA+FV,SAAa3B,GAAmB,QAAA8B,EAAArC,UAAAC,OAATF,EAAO,IAAAuC,MAAAD,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPxC,EAAOwC,EAAA,GAAAvC,UAAAuC,GAE5B,IAAIC,EAIJ,GAFAd,EAAe,MAAOL,GAElBd,cAEG,GAAqB,mBAAVA,EAChBkC,EAAUlC,KAAUR,OACf,IAAqB,iBAAVQ,EAOhB,MAAM,IAAImC,UAAU,+BAAiCnC,EAAQ,KANzD+B,MAAMK,QAAQpC,GAChBqC,EAAQrC,GAERsC,EAAUtC,EAId,CAEIiC,IACFlB,EAAUkB,SAAWM,OAAOC,OAAOzB,EAAUkB,UAAY,CAAC,EAAGA,IAG/D,OAAOhB,EAMP,SAASnB,EAAIE,GACX,GAAqB,mBAAVA,EACTkC,EAAUlC,OACL,IAAqB,iBAAVA,EAQhB,MAAM,IAAImC,UAAU,+BAAiCnC,EAAQ,KAP7D,GAAI+B,MAAMK,QAAQpC,GAAQ,CACxB,MAAOyC,KAAWjD,GAAWQ,EAC7BkC,EAAUO,KAAWjD,EACvB,MACE8C,EAAUtC,EAId,CACF,CAMA,SAASsC,EAAUI,GACjBL,EAAQK,EAAOC,SAEXD,EAAOT,WACTA,EAAWM,OAAOC,OAAOP,GAAY,CAAC,EAAGS,EAAOT,UAEpD,CAMA,SAASI,EAAQM,GACf,IAAIC,GAAS,EAEb,GAAID,aAEG,KAAIZ,MAAMK,QAAQO,GAMvB,MAAM,IAAIR,UAAU,oCAAsCQ,EAAU,KALpE,OAASC,EAAQD,EAAQjD,QAAQ,CAE/BI,EADc6C,EAAQC,GAExB,CAGF,CACF,CAOA,SAASV,EAAUO,EAAQzC,GACzB,IAEI6C,EAFAD,GAAS,EAIb,OAASA,EAAQ/B,EAAUnB,QACzB,GAAImB,EAAU+B,GAAO,KAAOH,EAAQ,CAClCI,EAAQhC,EAAU+B,GAClB,KACF,CAGEC,IACEC,EAAAA,EAAAA,GAAWD,EAAM,MAAOC,EAAAA,EAAAA,GAAW9C,KACrCA,EAAQ+C,GAAO,EAAMF,EAAM,GAAI7C,IAGjC6C,EAAM,GAAK7C,GAGXa,EAAUZ,KAAK,IAAIR,WAEvB,CACF,EApMAwB,EAAU+B,MAuMV,SAAeC,GACbhC,EAAUO,SACV,MAAM0B,EAAOC,EAAMF,GACb3B,EAASL,EAAUK,OAGzB,GAFA8B,EAAa,QAAS9B,GAElB+B,EAAQ/B,EAAQ,SAElB,OAAO,IAAIA,EAAOgC,OAAOJ,GAAOA,GAAMF,QAIxC,OAAO1B,EAAOgC,OAAOJ,GAAOA,EAC9B,EAnNAjC,EAAUsC,UAsNV,SAAmBC,EAAMP,GACvBhC,EAAUO,SACV,MAAM0B,EAAOC,EAAMF,GACb1B,EAAWN,EAAUM,SAI3B,GAHAkC,EAAe,YAAalC,GAC5BmC,EAAWF,GAEPH,EAAQ9B,EAAU,WAEpB,OAAO,IAAIA,EAASiC,EAAMN,GAAMS,UAIlC,OAAOpC,EAASiC,EAAMN,EACxB,EAlOAjC,EAAU2C,IA0OV,SAAaJ,EAAMP,EAAKY,GACtBH,EAAWF,GACXvC,EAAUO,SAELqC,GAA2B,mBAARZ,IACtBY,EAAWZ,EACXA,OAAMtD,GAGR,IAAKkE,EACH,OAAO,IAAIC,QAAQC,GAUrB,SAASA,EAASC,EAASC,GAUzB,SAASC,EAAKC,EAAOC,EAAMlB,GACzBkB,EAAOA,GAAQZ,EACXW,EACFF,EAAOE,GACEH,EACTA,EAAQI,GAGRP,EAAS,KAAMO,EAAMlB,EAEzB,CAlBAvC,EAAaiD,IAAIJ,EAAML,EAAMF,GAAMiB,EAmBrC,CA5BAH,EAAS,KAAMF,EA6BjB,EAnRA5C,EAAUoD,QAsRV,SAAiBb,EAAMN,GAErB,IAAIR,EAEA4B,EAOJ,OALArD,EAAU2C,IAAIJ,EAAMN,EAAMgB,GAE1BK,EAAW,UAAW,MAAOD,GAGtB5B,EAOP,SAASwB,EAAKC,EAAOC,IACnBI,EAAAA,EAAAA,GAAKL,GACLzB,EAAS0B,EACTE,GAAW,CACb,CACF,EA3SArD,EAAUwD,QAkTV,SAAiBxB,EAAKY,GAKpB,GAJA5C,EAAUO,SACV4B,EAAa,UAAWnC,EAAUK,QAClCmC,EAAe,UAAWxC,EAAUM,WAE/BsC,EACH,OAAO,IAAIC,QAAQC,GAUrB,SAASA,EAASC,EAASC,GACzB,MAAMf,EAAOC,EAAMF,GA0BnB,SAASiB,EAAKC,EAAOjB,GACfiB,IAAUjB,EACZe,EAAOE,GACEH,EACTA,EAAQd,GAGRW,EAAS,KAAMX,EAEnB,CAjCAjC,EAAU2C,IAAI3C,EAAU+B,MAAME,GAAOA,GAAM,CAACiB,EAAOC,EAAMlB,KACvD,IAAIiB,GAAUC,GAASlB,EAEhB,CAEL,MAAMR,EAASzB,EAAUsC,UAAUa,EAAMlB,GAErCR,UAsMY,iBADI1C,EAnMY0C,IAoMJgC,EAAS1E,GAnMnCkD,EAAKlD,MAAQ0C,EAEbQ,EAAKR,OAASA,GAGhBwB,EAAKC,EAAOjB,EACd,MAdEgB,EAAKC,GA0Mf,IAA8BnE,CA5LtB,GAkBJ,CA5CA+D,EAAS,KAAMF,EA6CjB,EAvWA5C,EAAU0D,YA0WV,SAAqB1B,GAEnB,IAAIqB,EAEJrD,EAAUO,SACV4B,EAAa,cAAenC,EAAUK,QACtCmC,EAAe,cAAexC,EAAUM,UAExC,MAAM2B,EAAOC,EAAMF,GAMnB,OAJAhC,EAAUwD,QAAQvB,EAAMgB,GAExBK,EAAW,cAAe,UAAWD,GAE9BpB,EAMP,SAASgB,EAAKC,GACZG,GAAW,GACXE,EAAAA,EAAAA,GAAKL,EACP,CACF,EA/XOlD,EAIP,SAASA,IACP,MAAM2D,EAAclE,IACpB,IAAIkC,GAAS,EAEb,OAASA,EAAQ/B,EAAUnB,QACzBkF,EAAYjD,OAAOd,EAAU+B,IAK/B,OAFAgC,EAAYhF,KAAKmD,GAAO,EAAM,CAAC,EAAGhC,IAE3B6D,CACT,CAiXF,CA3auBlE,GAAOc,SAExBJ,EAAM,CAAC,EAAEyD,eAkbf,SAASxB,EAAQrD,EAAO8E,GACtB,MACmB,mBAAV9E,GAGPA,EAAM+E,YAeV,SAAc/E,GAEZ,IAAIkB,EAEJ,IAAKA,KAAOlB,EACV,GAAIoB,EAAIC,KAAKrB,EAAOkB,GAClB,OAAO,EAIX,OAAO,CACT,CArBK8D,CAAKhF,EAAM+E,YAAcD,KAAQ9E,EAAM+E,UAE5C,CA4BA,SAAS3B,EAAa0B,EAAM9E,GAC1B,GAAqB,mBAAVA,EACT,MAAM,IAAImC,UAAU,WAAa2C,EAAO,qBAE5C,CASA,SAASrB,EAAeqB,EAAM9E,GAC5B,GAAqB,mBAAVA,EACT,MAAM,IAAImC,UAAU,WAAa2C,EAAO,uBAE5C,CASA,SAAS3D,EAAe2D,EAAMhE,GAC5B,GAAIA,EACF,MAAM,IAAImE,MACR,gBACEH,EACA,mHAGR,CAQA,SAASpB,EAAWF,GAGlB,KAAKV,EAAAA,EAAAA,GAAWU,IAA8B,iBAAdA,EAAKhG,KACnC,MAAM,IAAI2E,UAAU,uBAAyBqB,EAAO,IAGxD,CAUA,SAASe,EAAWO,EAAMI,EAAWZ,GACnC,IAAKA,EACH,MAAM,IAAIW,MACR,IAAMH,EAAO,0BAA4BI,EAAY,YAG3D,CAMA,SAAS/B,EAAMnD,GACb,OAOF,SAAyBA,GACvB,OAAOmF,QACLnF,GACmB,iBAAVA,GACP,YAAaA,GACb,aAAcA,EAEpB,CAdSoF,CAAgBpF,GAASA,EAAQ,IAAIqF,EAAAA,EAAMrF,EACpD,gBCtjBe,SAASsF,EAAY9F,GAkBlC+C,OAAOC,OAAO3C,KAAM,CAACyB,OAhBL2B,IAEd,MAAMhB,EAAmCpC,KAAKD,KAAK,YAEnD,OAAO2F,EAAAA,EAAAA,GACLtC,EACAV,OAAOC,OAAO,CAAC,EAAGP,EAAUzC,EAAS,CAInCgG,WAAY3F,KAAKD,KAAK,wBAA0B,GAChD6F,gBAAiB5F,KAAKD,KAAK,2BAA6B,KAE3D,GAIL,iDCPe,SAAS8F,EAAalG,GACnC,GAAIA,EAAQmG,iBAAmBnG,EAAQoG,mBACrC,MAAM,IAAIzD,UACR,4EAIJ,GACE3C,EAAQmG,iBACRnG,EAAQoG,oBACRpG,EAAQqG,aAER,OAAQzB,KACN0B,EAAAA,EAAAA,IAAM1B,EAAM,WAAW,CAACZ,EAAMZ,EAAOmD,KACnC,MAAMC,EAAsCD,EAE5C,IAAIE,EAYJ,GAVIzG,EAAQmG,gBACVM,GAAUzG,EAAQmG,gBAAgBO,SAAS1C,EAAK2C,SACvC3G,EAAQoG,qBACjBK,EAASzG,EAAQoG,mBAAmBM,SAAS1C,EAAK2C,WAG/CF,GAAUzG,EAAQqG,cAAiC,iBAAVjD,IAC5CqD,GAAUzG,EAAQqG,aAAarC,EAAMZ,EAAOoD,IAG1CC,GAA2B,iBAAVrD,EAOnB,OANIpD,EAAQ4G,kBAAoB5C,EAAK6C,SACnCL,EAAOK,SAASC,OAAO1D,EAAO,KAAMY,EAAK6C,UAEzCL,EAAOK,SAASC,OAAO1D,EAAO,GAGzBA,CAGO,GAChB,CAGR,iFCjEA,MAAM2D,EAAY,CAAC,OAAQ,QAAS,SAAU,OAMvC,SAASC,EAAeC,GAC7B,MAAMC,GAAOD,GAAO,IAAIE,OAClBC,EAAQF,EAAIG,OAAO,GAEzB,GAAc,MAAVD,GAA2B,MAAVA,EACnB,OAAOF,EAGT,MAAMI,EAAQJ,EAAIK,QAAQ,KAC1B,IAAe,IAAXD,EACF,OAAOJ,EAGT,IAAI9D,GAAS,EAEb,OAASA,EAAQ2D,EAAU7G,QAAQ,CACjC,MAAMsH,EAAWT,EAAU3D,GAE3B,GACEkE,IAAUE,EAAStH,QACnBgH,EAAIO,MAAM,EAAGD,EAAStH,QAAQwH,gBAAkBF,EAEhD,OAAON,CAEX,CAGA,OADA9D,EAAQ8D,EAAIK,QAAQ,MACL,IAAXnE,GAAgBkE,EAAQlE,EACnB8D,GAGT9D,EAAQ8D,EAAIK,QAAQ,MACL,IAAXnE,GAAgBkE,EAAQlE,EACnB8D,EAIF,qBACT,CCmEA,MAAMtF,EAAM,CAAC,EAAEyD,eAITsC,EAAgB,IAAIC,IAAI,CAAC,QAAS,QAAS,QAAS,QAAS,OAM5D,SAASC,EAAgBC,EAAS9D,GAEvC,MAAM6C,EAAW,GACjB,IAEIkB,EAFAC,GAAc,EAIlB,OAASA,EAAahE,EAAK6C,SAAS3G,QAClC6H,EAAQ/D,EAAK6C,SAASmB,GAEH,YAAfD,EAAM/J,KACR6I,EAASpG,KAAKwH,EAAQH,EAASC,EAAOC,EAAYhE,IAC1B,SAAf+D,EAAM/J,KASC,YAAdgG,EAAKhG,MACJ2J,EAAcO,IAAIlE,EAAK2C,WACvBwB,EAAAA,EAAAA,GAAWJ,IAEZlB,EAASpG,KAAKsH,EAAMvH,OAEE,QAAfuH,EAAM/J,MAAmB8J,EAAQ9H,QAAQoI,UAElDvB,EAASpG,KAAKsH,EAAMvH,OAIxB,OAAOqG,CACT,CAQA,SAASoB,EAAQH,EAAS9D,EAAMZ,EAAOoD,GACrC,MAAMxG,EAAU8H,EAAQ9H,QAClBqI,OACyBlI,IAA7BH,EAAQsI,iBACJtB,EACAhH,EAAQsI,iBACRC,EAAeT,EAAQU,OAGvBlD,EAAOtB,EAAK2C,QAEZ8B,EAAa,CAAC,EACpB,IAEIC,EAFAF,EAASD,EASb,GAL2B,SAAvBA,EAAaI,OAA6B,QAATrD,IACnCkD,EAASI,EAAAA,GACTd,EAAQU,OAASA,GAGfxE,EAAKyE,WACP,IAAKC,KAAY1E,EAAKyE,WAChB7G,EAAIC,KAAKmC,EAAKyE,WAAYC,IAC5BG,EAAYJ,EAAYC,EAAU1E,EAAKyE,WAAWC,GAAWZ,GAKtD,OAATxC,GAA0B,OAATA,GACnBwC,EAAQgB,YAGV,MAAMjC,EAAWgB,EAAgBC,EAAS9D,GAE7B,OAATsB,GAA0B,OAATA,GACnBwC,EAAQgB,YAIVhB,EAAQU,OAASD,EAIjB,MAAMQ,EAAW/E,EAAK+E,UAAY,CAChCC,MAAO,CAACC,KAAM,KAAMC,OAAQ,KAAMC,OAAQ,MAC1CC,IAAK,CAACH,KAAM,KAAMC,OAAQ,KAAMC,OAAQ,OAEpCE,EACJrJ,EAAQsJ,YAAc1H,EAAIC,KAAK7B,EAAQsJ,WAAYhE,GAC/CtF,EAAQsJ,WAAWhE,GACnBA,EACAiE,EAA6B,iBAAdF,GAA0BA,IAAcG,EAAAA,SAE7D,IAAKC,EAAAA,mBAA2BJ,GAC9B,MAAM,IAAI1G,UACR,wBAAwB2C,wCAsD5B,GAlDAmD,EAAW/G,IAAM0B,EAEJ,MAATkC,GAAgBtF,EAAQ0J,aAC1BjB,EAAWkB,OACqB,mBAAvB3J,EAAQ0J,WACX1J,EAAQ0J,WACN5F,OAAO2E,EAAWmB,MAAQ,IAC1B5F,EAAK6C,SACuB,iBAArB4B,EAAWoB,MAAqBpB,EAAWoB,MAAQ,MAE5D7J,EAAQ0J,YAGH,MAATpE,GAAgB+C,IAClBI,EAAWmB,KAAOvB,EAChBvE,OAAO2E,EAAWmB,MAAQ,IAC1B5F,EAAK6C,SACuB,iBAArB4B,EAAWoB,MAAqBpB,EAAWoB,MAAQ,OAK3DN,GACQ,SAATjE,GACgB,YAAhBkB,EAAOxI,MACY,QAAnBwI,EAAOG,UAEP8B,EAAWqB,QAAS,GAInBP,GACS,OAATjE,GACU,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,IAEFmD,EAAWsB,MAAQ3H,OAAO4H,SAAS1E,EAAK+B,OAAO,GAAI,KAGxC,QAAT/B,GAAkBtF,EAAQiK,oBAC5BxB,EAAWyB,IAAMlK,EAAQiK,kBACvBnG,OAAO2E,EAAWyB,KAAO,IACzBpG,OAAO2E,EAAW0B,KAAO,IACG,iBAArB1B,EAAWoB,MAAqBpB,EAAWoB,MAAQ,QAIzDN,GAAkB,OAATjE,GAAiC,YAAhBkB,EAAOxI,KAAoB,CACxD,MAAMoM,EA0DV,SAAyBpG,GACvB,IAAIZ,GAAS,EAEb,OAASA,EAAQY,EAAK6C,SAAS3G,QAAQ,CACrC,MAAM6H,EAAQ/D,EAAK6C,SAASzD,GAE5B,GAAmB,YAAf2E,EAAM/J,MAAwC,UAAlB+J,EAAMpB,QACpC,OAAOoB,CAEX,CAEA,OAAO,IACT,CAtEkBsC,CAAgBrG,GAC9ByE,EAAW6B,QACTF,GAASA,EAAM3B,WAAa9C,QAAQyE,EAAM3B,WAAW6B,SAAW,KAClE7B,EAAWrF,MAAQmH,EAAuB/D,EAAQxC,GAClDyE,EAAW+B,QAA6B,OAAnBhE,EAAOG,OAC9B,CA+JF,IAAyB8D,EAnHvB,OA1CKlB,GAAmB,OAATjE,GAA0B,OAATA,IAC9BmD,EAAW+B,QAAmB,OAATlF,EACrBmD,EAAWiC,MAAQ5C,EAAQgB,WAGhB,OAATxD,GAA0B,OAATA,IACfmD,EAAWkC,QACRlC,EAAWmC,QAAOnC,EAAWmC,MAAQ,CAAC,GAE3CnC,EAAWmC,MAAMC,UAAYpC,EAAWkC,aACjClC,EAAWkC,OAGfpB,IACHd,EAAWqC,SAAoB,OAATxF,IAIrBiE,GAAkB,OAATjE,GAAiC,YAAhBkB,EAAOxI,OACpCyK,EAAWqC,SAAWnF,QAA2B,UAAnBa,EAAOG,UAInC3G,EAAQ+K,YACVtC,EAAW,kBAsIN,EADgBgC,EArI0B1B,GAuI3CC,MAAMC,KACV,IACAwB,EAAIzB,MAAME,OACV,IACAuB,EAAIrB,IAAIH,KACR,IACAwB,EAAIrB,IAAIF,QAEP8B,IAAIlH,QACJmH,KAAK,MA7IH1B,GAASvJ,EAAQkL,eACpBzC,EAAW0C,eAAiBnH,EAAK+E,WAI9BQ,GAASvJ,EAAQoL,sBACpB3C,EAAWrF,MAAQmH,EAAuB/D,EAAQxC,GAClDyE,EAAW4C,aAAed,EAAuB/D,IAG9C+C,IACHd,EAAWzE,KAAOA,GAIb6C,EAAS3G,OAAS,EACrBsJ,EAAAA,cAAoBH,EAAWZ,EAAY5B,GAC3C2C,EAAAA,cAAoBH,EAAWZ,EACrC,CAyBA,SAAS8B,EAAuB/D,EAAQxC,GACtC,IAAIZ,GAAS,EACTkI,EAAQ,EAEZ,OAASlI,EAAQoD,EAAOK,SAAS3G,QAC3BsG,EAAOK,SAASzD,KAAWY,GACK,YAAhCwC,EAAOK,SAASzD,GAAOpF,MAAoBsN,IAGjD,OAAOA,CACT,CAQA,SAASzC,EAAY0C,EAAOC,EAAMhL,EAAOiL,GACvC,MAAMC,GAAOC,EAAAA,EAAAA,GAAKF,EAAIjD,OAAQgD,GAC9B,IAAItI,EAAS1C,EAIT0C,SAA2CA,GAAWA,IAMtDX,MAAMK,QAAQM,KAChBA,EAASwI,EAAKE,gBAAiBC,EAAAA,EAAAA,GAAO3I,IAAU4I,EAAAA,EAAAA,GAAO5I,IAGnC,UAAlBwI,EAAKhD,UAA0C,iBAAXxF,IACtCA,EAkBJ,SAAoB1C,GAElB,MAAM0C,EAAS,CAAC,EAEhB,KACE0H,EAAAA,EAAAA,GAAMpK,EAAOuL,EACf,CAAE,MACA,CAGF,OAAO7I,EAMP,SAAS6I,EAASzG,EAAM1H,GACtB,MAAMP,EAAyB,SAArBiI,EAAKmC,MAAM,EAAG,GAAgB,MAAMnC,EAAKmC,MAAM,KAAOnC,EAChEpC,EAAO7F,EAAE2O,QAAQ,YAAaC,IAAkBrO,CAClD,CACF,CAtCasO,CAAWhJ,IAGlBwI,EAAK/C,OAAS+C,EAAKhD,SACrB6C,EACE3J,EAAIC,KAAKsK,EAAAA,EAAaT,EAAKhD,UACvByD,EAAAA,EAAYT,EAAKhD,UACjBgD,EAAKhD,UACPxF,EACKwI,EAAKU,YACdb,EAAMG,EAAKU,WAAalJ,GAE5B,CAgCA,SAAS+I,EAAcI,EAAGC,GACxB,OAAOA,EAAGC,aACZ,CC5YA,MAAM3K,EAAM,CAAC,EAAEyD,eAKTmH,EAAa,CACjBrJ,QAAS,CAACsJ,GAAI,gBAAiBC,GAAI,mCACnCC,UAAW,CAACF,GAAI,aAAcC,GAAI,kCAClCE,WAAY,CAACF,GAAI,wCACjBG,mBAAoB,CAACH,GAAI,wCACzBI,WAAY,CAACJ,GAAI,wCACjBK,OAAQ,CAACN,GAAI,WAAYC,GAAI,6BAC7BM,UAAW,CACTP,GAAI,eACJC,GAAI,sDAENO,aAAc,CACZR,GAAI,kBACJC,GAAI,sDAENQ,gBAAiB,CACfT,GAAI,qBACJC,GAAI,sDAENS,iBAAkB,CAChBV,GAAI,sBACJC,GAAI,mDAUD,SAASU,EAAcpN,GAC5B,IAAK,MAAM0B,KAAO8K,EAChB,GAAI5K,EAAIC,KAAK2K,EAAY9K,IAAQE,EAAIC,KAAK7B,EAAS0B,GAAM,CACnC8K,EAAW9K,UAMxB8K,EAAW9K,EACpB,CAGF,MAAMD,EAAYR,IACfkB,IAAI2D,GACJ3D,IAAInC,EAAQqN,eAAiB,IAC7BlL,IAAImL,EAAAA,EAAc,IACdtN,EAAQuN,oBACXV,oBAAoB,IAErB1K,IAAInC,EAAQwN,eAAiB,IAC7BrL,IAAI+D,EAAclG,GAEf0D,EAAO,IAAImC,EAAAA,EAEe,iBAArB7F,EAAQ6G,SACjBnD,EAAKlD,MAAQR,EAAQ6G,cACS1G,IAArBH,EAAQ6G,UAA0B7G,EAAQ6G,SAMrD,MAAM4G,EAAWhM,EAAUoD,QAAQpD,EAAU+B,MAAME,GAAOA,GAE1D,GAAsB,SAAlB+J,EAASzP,KACX,MAAM,IAAI2E,UAAU,0BAItB,IAAIO,EAASsG,EAAAA,cACXA,EAAAA,SACA,CAAC,EACD3B,EAAgB,CAAC7H,UAASwI,OAAQkF,EAAAA,GAAM5E,UAAW,GAAI2E,IAOzD,OAJIzN,EAAQ2N,YACVzK,EAASsG,EAAAA,cAAoB,MAAO,CAACmE,UAAW3N,EAAQ2N,WAAYzK,IAG/DA,CACT,CAEAkK,EAAcQ,UAAY,CAExB/G,SAAUgH,EAAAA,OAEVF,UAAWE,EAAAA,OAEXxH,aAAcwH,EAAAA,KACd1H,gBAAiB0H,EAAAA,QAAkBA,EAAAA,QACnCzH,mBAAoByH,EAAAA,QAAkBA,EAAAA,QACtCjH,iBAAkBiH,EAAAA,KAElBR,cAAeQ,EAAAA,QACbA,EAAAA,UAAoB,CAClBA,EAAAA,OACAA,EAAAA,KACAA,EAAAA,QACEA,EAAAA,UAAoB,CAClBA,EAAAA,KACAA,EAAAA,OACAA,EAAAA,OACAA,EAAAA,KACAA,EAAAA,QAGEA,EAAAA,WAMVL,cAAeK,EAAAA,QACbA,EAAAA,UAAoB,CAClBA,EAAAA,OACAA,EAAAA,KACAA,EAAAA,QACEA,EAAAA,UAAoB,CAClBA,EAAAA,KACAA,EAAAA,OACAA,EAAAA,OACAA,EAAAA,KACAA,EAAAA,QAGEA,EAAAA,WAOV9C,UAAW8C,EAAAA,KACX3C,aAAc2C,EAAAA,KACdzF,SAAUyF,EAAAA,KACVzC,oBAAqByC,EAAAA,KACrBvF,iBAAkBuF,EAAAA,UAAoB,CAACA,EAAAA,KAAgBA,EAAAA,OACvDnE,WAAYmE,EAAAA,UAAoB,CAACA,EAAAA,KAAgBA,EAAAA,SACjD5D,kBAAmB4D,EAAAA,KACnBvE,WAAYuE,EAAAA,sCCnLZC,EAAO7P,QAAU,EAAjB6P,0FCGF,MAAMC,EAAW,uBACXC,EAAW,kDACXC,EAAW,gBA6BXC,EAAuC,CACzCC,eAAe,EACfC,UAAU,EACVC,YAAY,GA0EhB,EAvEyErO,IACrE,MAAMyC,EAAWM,OAAOC,OAAO,CAAC,EAAGkL,EAAkBlO,GAC/CsO,IAAQ7L,EAAS0L,cACjBI,IAAmB9L,EAAS2L,SAC5BC,IAAe5L,EAAS4L,WAE9B,SAASG,EAAKC,EAAcC,GAGxB,MAAO,CACH1Q,KAAM,OACNwC,MAAOiO,EACPrO,KAAM,CACFuO,MAAO,OACPC,YAAa,CACTC,KAAM,MACNC,UAAWJ,GAEfK,UAAW,CAAC,CAAE/Q,KAAM,OAAQwC,MAAOiO,KAG/C,CAsCA,MAAMO,EAA+B,CAAC,CAACjB,EAnBvC,SAAsBkB,GAClB,IAAIC,GAAMC,EAAAA,EAAAA,IAASF,GAEnB,QAAmB,IAARC,EACP,OAAO,EAOX,GAJIZ,IACAY,GAAY,KAGZb,EAAY,CAEZ,OAAOG,EAAKU,EADED,EAAMxH,MAAM,GAAI,GAAGuE,QAAQiC,EAAU,KAAO,SAE9D,CAEA,OAAOiB,CACX,IAWA,OARIX,GACAS,EAAUvO,KAAK,CAACuN,EAtCpB,SAAyBiB,GAErB,MAAMG,EAAWhB,EAAAA,EAASzC,MAAK1O,GAAKA,EAAEoS,UAAU3I,SAASuI,KACnDK,EAAWlB,EAAAA,EAASzC,MAAK1O,GAAKA,EAAEoS,UAAU3I,SAASuI,EAAMxH,MAAM,GAAI,MACnE8H,EAAOH,GAAYE,EACzB,IAAKC,EACD,OAAO,EAEX,MAAMC,GAAeJ,GAAYE,EAAWL,EAAMxH,OAAO,GAAK,GACxDgI,EAASnB,EAAM,IAAM,GACrBoB,EAAWH,EAAKI,MAAQF,EAASD,EACvC,OAAInB,EACOG,EAAKkB,EAAUH,EAAKjK,KAAO,aAE/BoK,CACX,IA0BA,SAAqB9K,IACjBgL,EAAAA,EAAAA,GAAehL,EAAMoK,EACzB,CAEkB,aCxGtBlB,EAAO7P,QAAU,SAAmB4R,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAIC,aACY,mBAA7BD,EAAIC,YAAY5K,UAA2B2K,EAAIC,YAAY5K,SAAS2K,EAC/E","sources":["../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/remark-math/index.js","../node_modules/remark-gfm/index.js","../node_modules/react-markdown/node_modules/unified/lib/index.js","../node_modules/react-markdown/node_modules/remark-parse/lib/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/remark-emoji/index.ts","../node_modules/react-markdown/node_modules/is-buffer/index.js"],"sourcesContent":["/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-math').ToOptions} Options\n *\n * @typedef {import('mdast-util-math')} DoNotTouchAsThisImportIncludesMathInTree\n */\n\nimport {math} from 'micromark-extension-math'\nimport {mathFromMarkdown, mathToMarkdown} from 'mdast-util-math'\n\n/**\n * Plugin to support math.\n *\n * @type {import('unified').Plugin<[Options?] | void[], Root, Root>}\n */\nexport default function remarkMath(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', math(options))\n  add('fromMarkdownExtensions', mathFromMarkdown())\n  add('toMarkdownExtensions', mathToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import { get as getEmoji } from 'node-emoji';\nimport { emoticon } from 'emoticon';\nimport { findAndReplace, type Find, type Replace } from 'mdast-util-find-and-replace';\nimport type { Plugin } from 'unified';\nimport type { Root, Nodes, Text } from 'mdast';\n\nconst RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g;\nconst RE_SHORT = /[$@|*'\",;.=:\\-)([\\]\\\\/<>038BOopPsSdDxXzZ]{2,5}/g;\nconst RE_PUNCT = /(?:_|-(?!1))/g;\n\n/**\n * Configuration of remark-emoji plugin.\n */\nexport interface RemarkEmojiOptions {\n    /**\n     * Makes converted emoji and emoticon texts accessible by wrapping them with\n     * `span` element setting `role` and `aria-label` attributes.\n     *\n     * @defaultValue false\n     */\n    accessible?: boolean;\n    /**\n     * Adds an extra whitespace after emoji.\n     * Useful when browser handle emojis with half character length and\n     * the following character is hidden.\n     *\n     * @defaultValue false\n     */\n    padSpaceAfter?: boolean;\n    /**\n     * Whether to support emoticon shortcodes (e.g. :-) will be replaced by 😃)\n     *\n     * @defaultValue false\n     */\n    emoticon?: boolean;\n}\n\nconst DEFAULT_SETTINGS: RemarkEmojiOptions = {\n    padSpaceAfter: false,\n    emoticon: false,\n    accessible: false,\n};\n\nconst plugin: Plugin<[(RemarkEmojiOptions | null | undefined)?], Root> = options => {\n    const settings = Object.assign({}, DEFAULT_SETTINGS, options);\n    const pad = !!settings.padSpaceAfter;\n    const emoticonEnable = !!settings.emoticon;\n    const accessible = !!settings.accessible;\n\n    function aria(text: string, label: string): Text {\n        // Creating HTML node in Markdown node is undocumented.\n        // https://github.com/syntax-tree/mdast-util-math/blob/e70bb824dc70f5423324b31b0b68581cf6698fe8/index.js#L44-L55\n        return {\n            type: 'text',\n            value: text,\n            data: {\n                hName: 'span',\n                hProperties: {\n                    role: 'img',\n                    ariaLabel: label,\n                },\n                hChildren: [{ type: 'text', value: text }],\n            },\n        };\n    }\n\n    function replaceEmoticon(match: string): string | false | Text {\n        // find emoji by shortcode - full match or with-out last char as it could be from text e.g. :-),\n        const iconFull = emoticon.find(e => e.emoticons.includes(match)); // full match\n        const iconPart = emoticon.find(e => e.emoticons.includes(match.slice(0, -1))); // second search pattern\n        const icon = iconFull || iconPart;\n        if (!icon) {\n            return false;\n        }\n        const trimmedChar = !iconFull && iconPart ? match.slice(-1) : '';\n        const addPad = pad ? ' ' : '';\n        const replaced = icon.emoji + addPad + trimmedChar;\n        if (accessible) {\n            return aria(replaced, icon.name + ' emoticon');\n        }\n        return replaced;\n    }\n\n    function replaceEmoji(match: string): string | false | Text {\n        let got = getEmoji(match);\n\n        if (typeof got === 'undefined') {\n            return false;\n        }\n\n        if (pad) {\n            got = got + ' ';\n        }\n\n        if (accessible) {\n            const label = match.slice(1, -1).replace(RE_PUNCT, ' ') + ' emoji';\n            return aria(got, label);\n        }\n\n        return got;\n    }\n\n    const replacers: [Find, Replace][] = [[RE_EMOJI, replaceEmoji]];\n    if (emoticonEnable) {\n        replacers.push([RE_SHORT, replaceEmoticon]);\n    }\n\n    function transformer(tree: Nodes): void {\n        findAndReplace(tree, replacers);\n    }\n\n    return transformer;\n};\n\nexport default plugin;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n"],"names":["u","b","Symbol","for","c","d","e","f","g","h","k","l","m","n","p","q","t","v","a","r","$$typeof","type","exports","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","remarkMath","options","arguments","length","undefined","data","this","add","field","value","push","math","mathFromMarkdown","mathToMarkdown","remarkGfm","gfm","gfmFromMarkdown","gfmToMarkdown","unified","base","transformers","trough","attachers","frozen","namespace","freezeIndex","processor","key","assertUnfrozen","own","call","Parser","Compiler","freeze","attacher","transformer","use","Number","POSITIVE_INFINITY","_len","Array","_key","settings","addPlugin","TypeError","isArray","addList","addPreset","Object","assign","plugin","result","plugins","index","entry","isPlainObj","extend","parse","doc","file","vfile","assertParser","newable","String","stringify","node","assertCompiler","assertNode","compile","run","callback","Promise","executor","resolve","reject","done","error","tree","runSync","complete","assertDone","bail","process","isBuffer","processSync","destination","hasOwnProperty","name","prototype","keys","Error","asyncName","Boolean","looksLikeAVFile","VFile","remarkParse","fromMarkdown","extensions","mdastExtensions","rehypeFilter","allowedElements","disallowedElements","allowElement","visit","parent_","parent","remove","includes","tagName","unwrapDisallowed","children","splice","protocols","uriTransformer","uri","url","trim","first","charAt","colon","indexOf","protocol","slice","toLowerCase","tableElements","Set","childrenToReact","context","child","childIndex","toReact","has","whitespace","skipHtml","transform","transformLinkUri","parentSchema","schema","properties","property","space","svg","addProperty","listDepth","position","start","line","column","offset","end","component","components","basic","React","ReactIs","linkTarget","target","href","title","inline","level","parseInt","transformImageUri","src","alt","input","getInputElement","checked","getElementsBeforeCount","ordered","pos","depth","align","style","textAlign","isHeader","sourcePos","map","join","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","props","prop","ctx","info","find","commaSeparated","commas","spaces","iterator","replace","styleReplacer","parseStyle","hastToReact","attribute","_","$1","toUpperCase","deprecated","to","id","renderers","astPlugins","allowDangerousHtml","escapeHtml","source","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","html","className","propTypes","PropTypes","module","RE_EMOJI","RE_SHORT","RE_PUNCT","DEFAULT_SETTINGS","padSpaceAfter","emoticon","accessible","pad","emoticonEnable","aria","text","label","hName","hProperties","role","ariaLabel","hChildren","replacers","match","got","getEmoji","iconFull","emoticons","iconPart","icon","trimmedChar","addPad","replaced","emoji","findAndReplace","obj","constructor"],"sourceRoot":""}