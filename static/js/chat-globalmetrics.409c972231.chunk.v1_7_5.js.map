{"version":3,"file":"static/js/chat-globalmetrics.409c972231.chunk.v1_7_5.js","mappings":"+KAMA,MA2CA,EA3CyBA,IAA2C,IAADC,EAAA,IAAzC,QAAEC,EAAU,KAAI,UAAEC,EAAY,MAAMH,EAC5D,IAAKE,EACH,OAAO,KAIT,MAAME,EAAgBF,EAAQE,eAAiB,EACzCC,GAAyC,QAAvBJ,EAAAC,EAAQG,uBAAe,IAAAJ,OAAA,EAAvBA,EAAyBK,QAAQ,KAAM,MACzDC,EAAcL,EAAQK,aAAe,EAE3C,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOC,iBAAiBC,SAAA,CACrCT,IACCK,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,EAAOG,uBAAwBC,MAAM,gBAAeF,SAAA,CAAC,MAChET,MAGRK,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,EAAOG,uBAAwBC,MAAM,4BAA2BF,SAAA,CAAC,MAC5ER,MAENI,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,EAAOG,uBAAwBC,MAAM,kCAAiCF,SAAA,CAAC,MAClFP,EAAgB,QAErBG,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,EAAOG,uBAAwBC,MAAM,+BAA8BF,SAAA,CAAC,OAC/EL,OAGH,C","sources":["components/chat/GlobalMetricsBar/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport styles from './GlobalMetricsBar.module.css';\n\n/**\n * Displays global/session-level metrics above the chat input.\n */\nconst GlobalMetricsBar = ({ metrics = null, modelName = null }) => {\n  if (!metrics) {\n    return null; // Don't render if no metrics are available\n  }\n\n  // Example metrics - adapt based on what `useChatLogic` provides in `metrics`\n  const totalMessages = metrics.totalMessages || 0;\n  const avgResponseTime = metrics.avgResponseTime?.toFixed(2) || 'N/A';\n  const totalTokens = metrics.totalTokens || 0;\n\n  return (\n    <div className={styles.GlobalMetricsBar}>\n      {modelName && (\n        <span className={styles.GlobalMetricsBar__item} title=\"Current Model\"> \n          üß† {modelName}\n        </span>\n      )}\n      <span className={styles.GlobalMetricsBar__item} title=\"Total Messages in Session\"> \n        üí¨ {totalMessages} \n      </span>\n      <span className={styles.GlobalMetricsBar__item} title=\"Average Response Time (seconds)\">\n        ‚è±Ô∏è {avgResponseTime}s \n      </span>\n       <span className={styles.GlobalMetricsBar__item} title=\"Total Tokens Used in Session\"> \n        #Ô∏è‚É£ {totalTokens} \n      </span>\n       {/* Add more metrics as needed */}\n    </div>\n  );\n};\n\nGlobalMetricsBar.propTypes = {\n  /** Object containing global metrics data */\n  metrics: PropTypes.shape({\n    totalMessages: PropTypes.number,\n    avgResponseTime: PropTypes.number,\n    totalTokens: PropTypes.number,\n    // Add other expected metrics\n  }),\n  /** Name of the currently selected model */\n  modelName: PropTypes.string,\n};\n\nexport default GlobalMetricsBar; "],"names":["_ref","_metrics$avgResponseT","metrics","modelName","totalMessages","avgResponseTime","toFixed","totalTokens","_jsxs","className","styles","GlobalMetricsBar","children","GlobalMetricsBar__item","title"],"sourceRoot":""}