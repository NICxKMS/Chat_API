{"version":3,"file":"static/js/vendor.highlight.js-5219796e.bf11be099e.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/highlight.js/lib/languages/routeros.js","../node_modules/highlight.js/lib/languages/q.js","../node_modules/highlight.js/lib/languages/r.js","../node_modules/highlight.js/lib/languages/qml.js","../node_modules/highlight.js/lib/languages/rib.js","../node_modules/highlight.js/lib/languages/roboconf.js","../node_modules/highlight.js/lib/languages/reasonml.js"],"sourcesContent":["/*\nLanguage: Microtik RouterOS script\nAuthor: Ivan Dementev <ivan_div@mail.ru>\nDescription: Scripting host provides a way to automate some router maintenance tasks by means of executing user-defined scripts bounded to some event occurrence\nWebsite: https://wiki.mikrotik.com/wiki/Manual:Scripting\n*/\n\n// Colors from RouterOS terminal:\n//   green        - #0E9A00\n//   teal         - #0C9A9A\n//   purple       - #99069A\n//   light-brown  - #9A9900\n\nfunction routeros(hljs) {\n  const STATEMENTS = 'foreach do while for if from to step else on-error and or not in';\n\n  // Global commands: Every global command should start with \":\" token, otherwise it will be treated as variable.\n  const GLOBAL_COMMANDS = 'global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime';\n\n  // Common commands: Following commands available from most sub-menus:\n  const COMMON_COMMANDS = 'add remove enable disable set get print export edit find run debug error info warning';\n\n  const LITERALS = 'true false yes no nothing nil null';\n\n  const OBJECTS = 'traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw';\n\n  const VAR = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$[\\w\\d#@][\\w\\d_]*/\n      },\n      {\n        begin: /\\$\\{(.*?)\\}/\n      }\n    ]\n  };\n\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$\\(/,\n        end: /\\)/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      }\n    ]\n  };\n\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/\n  };\n\n  return {\n    name: 'Microtik RouterOS script',\n    aliases: [\n      'mikrotik'\n    ],\n    case_insensitive: true,\n    keywords: {\n      $pattern: /:?[\\w-]+/,\n      literal: LITERALS,\n      keyword: STATEMENTS + ' :' + STATEMENTS.split(' ').join(' :') + ' :' + GLOBAL_COMMANDS.split(' ').join(' :')\n    },\n    contains: [\n      { // illegal syntax\n        variants: [\n          { // -- comment\n            begin: /\\/\\*/,\n            end: /\\*\\//\n          },\n          { // Stan comment\n            begin: /\\/\\//,\n            end: /$/\n          },\n          { // HTML tags\n            begin: /<\\//,\n            end: />/\n          }\n        ],\n        illegal: /./\n      },\n      hljs.COMMENT('^#', '$'),\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR,\n      // attribute=value\n      {\n        // > is to avoid matches with => in other grammars\n        begin: /[\\w-]+=([^\\s{}[\\]()>]+)/,\n        relevance: 0,\n        returnBegin: true,\n        contains: [\n          {\n            className: 'attribute',\n            begin: /[^=]+/\n          },\n          {\n            begin: /=/,\n            endsWithParent: true,\n            relevance: 0,\n            contains: [\n              QUOTE_STRING,\n              APOS_STRING,\n              VAR,\n              {\n                className: 'literal',\n                begin: '\\\\b(' + LITERALS.split(' ').join('|') + ')\\\\b'\n              },\n              {\n                // Do not format unclassified values. Needed to exclude highlighting of values as built_in.\n                begin: /(\"[^\"]*\"|[^\\s{}[\\]]+)/\n              }\n              /*\n              {\n                // IPv4 addresses and subnets\n                className: 'number',\n                variants: [\n                  {begin: IPADDR_wBITMASK+'(,'+IPADDR_wBITMASK+')*'}, //192.168.0.0/24,1.2.3.0/24\n                  {begin: IPADDR+'-'+IPADDR},       // 192.168.0.1-192.168.0.3\n                  {begin: IPADDR+'(,'+IPADDR+')*'}, // 192.168.0.1,192.168.0.34,192.168.24.1,192.168.0.1\n                ]\n              },\n              {\n                // MAC addresses and DHCP Client IDs\n                className: 'number',\n                begin: /\\b(1:)?([0-9A-Fa-f]{1,2}[:-]){5}([0-9A-Fa-f]){1,2}\\b/,\n              },\n              */\n            ]\n          }\n        ]\n      },\n      {\n        // HEX values\n        className: 'number',\n        begin: /\\*[0-9a-fA-F]+/\n      },\n      {\n        begin: '\\\\b(' + COMMON_COMMANDS.split(' ').join('|') + ')([\\\\s[(\\\\]|])',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'builtin-name', // 'function',\n            begin: /\\w+/\n          }\n        ]\n      },\n      {\n        className: 'built_in',\n        variants: [\n          {\n            begin: '(\\\\.\\\\./|/|\\\\s)((' + OBJECTS.split(' ').join('|') + ');?\\\\s)+'\n          },\n          {\n            begin: /\\.\\./,\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = routeros;\n","/*\nLanguage: Q\nDescription: Q is a vector-based functional paradigm programming language built into the kdb+ database.\n             (K/Q/Kdb+ from Kx Systems)\nAuthor: Sergey Vidyuk <svidyuk@gmail.com>\nWebsite: https://kx.com/connect-with-us/developers/\n*/\n\nfunction q(hljs) {\n  const KEYWORDS = {\n    $pattern: /(`?)[A-Za-z0-9_]+\\b/,\n    keyword:\n      'do while select delete by update from',\n    literal:\n      '0b 1b',\n    built_in:\n      'neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum',\n    type:\n      '`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid'\n  };\n\n  return {\n    name: 'Q',\n    aliases: [\n      'k',\n      'kdb'\n    ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = q;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: R\nDescription: R is a free software environment for statistical computing and graphics.\nAuthor: Joe Cheng <joe@rstudio.org>\nContributors: Konrad Rudolph <konrad.rudolph@gmail.com>\nWebsite: https://www.r-project.org\nCategory: common,scientific\n*/\n\n/** @type LanguageFn */\nfunction r(hljs) {\n  // Identifiers in R cannot start with `_`, but they can start with `.` if it\n  // is not immediately followed by a digit.\n  // R also supports quoted identifiers, which are near-arbitrary sequences\n  // delimited by backticks (`…`), which may contain escape sequences. These are\n  // handled in a separate mode. See `test/markup/r/names.txt` for examples.\n  // FIXME: Support Unicode identifiers.\n  const IDENT_RE = /(?:(?:[a-zA-Z]|\\.[._a-zA-Z])[._a-zA-Z0-9]*)|\\.(?!\\d)/;\n  const SIMPLE_IDENT = /[a-zA-Z][a-zA-Z_0-9]*/;\n\n  return {\n    name: 'R',\n\n    // only in Haskell, not R\n    illegal: /->/,\n    keywords: {\n      $pattern: IDENT_RE,\n      keyword:\n        'function if in break next repeat else for while',\n      literal:\n        'NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 ' +\n        'NA_character_|10 NA_complex_|10',\n      built_in:\n        // Builtin constants\n        'LETTERS letters month.abb month.name pi T F ' +\n        // Primitive functions\n        // These are all the functions in `base` that are implemented as a\n        // `.Primitive`, minus those functions that are also keywords.\n        'abs acos acosh all any anyNA Arg as.call as.character ' +\n        'as.complex as.double as.environment as.integer as.logical ' +\n        'as.null.default as.numeric as.raw asin asinh atan atanh attr ' +\n        'attributes baseenv browser c call ceiling class Conj cos cosh ' +\n        'cospi cummax cummin cumprod cumsum digamma dim dimnames ' +\n        'emptyenv exp expression floor forceAndCall gamma gc.time ' +\n        'globalenv Im interactive invisible is.array is.atomic is.call ' +\n        'is.character is.complex is.double is.environment is.expression ' +\n        'is.finite is.function is.infinite is.integer is.language ' +\n        'is.list is.logical is.matrix is.na is.name is.nan is.null ' +\n        'is.numeric is.object is.pairlist is.raw is.recursive is.single ' +\n        'is.symbol lazyLoadDBfetch length lgamma list log max min ' +\n        'missing Mod names nargs nzchar oldClass on.exit pos.to.env ' +\n        'proc.time prod quote range Re rep retracemem return round ' +\n        'seq_along seq_len seq.int sign signif sin sinh sinpi sqrt ' +\n        'standardGeneric substitute sum switch tan tanh tanpi tracemem ' +\n        'trigamma trunc unclass untracemem UseMethod xtfrm',\n    },\n    compilerExtensions: [\n      // allow beforeMatch to act as a \"qualifier\" for the match\n      // the full match begin must be [beforeMatch][begin]\n      (mode, parent) => {\n        if (!mode.beforeMatch) return;\n        // starts conflicts with endsParent which we need to make sure the child\n        // rule is not matched multiple times\n        if (mode.starts) throw new Error(\"beforeMatch cannot be used with starts\");\n\n        const originalMode = Object.assign({}, mode);\n        Object.keys(mode).forEach((key) => { delete mode[key]; });\n\n        mode.begin = concat(originalMode.beforeMatch, lookahead(originalMode.begin));\n        mode.starts = {\n          relevance: 0,\n          contains: [\n            Object.assign(originalMode, { endsParent: true })\n          ]\n        };\n        mode.relevance = 0;\n\n        delete originalMode.beforeMatch;\n      }\n    ],\n    contains: [\n      // Roxygen comments\n      hljs.COMMENT(\n        /#'/,\n        /$/,\n        {\n          contains: [\n            {\n              // Handle `@examples` separately to cause all subsequent code\n              // until the next `@`-tag on its own line to be kept as-is,\n              // preventing highlighting. This code is example R code, so nested\n              // doctags shouldn’t be treated as such. See\n              // `test/markup/r/roxygen.txt` for an example.\n              className: 'doctag',\n              begin: '@examples',\n              starts: {\n                contains: [\n                  { begin: /\\n/ },\n                  {\n                    begin: /#'\\s*(?=@[a-zA-Z]+)/,\n                    endsParent: true,\n                  },\n                  {\n                    begin: /#'/,\n                    end: /$/,\n                    excludeBegin: true,\n                  }\n                ]\n              }\n            },\n            {\n              // Handle `@param` to highlight the parameter name following\n              // after.\n              className: 'doctag',\n              begin: '@param',\n              end: /$/,\n              contains: [\n                {\n                  className: 'variable',\n                  variants: [\n                    { begin: IDENT_RE },\n                    { begin: /`(?:\\\\.|[^`\\\\])+`/ }\n                  ],\n                  endsParent: true\n                }\n              ]\n            },\n            {\n              className: 'doctag',\n              begin: /@[a-zA-Z]+/\n            },\n            {\n              className: 'meta-keyword',\n              begin: /\\\\[a-zA-Z]+/,\n            }\n          ]\n        }\n      ),\n\n      hljs.HASH_COMMENT_MODE,\n\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\(/, end: /\\)(-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\{/, end: /\\}(-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]\"(-*)\\[/, end: /\\](-*)\"/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\(/, end: /\\)(-*)'/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\{/, end: /\\}(-*)'/ }),\n          hljs.END_SAME_AS_BEGIN({ begin: /[rR]'(-*)\\[/, end: /\\](-*)'/ }),\n          {begin: '\"', end: '\"', relevance: 0},\n          {begin: \"'\", end: \"'\", relevance: 0}\n        ],\n      },\n      {\n        className: 'number',\n        relevance: 0,\n        beforeMatch: /([^a-zA-Z0-9._])/, // not part of an identifier\n        variants: [\n          // TODO: replace with negative look-behind when available\n          // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/ },\n          // { begin: /(?<![a-zA-Z0-9._])0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/ },\n          // { begin: /(?<![a-zA-Z0-9._])(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/ }\n          {\n            // Special case: only hexadecimal binary powers can contain fractions.\n            match: /0[xX][0-9a-fA-F]+\\.[0-9a-fA-F]*[pP][+-]?\\d+i?/,\n          },\n          {\n            match: /0[xX][0-9a-fA-F]+([pP][+-]?\\d+)?[Li]?/\n          },\n          {\n            match: /(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?[Li]?/,\n          }\n        ],\n      },\n      {\n        // infix operator\n        begin: '%',\n        end: '%'\n      },\n      // relevance boost for assignment\n      {\n        begin: concat(SIMPLE_IDENT, \"\\\\s+<-\\\\s+\")\n      },\n      {\n        // escaped identifier\n        begin: '`',\n        end: '`',\n        contains: [\n          { begin: /\\\\./ }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = r;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: QML\nRequires: javascript.js, xml.js\nAuthor: John Foster <jfoster@esri.com>\nDescription: Syntax highlighting for the Qt Quick QML scripting language, based mostly off\n             the JavaScript parser.\nWebsite: https://doc.qt.io/qt-5/qmlapplications.html\nCategory: scripting\n*/\n\nfunction qml(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'in of on if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await import',\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Behavior bool color coordinate date double enumeration font geocircle georectangle ' +\n      'geoshape int list matrix4x4 parent point quaternion real rect ' +\n      'size string url variant vector2d vector3d vector4d ' +\n      'Promise'\n  };\n\n  const QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*';\n\n  // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\n  // Use property class.\n  const PROPERTY = {\n    className: 'keyword',\n    begin: '\\\\bproperty\\\\b',\n    starts: {\n      className: 'string',\n      end: '(:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  };\n\n  // Isolate signal statements. Ends at a ) a comment or end of line.\n  // Use property class.\n  const SIGNAL = {\n    className: 'keyword',\n    begin: '\\\\bsignal\\\\b',\n    starts: {\n      className: 'string',\n      end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  };\n\n  // id: is special in QML. When we see id: we want to mark the id: as attribute and\n  // emphasize the token following.\n  const ID_ID = {\n    className: 'attribute',\n    begin: '\\\\bid\\\\s*:',\n    starts: {\n      className: 'string',\n      end: QML_IDENT_RE,\n      returnEnd: false\n    }\n  };\n\n  // Find QML object attribute. An attribute is a QML identifier followed by :.\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\n  // objects, object definitions, or javascript. The true end is either when the parent\n  // ends or the next attribute is detected.\n  const QML_ATTRIBUTE = {\n    begin: QML_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: QML_IDENT_RE,\n        end: '\\\\s*:',\n        excludeEnd: true,\n        relevance: 0\n      }\n    ],\n    relevance: 0\n  };\n\n  // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\n  const QML_OBJECT = {\n    begin: concat(QML_IDENT_RE, /\\s*\\{/),\n    end: /\\{/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: QML_IDENT_RE\n      })\n    ]\n  };\n\n  return {\n    name: 'QML',\n    aliases: [ 'qt' ],\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`',\n        end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{',\n            end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: '\\\\b(0[bB][01]+)'\n          },\n          {\n            begin: '\\\\b(0[oO][0-7]+)'\n          },\n          {\n            begin: hljs.C_NUMBER_RE\n          }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          { // E4X / JSX\n            begin: /</,\n            end: />\\s*[);\\]]/,\n            relevance: 0,\n            subLanguage: 'xml'\n          }\n        ],\n        relevance: 0\n      },\n      SIGNAL,\n      PROPERTY,\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: /[A-Za-z$_][0-9A-Za-z$_]*/\n          }),\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        // hack: prevents detection of keywords after dots\n        begin: '\\\\.' + hljs.IDENT_RE,\n        relevance: 0\n      },\n      ID_ID,\n      QML_ATTRIBUTE,\n      QML_OBJECT\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = qml;\n","/*\nLanguage: RenderMan RIB\nAuthor: Konstantin Evdokimenko <qewerty@gmail.com>\nContributors: Shuen-Huei Guan <drake.guan@gmail.com>\nWebsite: https://renderman.pixar.com/resources/RenderMan_20/ribBinding.html\nCategory: graphics\n*/\n\nfunction rib(hljs) {\n  return {\n    name: 'RenderMan RIB',\n    keywords:\n      'ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis ' +\n      'Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone ' +\n      'CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail ' +\n      'DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format ' +\n      'FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry ' +\n      'Hider Hyperboloid Identity Illuminate Imager Interior LightSource ' +\n      'MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte ' +\n      'MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option ' +\n      'Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples ' +\n      'PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection ' +\n      'Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ' +\n      'ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere ' +\n      'SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd ' +\n      'TransformPoints Translate TrimCurve WorldBegin WorldEnd',\n    illegal: '</',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n}\n\nmodule.exports = rib;\n","/*\nLanguage: Roboconf\nAuthor: Vincent Zurczak <vzurczak@linagora.com>\nDescription: Syntax highlighting for Roboconf's DSL\nWebsite: http://roboconf.net\nCategory: config\n*/\n\nfunction roboconf(hljs) {\n  const IDENTIFIER = '[a-zA-Z-_][^\\\\n{]+\\\\{';\n\n  const PROPERTY = {\n    className: 'attribute',\n    begin: /[a-zA-Z-_]+/,\n    end: /\\s*:/,\n    excludeEnd: true,\n    starts: {\n      end: ';',\n      relevance: 0,\n      contains: [\n        {\n          className: 'variable',\n          begin: /\\.[a-zA-Z-_]+/\n        },\n        {\n          className: 'keyword',\n          begin: /\\(optional\\)/\n        }\n      ]\n    }\n  };\n\n  return {\n    name: 'Roboconf',\n    aliases: [\n      'graph',\n      'instances'\n    ],\n    case_insensitive: true,\n    keywords: 'import',\n    contains: [\n      // Facet sections\n      {\n        begin: '^facet ' + IDENTIFIER,\n        end: /\\}/,\n        keywords: 'facet',\n        contains: [\n          PROPERTY,\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Instance sections\n      {\n        begin: '^\\\\s*instance of ' + IDENTIFIER,\n        end: /\\}/,\n        keywords: 'name count channels instance-data instance-state instance of',\n        illegal: /\\S/,\n        contains: [\n          'self',\n          PROPERTY,\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Component sections\n      {\n        begin: '^' + IDENTIFIER,\n        end: /\\}/,\n        contains: [\n          PROPERTY,\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Comments\n      hljs.HASH_COMMENT_MODE\n    ]\n  };\n}\n\nmodule.exports = roboconf;\n","/*\nLanguage: ReasonML\nDescription: Reason lets you write simple, fast and quality type safe code while leveraging both the JavaScript & OCaml ecosystems.\nWebsite: https://reasonml.github.io\nAuthor: Gidi Meir Morris <oss@gidi.io>\nCategory: functional\n*/\nfunction reasonml(hljs) {\n  function orReValues(ops) {\n    return ops\n      .map(function(op) {\n        return op\n          .split('')\n          .map(function(char) {\n            return '\\\\' + char;\n          })\n          .join('');\n      })\n      .join('|');\n  }\n\n  const RE_IDENT = '~?[a-z$_][0-9a-zA-Z$_]*';\n  const RE_MODULE_IDENT = '`?[A-Z$_][0-9a-zA-Z$_]*';\n\n  const RE_PARAM_TYPEPARAM = '\\'?[a-z$_][0-9a-z$_]*';\n  const RE_PARAM_TYPE = '\\\\s*:\\\\s*[a-z$_][0-9a-z$_]*(\\\\(\\\\s*(' + RE_PARAM_TYPEPARAM + '\\\\s*(,' + RE_PARAM_TYPEPARAM + '\\\\s*)*)?\\\\))?';\n  const RE_PARAM = RE_IDENT + '(' + RE_PARAM_TYPE + '){0,2}';\n  const RE_OPERATOR = \"(\" + orReValues([\n    '||',\n    '++',\n    '**',\n    '+.',\n    '*',\n    '/',\n    '*.',\n    '/.',\n    '...'\n  ]) + \"|\\\\|>|&&|==|===)\";\n  const RE_OPERATOR_SPACED = \"\\\\s+\" + RE_OPERATOR + \"\\\\s+\";\n\n  const KEYWORDS = {\n    keyword:\n      'and as asr assert begin class constraint do done downto else end exception external ' +\n      'for fun function functor if in include inherit initializer ' +\n      'land lazy let lor lsl lsr lxor match method mod module mutable new nonrec ' +\n      'object of open or private rec sig struct then to try type val virtual when while with',\n    built_in:\n      'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit ',\n    literal:\n      'true false'\n  };\n\n  const RE_NUMBER = '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n    '0[oO][0-7_]+[Lln]?|' +\n    '0[bB][01_]+[Lln]?|' +\n    '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)';\n\n  const NUMBER_MODE = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        begin: RE_NUMBER\n      },\n      {\n        begin: '\\\\(-' + RE_NUMBER + '\\\\)'\n      }\n    ]\n  };\n\n  const OPERATOR_MODE = {\n    className: 'operator',\n    relevance: 0,\n    begin: RE_OPERATOR\n  };\n  const LIST_CONTENTS_MODES = [\n    {\n      className: 'identifier',\n      relevance: 0,\n      begin: RE_IDENT\n    },\n    OPERATOR_MODE,\n    NUMBER_MODE\n  ];\n\n  const MODULE_ACCESS_CONTENTS = [\n    hljs.QUOTE_STRING_MODE,\n    OPERATOR_MODE,\n    {\n      className: 'module',\n      begin: \"\\\\b\" + RE_MODULE_IDENT,\n      returnBegin: true,\n      end: \"\\.\",\n      contains: [\n        {\n          className: 'identifier',\n          begin: RE_MODULE_IDENT,\n          relevance: 0\n        }\n      ]\n    }\n  ];\n\n  const PARAMS_CONTENTS = [\n    {\n      className: 'module',\n      begin: \"\\\\b\" + RE_MODULE_IDENT,\n      returnBegin: true,\n      end: \"\\.\",\n      relevance: 0,\n      contains: [\n        {\n          className: 'identifier',\n          begin: RE_MODULE_IDENT,\n          relevance: 0\n        }\n      ]\n    }\n  ];\n\n  const PARAMS_MODE = {\n    begin: RE_IDENT,\n    end: '(,|\\\\n|\\\\))',\n    relevance: 0,\n    contains: [\n      OPERATOR_MODE,\n      {\n        className: 'typing',\n        begin: ':',\n        end: '(,|\\\\n)',\n        returnBegin: true,\n        relevance: 0,\n        contains: PARAMS_CONTENTS\n      }\n    ]\n  };\n\n  const FUNCTION_BLOCK_MODE = {\n    className: 'function',\n    relevance: 0,\n    keywords: KEYWORDS,\n    variants: [\n      {\n        begin: '\\\\s(\\\\(\\\\.?.*?\\\\)|' + RE_IDENT + ')\\\\s*=>',\n        end: '\\\\s*=>',\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'params',\n            variants: [\n              {\n                begin: RE_IDENT\n              },\n              {\n                begin: RE_PARAM\n              },\n              {\n                begin: /\\(\\s*\\)/\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '\\\\s\\\\(\\\\.?[^;\\\\|]*\\\\)\\\\s*=>',\n        end: '\\\\s=>',\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'params',\n            relevance: 0,\n            variants: [ PARAMS_MODE ]\n          }\n        ]\n      },\n      {\n        begin: '\\\\(\\\\.\\\\s' + RE_IDENT + '\\\\)\\\\s*=>'\n      }\n    ]\n  };\n  MODULE_ACCESS_CONTENTS.push(FUNCTION_BLOCK_MODE);\n\n  const CONSTRUCTOR_MODE = {\n    className: 'constructor',\n    begin: RE_MODULE_IDENT + '\\\\(',\n    end: '\\\\)',\n    illegal: '\\\\n',\n    keywords: KEYWORDS,\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      OPERATOR_MODE,\n      {\n        className: 'params',\n        begin: '\\\\b' + RE_IDENT\n      }\n    ]\n  };\n\n  const PATTERN_MATCH_BLOCK_MODE = {\n    className: 'pattern-match',\n    begin: '\\\\|',\n    returnBegin: true,\n    keywords: KEYWORDS,\n    end: '=>',\n    relevance: 0,\n    contains: [\n      CONSTRUCTOR_MODE,\n      OPERATOR_MODE,\n      {\n        relevance: 0,\n        className: 'constructor',\n        begin: RE_MODULE_IDENT\n      }\n    ]\n  };\n\n  const MODULE_ACCESS_MODE = {\n    className: 'module-access',\n    keywords: KEYWORDS,\n    returnBegin: true,\n    variants: [\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\" + RE_IDENT\n      },\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\(\",\n        end: \"\\\\)\",\n        returnBegin: true,\n        contains: [\n          FUNCTION_BLOCK_MODE,\n          {\n            begin: '\\\\(',\n            end: '\\\\)',\n            skip: true\n          }\n        ].concat(MODULE_ACCESS_CONTENTS)\n      },\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\{\",\n        end: /\\}/\n      }\n    ],\n    contains: MODULE_ACCESS_CONTENTS\n  };\n\n  PARAMS_CONTENTS.push(MODULE_ACCESS_MODE);\n\n  return {\n    name: 'ReasonML',\n    aliases: [ 're' ],\n    keywords: KEYWORDS,\n    illegal: '(:-|:=|\\\\$\\\\{|\\\\+=)',\n    contains: [\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        illegal: '^(#,\\\\/\\\\/)'\n      }),\n      {\n        className: 'character',\n        begin: '\\'(\\\\\\\\[^\\']+|[^\\'])\\'',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'literal',\n        begin: '\\\\(\\\\)',\n        relevance: 0\n      },\n      {\n        className: 'literal',\n        begin: '\\\\[\\\\|',\n        end: '\\\\|\\\\]',\n        relevance: 0,\n        contains: LIST_CONTENTS_MODES\n      },\n      {\n        className: 'literal',\n        begin: '\\\\[',\n        end: '\\\\]',\n        relevance: 0,\n        contains: LIST_CONTENTS_MODES\n      },\n      CONSTRUCTOR_MODE,\n      {\n        className: 'operator',\n        begin: RE_OPERATOR_SPACED,\n        illegal: '-->',\n        relevance: 0\n      },\n      NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      PATTERN_MATCH_BLOCK_MODE,\n      FUNCTION_BLOCK_MODE,\n      {\n        className: 'module-def',\n        begin: \"\\\\bmodule\\\\s+\" + RE_IDENT + \"\\\\s+\" + RE_MODULE_IDENT + \"\\\\s+=\\\\s+\\\\{\",\n        end: /\\}/,\n        returnBegin: true,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          {\n            className: 'module',\n            relevance: 0,\n            begin: RE_MODULE_IDENT\n          },\n          {\n            begin: /\\{/,\n            end: /\\}/,\n            skip: true\n          }\n        ].concat(MODULE_ACCESS_CONTENTS)\n      },\n      MODULE_ACCESS_MODE\n    ]\n  };\n}\n\nmodule.exports = reasonml;\n"],"names":["module","exports","hljs","STATEMENTS","LITERALS","VAR","className","variants","begin","QUOTE_STRING","end","contains","BACKSLASH_ESCAPE","APOS_STRING","name","aliases","case_insensitive","keywords","$pattern","literal","keyword","split","join","illegal","COMMENT","relevance","returnBegin","endsWithParent","built_in","type","C_LINE_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","concat","_len","arguments","length","args","Array","_key","map","x","source","re","IDENT_RE","compilerExtensions","mode","parent","beforeMatch","starts","Error","originalMode","Object","assign","keys","forEach","key","endsParent","excludeBegin","HASH_COMMENT_MODE","END_SAME_AS_BEGIN","match","QML_IDENT_RE","ID_ID","returnEnd","QML_ATTRIBUTE","excludeEnd","QML_OBJECT","inherit","TITLE_MODE","APOS_STRING_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_RE","RE_STARTERS_RE","REGEXP_MODE","subLanguage","beginKeywords","IDENTIFIER","PROPERTY","RE_IDENT","RE_MODULE_IDENT","RE_PARAM_TYPEPARAM","RE_PARAM","RE_OPERATOR","op","char","RE_OPERATOR_SPACED","KEYWORDS","RE_NUMBER","NUMBER_MODE","OPERATOR_MODE","LIST_CONTENTS_MODES","MODULE_ACCESS_CONTENTS","PARAMS_CONTENTS","FUNCTION_BLOCK_MODE","push","CONSTRUCTOR_MODE","PATTERN_MATCH_BLOCK_MODE","MODULE_ACCESS_MODE","skip"],"sourceRoot":""}