{"version":3,"file":"static/js/small-chunks-91c40cd8.4e30d43c.js","mappings":"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","sources":["../node_modules/parse-entities/decode-entity.browser.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/trough/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/style-to-object/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/style-to-object/index.mjs","../node_modules/node-emoji/src/utils.ts","../node_modules/node-emoji/src/data.ts","../node_modules/node-emoji/src/get.ts","../node_modules/prop-types/index.js","../node_modules/skin-tone/index.js","../node_modules/trim-lines/index.js"],"sourcesContent":["'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","import charRegex from 'char-regex'\n\nexport const charRegexMatcher = charRegex()\n\nexport function asFunction<T extends PropertyKey, Args extends unknown[]>(\n  input: ((...args: Args) => T) | T,\n): (...args: Args) => T {\n  return typeof input === 'function' ? input : () => input\n}\n\n/**\n * Non spacing mark contained by some emoticons (65039 - '️' - 0xFE0F).\n *\n * It's the 'Variant Form', which provides more information so that emoticons\n * can be rendered as more colorful graphics. FE0E is a unicode text version\n * whereas FE0F should be rendered as a graphical version.\n * The code gracefully degrades.\n */\nconst NON_SPACING_MARK = String.fromCharCode(65039)\n\nconst nonSpacingRegex = new RegExp(NON_SPACING_MARK, 'g')\n\n/**\n * Removes the non-spacing-mark from the emoji code.\n *\n * Never send a stripped version to clients, as it kills graphical emoticons.\n */\nexport function normalizeCode(code: string) {\n  return code.replace(nonSpacingRegex, '')\n}\n\nexport function normalizeName(name: string) {\n  return /:.+:/.test(name) ? name.slice(1, -1) : name\n}\n\nexport function randomItem<T>(array: T[]) {\n  return array[Math.floor(Math.random() * array.length)]\n}\n","import emojilib from 'emojilib'\n\nimport { normalizeCode } from './utils.js'\n\nexport interface Emoji {\n  emoji: string\n  key: string\n}\n\nexport const emojiData = Object.entries(emojilib.lib).map(\n  ([name, { char: emoji }]) => [name, emoji] as const,\n)\n\nexport const emojiCodesByName = new Map(emojiData)\n\nexport const emojiNamesByCode = new Map(\n  emojiData.map(([name, emoji]) => [normalizeCode(emoji), name]),\n)\n","import { assert } from '@sindresorhus/is'\n\nimport { emojiCodesByName } from './data.js'\nimport { normalizeName } from './utils.js'\n\n/**\n * Get an emoji from an emoji name.\n */\nexport const get = (codeOrName: string) => {\n  assert.string(codeOrName)\n\n  return emojiCodesByName.get(normalizeName(codeOrName))\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\nconst emojiModifierBase = require('unicode-emoji-modifier-base');\n\nconst skinTones = new Map([\n\t['none', ''],\n\t['white', '🏻'],\n\t['creamWhite', '🏼'],\n\t['lightBrown', '🏽'],\n\t['brown', '🏾'],\n\t['darkBrown', '🏿']\n]);\n\nmodule.exports = (emoji, tone) => {\n\tif (!skinTones.has(tone)) {\n\t\tthrow new TypeError(`Unexpected \\`skinTone\\` name: ${tone}`);\n\t}\n\n\temoji = emoji.replace(/[\\u{1f3fb}-\\u{1f3ff}]/u, '');\n\n\tif (emojiModifierBase.has(emoji.codePointAt(0)) && tone !== 'none') {\n\t\temoji += skinTones.get(tone);\n\t}\n\n\treturn emoji;\n};\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n"],"names":["el","module","exports","characters","char","entity","document","createElement","innerHTML","textContent","charCodeAt","length","trough","fns","pipeline","run","_len","arguments","values","Array","_key","middlewareIndex","callback","pop","TypeError","next","error","fn","index","_len2","output","_key2","undefined","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","result","push","done","apply","this","then","Error","_len4","_key4","value","wrap","use","middelware","parse","input","String","trim","split","stringify","join","require","StyleToObject","style","iterator","declaration","property","declarations","hasIterator","i","len","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","charRegex","NON_SPACING_MARK","fromCharCode","nonSpacingRegex","RegExp","normalizeCode","code","replace","normalizeName","test","slice","emojiData","Object","entries","emojilib","map","_ref","emoji","emojiCodesByName","Map","get","_ref2","codeOrName","assert3","emojiModifierBase","skinTones","tone","has","codePointAt","tab","space","trimLines","source","search","match","exec","last","lines","trimLine","start","end","startIndex","endIndex"],"sourceRoot":""}