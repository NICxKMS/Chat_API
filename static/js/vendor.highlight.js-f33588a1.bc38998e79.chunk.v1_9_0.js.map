{"version":3,"file":"static/js/vendor.highlight.js-f33588a1.bc38998e79.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/highlight.js/lib/languages/xml.js","../node_modules/highlight.js/lib/languages/yaml.js","../node_modules/highlight.js/lib/languages/xl.js","../node_modules/highlight.js/lib/languages/xquery.js","../node_modules/highlight.js/lib/languages/zephir.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = concat(/[A-Z_]/, optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'meta-keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'meta-string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /[^\\s\"'=<>`]+/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/,\n        end: /\\?>/,\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'style'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'script'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: concat(\n          /</,\n          lookahead(concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: concat(\n          /<\\//,\n          lookahead(concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n","/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  var LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  var URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  var KEY = {\n    className: 'attr',\n    variants: [\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n      { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' }, // double quoted keys\n      { begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' } // single quoted keys\n    ]\n  };\n\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { begin: /\\{\\{/, end: /\\}\\}/ }, // jinja templates Ansible\n      { begin: /%\\{/, end: /\\}/ } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      { begin: /'/, end: /'/ },\n      { begin: /\"/, end: /\"/ },\n      { begin: /\\S+/ }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  var CONTAINER_STRING = hljs.inherit(STRING, {\n    variants: [\n      { begin: /'/, end: /'/ },\n      { begin: /\"/, end: /\"/ },\n      { begin: /[^\\s,{}[\\]]+/ }\n    ]\n  });\n\n  var DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  var TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  var FRACTION_RE = '(\\\\.[0-9]*)?';\n  var ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  var TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  var VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  var OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  var ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  var MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: { literal: LITERALS }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b',\n      relevance: 0\n    },\n    OBJECT,\n    ARRAY,\n    STRING\n  ];\n\n  var VALUE_MODES = [...MODES];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: [ 'yml' ],\n    contains: MODES\n  };\n}\n\nmodule.exports = yaml;\n","/*\nLanguage: XL\nAuthor: Christophe de Dinechin <christophe@taodyne.com>\nDescription: An extensible programming language, based on parse tree rewriting\nWebsite: http://xlr.sf.net\n*/\n\nfunction xl(hljs) {\n  const BUILTIN_MODULES =\n    'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo ' +\n    'StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';\n\n  const XL_KEYWORDS = {\n    $pattern: /[a-zA-Z][a-zA-Z0-9_?]*/,\n    keyword:\n      'if then else do while until for loop import with is as where when by data constant ' +\n      'integer real text name boolean symbol infix prefix postfix block tree',\n    literal:\n      'true false nil',\n    built_in:\n      'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin ' +\n      'acos atan exp expm1 log log2 log10 log1p pi at text_length text_range ' +\n      'text_find text_replace contains page slide basic_slide title_slide ' +\n      'title subtitle fade_in fade_out fade_at clear_color color line_color ' +\n      'line_width texture_wrap texture_transform texture scale_?x scale_?y ' +\n      'scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y ' +\n      'rotate_?z? rectangle circle ellipse sphere path line_to move_to ' +\n      'quad_to curve_to theme background contents locally time mouse_?x ' +\n      'mouse_?y mouse_buttons ' +\n      BUILTIN_MODULES\n  };\n\n  const DOUBLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\"',\n    end: '\"',\n    illegal: '\\\\n'\n  };\n  const SINGLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\\'',\n    end: '\\'',\n    illegal: '\\\\n'\n  };\n  const LONG_TEXT = {\n    className: 'string',\n    begin: '<<',\n    end: '>>'\n  };\n  const BASED_NUMBER = {\n    className: 'number',\n    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?'\n  };\n  const IMPORT = {\n    beginKeywords: 'import',\n    end: '$',\n    keywords: XL_KEYWORDS,\n    contains: [ DOUBLE_QUOTE_TEXT ]\n  };\n  const FUNCTION_DEFINITION = {\n    className: 'function',\n    begin: /[a-z][^\\n]*->/,\n    returnBegin: true,\n    end: /->/,\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        starts: {\n          endsWithParent: true,\n          keywords: XL_KEYWORDS\n        }\n      })\n    ]\n  };\n  return {\n    name: 'XL',\n    aliases: [ 'tao' ],\n    keywords: XL_KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      DOUBLE_QUOTE_TEXT,\n      SINGLE_QUOTE_TEXT,\n      LONG_TEXT,\n      FUNCTION_DEFINITION,\n      IMPORT,\n      BASED_NUMBER,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = xl;\n","/*\nLanguage: XQuery\nAuthor: Dirk Kirsten <dk@basex.org>\nContributor: Duncan Paterson\nDescription: Supports XQuery 3.1 including XQuery Update 3, so also XPath (as it is a superset)\nRefactored to process xml constructor syntax and function-bodies. Added missing data-types, xpath operands, inbuilt functions, and query prologs\nWebsite: https://www.w3.org/XML/Query/\nCategory: functional\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xquery(_hljs) {\n  // see https://www.w3.org/TR/xquery/#id-terminal-delimitation\n  const KEYWORDS =\n    'module schema namespace boundary-space preserve no-preserve strip default collation base-uri ordering context decimal-format decimal-separator copy-namespaces empty-sequence except exponent-separator external grouping-separator inherit no-inherit lax minus-sign per-mille percent schema-attribute schema-element strict unordered zero-digit ' +\n    'declare import option function validate variable ' +\n    'for at in let where order group by return if then else ' +\n    'tumbling sliding window start when only end previous next stable ' +\n    'ascending descending allowing empty greatest least some every satisfies switch case typeswitch try catch ' +\n    'and or to union intersect instance of treat as castable cast map array ' +\n    'delete insert into replace value rename copy modify update';\n\n  // Node Types (sorted by inheritance)\n  // atomic types (sorted by inheritance)\n  const TYPE =\n    'item document-node node attribute document element comment namespace namespace-node processing-instruction text construction ' +\n    'xs:anyAtomicType xs:untypedAtomic xs:duration xs:time xs:decimal xs:float xs:double xs:gYearMonth xs:gYear xs:gMonthDay xs:gMonth xs:gDay xs:boolean xs:base64Binary xs:hexBinary xs:anyURI xs:QName xs:NOTATION xs:dateTime xs:dateTimeStamp xs:date xs:string xs:normalizedString xs:token xs:language xs:NMTOKEN xs:Name xs:NCName xs:ID xs:IDREF xs:ENTITY xs:integer xs:nonPositiveInteger xs:negativeInteger xs:long xs:int xs:short xs:byte xs:nonNegativeInteger xs:unisignedLong xs:unsignedInt xs:unsignedShort xs:unsignedByte xs:positiveInteger xs:yearMonthDuration xs:dayTimeDuration';\n\n  const LITERAL =\n    'eq ne lt le gt ge is ' +\n    'self:: child:: descendant:: descendant-or-self:: attribute:: following:: following-sibling:: parent:: ancestor:: ancestor-or-self:: preceding:: preceding-sibling:: ' +\n    'NaN';\n\n  // functions (TODO: find regex for op: without breaking build)\n  const BUILT_IN = {\n    className: 'built_in',\n    variants: [\n      {\n        begin: /\\barray:/,\n        end: /(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\\b/\n      },\n      {\n        begin: /\\bmap:/,\n        end: /(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\\b/\n      },\n      {\n        begin: /\\bmath:/,\n        end: /(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\\b/\n      },\n      {\n        begin: /\\bop:/,\n        end: /\\(/,\n        excludeEnd: true\n      },\n      {\n        begin: /\\bfn:/,\n        end: /\\(/,\n        excludeEnd: true\n      },\n      // do not highlight inbuilt strings as variable or xml element names\n      {\n        begin: /[^</$:'\"-]\\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\\b/\n      },\n      {\n        begin: /\\blocal:/,\n        end: /\\(/,\n        excludeEnd: true\n      },\n      {\n        begin: /\\bzip:/,\n        end: /(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\\b/\n      },\n      {\n        begin: /\\b(?:util|db|functx|app|xdmp|xmldb):/,\n        end: /\\(/,\n        excludeEnd: true\n      }\n    ]\n  };\n\n  const TITLE = {\n    className: 'title',\n    begin: /\\bxquery version \"[13]\\.[01]\"\\s?(?:encoding \".+\")?/,\n    end: /;/\n  };\n\n  const VAR = {\n    className: 'variable',\n    begin: /[$][\\w\\-:]+/\n  };\n\n  const NUMBER = {\n    className: 'number',\n    begin: /(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /\"/,\n        end: /\"/,\n        contains: [\n          {\n            begin: /\"\"/,\n            relevance: 0\n          }\n        ]\n      },\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [\n          {\n            begin: /''/,\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  };\n\n  const ANNOTATION = {\n    className: 'meta',\n    begin: /%[\\w\\-:]+/\n  };\n\n  const COMMENT = {\n    className: 'comment',\n    begin: /\\(:/,\n    end: /:\\)/,\n    relevance: 10,\n    contains: [\n      {\n        className: 'doctag',\n        begin: /@\\w+/\n      }\n    ]\n  };\n\n  // see https://www.w3.org/TR/xquery/#id-computedConstructors\n  // mocha: computed_inbuilt\n  // see https://www.regexpal.com/?fam=99749\n  const COMPUTED = {\n    beginKeywords: 'element attribute comment document processing-instruction',\n    end: /\\{/,\n    excludeEnd: true\n  };\n\n  // mocha: direct_method\n  const DIRECT = {\n    begin: /<([\\w._:-]+)(\\s+\\S*=('|\").*('|\"))?>/,\n    end: /(\\/[\\w._:-]+>)/,\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: /\\{/,\n        end: /\\}/,\n        subLanguage: 'xquery'\n      },\n      'self'\n    ]\n  };\n\n  const CONTAINS = [\n    VAR,\n    BUILT_IN,\n    STRING,\n    NUMBER,\n    COMMENT,\n    ANNOTATION,\n    TITLE,\n    COMPUTED,\n    DIRECT\n  ];\n\n  return {\n    name: 'XQuery',\n    aliases: [\n      'xpath',\n      'xq'\n    ],\n    case_insensitive: false,\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n    keywords: {\n      $pattern: /[a-zA-Z$][a-zA-Z0-9_:-]*/,\n      keyword: KEYWORDS,\n      type: TYPE,\n      literal: LITERAL\n    },\n    contains: CONTAINS\n  };\n}\n\nmodule.exports = xquery;\n","/*\n Language: Zephir\n Description: Zephir, an open source, high-level language designed to ease the creation and maintainability of extensions for PHP with a focus on type and memory safety.\n Author: Oleg Efimov <efimovov@gmail.com>\n Website: https://zephir-lang.com/en\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction zephir(hljs) {\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      hljs.inherit(hljs.APOS_STRING_MODE, {\n        illegal: null\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null\n      })\n    ]\n  };\n  const TITLE_MODE = hljs.UNDERSCORE_TITLE_MODE;\n  const NUMBER = {\n    variants: [\n      hljs.BINARY_NUMBER_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n  const KEYWORDS =\n    // classes and objects\n    'namespace class interface use extends ' +\n    'function return ' +\n    'abstract final public protected private static deprecated ' +\n    // error handling\n    'throw try catch Exception ' +\n    // keyword-ish things their website does NOT seem to highlight (in their own snippets)\n    // 'typeof fetch in ' +\n    // operators/helpers\n    'echo empty isset instanceof unset ' +\n    // assignment/variables\n    'let var new const self ' +\n    // control\n    'require ' +\n    'if else elseif switch case default ' +\n    'do while loop for continue break ' +\n    'likely unlikely ' +\n    // magic constants\n    // https://github.com/phalcon/zephir/blob/master/Library/Expression/Constants.php\n    '__LINE__ __FILE__ __DIR__ __FUNCTION__ __CLASS__ __TRAIT__ __METHOD__ __NAMESPACE__ ' +\n    // types - https://docs.zephir-lang.com/0.12/en/types\n    'array boolean float double integer object resource string ' +\n    'char long unsigned bool int uint ulong uchar ' +\n    // built-ins\n    'true false null undefined';\n\n  return {\n    name: 'Zephir',\n    aliases: [ 'zep' ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT(\n        /\\/\\*/,\n        /\\*\\//,\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: /@[A-Za-z]+/\n            }\n          ]\n        }\n      ),\n      {\n        className: 'string',\n        begin: /<<<['\"]?\\w+['\"]?$/,\n        end: /^\\w+;/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function fn',\n        end: /[;{]/,\n        excludeEnd: true,\n        illegal: /\\$|\\[|%/,\n        contains: [\n          TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface',\n        end: /\\{/,\n        excludeEnd: true,\n        illegal: /[:($\"]/,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace',\n        end: /;/,\n        illegal: /[.']/,\n        contains: [ TITLE_MODE ]\n      },\n      {\n        beginKeywords: 'use',\n        end: /;/,\n        contains: [ TITLE_MODE ]\n      },\n      {\n        begin: /=>/ // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n}\n\nmodule.exports = zephir;\n"],"names":["source","re","lookahead","concat","_len","arguments","length","args","Array","_key","map","x","join","either","_len2","_key2","module","exports","hljs","TAG_NAME_RE","XML_ENTITIES","className","begin","XML_META_KEYWORDS","contains","illegal","XML_META_PAR_KEYWORDS","inherit","end","APOS_META_STRING_MODE","APOS_STRING_MODE","QUOTE_META_STRING_MODE","QUOTE_STRING_MODE","TAG_INTERNALS","endsWithParent","relevance","endsParent","variants","name","aliases","case_insensitive","COMMENT","keywords","starts","returnEnd","subLanguage","LITERALS","URI_CHARACTERS","STRING","BACKSLASH_ESCAPE","CONTAINER_STRING","TIMESTAMP","VALUE_CONTAINER","excludeEnd","OBJECT","ARRAY","MODES","excludeBegin","UNDERSCORE_IDENT_RE","HASH_COMMENT_MODE","beginKeywords","literal","C_NUMBER_RE","VALUE_MODES","pop","push","XL_KEYWORDS","$pattern","keyword","built_in","DOUBLE_QUOTE_TEXT","IMPORT","FUNCTION_DEFINITION","returnBegin","TITLE_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","NUMBER_MODE","_hljs","type","UNDERSCORE_TITLE_MODE","NUMBER","BINARY_NUMBER_MODE","C_NUMBER_MODE","KEYWORDS"],"sourceRoot":""}