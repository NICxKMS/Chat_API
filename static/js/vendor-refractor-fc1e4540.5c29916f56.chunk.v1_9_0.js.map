{"version":3,"file":"static/js/vendor-refractor-fc1e4540.5c29916f56.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/refractor/lang/hoon.js","../node_modules/refractor/lang/hcl.js","../node_modules/refractor/lang/hsts.js","../node_modules/refractor/lang/hpkp.js","../node_modules/refractor/lang/hlsl.js","../node_modules/refractor/lang/http.js","../node_modules/refractor/lang/ichigojam.js"],"sourcesContent":["'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' + // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n"],"names":["hoon","Prism","languages","comment","pattern","greedy","string","constant","function","keyword","module","exports","displayName","aliases","hcl","heredoc","alias","inside","type","lookbehind","property","interpolation","number","punctuation","boolean","hsts","directive","operator","hpkp","refractorC","require","hlsl","register","extend","c","http","headerValueOf","name","RegExp","method","uri","header","source","csp","options","langs","httpLanguages","javascript","json","xml","html","css","plain","suffixTypes","getSuffixPattern","contentType","suffix","replace","insertBefore","ichigojam","label"],"sourceRoot":""}