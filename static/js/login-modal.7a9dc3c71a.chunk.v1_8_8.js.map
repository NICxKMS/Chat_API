{"version":3,"file":"static/js/login-modal.7a9dc3c71a.chunk.v1_8_8.js","mappings":"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","sources":["components/auth/LoginModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { IoMdClose } from 'react-icons/io';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaGithub } from 'react-icons/fa';\nimport Spinner from '../common/Spinner';\nimport styles from './LoginModal.module.css';\n// Assuming a Spinner component exists\n\n// Import icons using the correct paths\n// Icon for email/pass\n\nconst LoginModal = ({ onClose }) => {\n  const { setIsLoggingIn, error: authContextError } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Clear local error when auth context error changes (e.g., token fetch error)\n  useEffect(() => {\n    if (authContextError) {\n      setError(authContextError);\n    }\n  }, [authContextError]);\n\n  const handleSignIn = async (provider) => {\n    // Dynamically import Firebase auth to defer load\n    const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../../firebaseConfig');\n    const { signInWithPopup } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const auth = getFirebaseAuth();\n    if (!auth) {\n      setError(\"Firebase not initialized. Cannot sign in.\");\n      return;\n    }\n    setIsLoading(true);\n    setError(null); // Clear previous errors\n    try {\n      await signInWithPopup(auth, provider);\n      // onAuthStateChanged in AuthContext will handle the rest (closing modal, setting user state)\n      console.log(\"Popup sign-in successful.\");\n    } catch (err) {\n      console.error(\"Popup Sign-in Error:\", err);\n      // Customize error messages based on err.code\n      if (err.code === 'auth/popup-closed-by-user') {\n        console.log('Popup sign-in cancelled by user.');\n        // Close the modal as the user cancelled\n        setIsLoggingIn(false);\n        if (onClose) onClose();\n      } else if (err.code === 'auth/cancelled-popup-request') {\n        console.log('Popup sign-in cancelled (multiple requests).');\n        // Close the modal\n        setIsLoggingIn(false);\n        if (onClose) onClose();\n      } else if (err.code === 'auth/popup-blocked') {\n        setError('Popup blocked by browser. Please allow popups for this site.');\n        // Keep modal open to show the error in this case\n        setIsLoading(false);\n      } else {\n        setError(err.message || 'Failed to sign in. Please try again.');\n        // Keep modal open to show unexpected errors\n        setIsLoading(false);\n      }\n    }\n    // No finally block needed, loading is handled by success/error paths\n  };\n\n  const handleEmailSignIn = async (e) => {\n    e.preventDefault(); // Prevent form submission reload\n    const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../../firebaseConfig');\n    const { signInWithEmailAndPassword } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const auth = getFirebaseAuth();\n    if (!auth) {\n      setError(\"Firebase not initialized.\");\n      return;\n    }\n    if (!email || !password) {\n        setError(\"Please enter both email and password.\");\n        return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      // onAuthStateChanged handles the rest\n      console.log(\"Email/Password sign-in successful.\");\n    } catch (err) {\n      console.error(\"Email Sign-in Error:\", err);\n      setError(err.message || 'Failed to sign in with email.');\n      setIsLoading(false);\n    }\n  };\n\n  const handleEmailSignUp = async (e) => {\n    e.preventDefault(); // Prevent form submission reload\n    const { getFirebaseAuth } = await import(/* webpackChunkName: \"firebase-config\" */ '../../firebaseConfig');\n    const { createUserWithEmailAndPassword } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const auth = getFirebaseAuth();\n    if (!auth) {\n      setError(\"Firebase not initialized.\");\n      return;\n    }\n    if (!email || !password) {\n        setError(\"Please enter both email and password.\");\n        return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      // onAuthStateChanged handles the rest\n      console.log(\"Email/Password sign-up successful.\");\n    } catch (err) {\n      console.error(\"Email Sign-up Error:\", err);\n      setError(err.message || 'Failed to sign up with email.');\n      setIsLoading(false);\n    }\n  };\n\n  // Dynamically import GoogleAuthProvider to avoid bundling and missing reference\n  const handleGoogleSignIn = async () => {\n    const { GoogleAuthProvider } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const googleProvider = new GoogleAuthProvider();\n    handleSignIn(googleProvider);\n  };\n\n  // Dynamically import GithubAuthProvider to avoid missing reference\n  const handleGithubSignIn = async () => {\n    const { GithubAuthProvider } = await import(/* webpackChunkName: \"firebase-auth\" */ 'firebase/auth');\n    const githubProvider = new GithubAuthProvider();\n    handleSignIn(githubProvider);\n  };\n\n  const closeModal = () => {\n    // Only close if not currently in the middle of a sign-in attempt\n    if (!isLoading) {\n      setIsLoggingIn(false);\n      if (onClose) onClose();\n    }\n  };\n\n  return (\n    <div className={styles.LoginModal} onClick={closeModal}>\n      <div className={styles.LoginModal__modal} onClick={(e) => e.stopPropagation()}>\n        <button className={styles.LoginModal__closeButton} onClick={closeModal} aria-label=\"Close login\">\n          <IoMdClose />\n        </button>\n        <h2 className={styles.LoginModal__title}>Login / Sign Up</h2>\n        <p className={styles.LoginModal__subtitle}>Choose a provider to continue</p>\n\n        {isLoading && (\n          <div className={styles.LoginModal__spinnerContainer}> {/* Make spinner take full height when loading */}\n            <Spinner size=\"large\" />\n            <p>Connecting...</p>\n          </div>\n        )}\n\n        {!isLoading && (\n          // Email/Password form is now the default content when not loading\n          <form className={styles.LoginModal__emailForm} onSubmit={handleEmailSignIn}> {/* Added onSubmit */} \n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className={styles.LoginModal__inputField}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className={styles.LoginModal__inputField}\n            />\n            <div className={styles.LoginModal__emailButtonContainer}>\n              <button type=\"submit\" className={styles.LoginModal__emailButton} disabled={isLoading}>\n                Sign In\n              </button>\n              <button type=\"button\" onClick={handleEmailSignUp} className={`${styles.LoginModal__emailButton} ${styles.LoginModal__signUpButton}`} disabled={isLoading}>\n                Sign Up\n              </button>\n            </div>\n          </form>\n        )}\n\n        {/* Alternative Sign-in Providers (Icons) - Shown below email form when not loading */}\n        {!isLoading && (\n          <div className={styles.LoginModal__alternativeLoginContainer}>\n            <p className={styles.LoginModal__alternativeLoginText}>Or sign in with</p>\n            <div className={styles.LoginModal__providerIconContainer}>\n              <button\n                className={styles.LoginModal__providerIconButton}\n                onClick={handleGoogleSignIn}\n                disabled={isLoading}\n                title=\"Sign in with Google\"\n                aria-label=\"Sign in with Google\"\n              >\n                <FcGoogle />\n              </button>\n              <button\n                className={styles.LoginModal__providerIconButton}\n                onClick={handleGithubSignIn}\n                disabled={isLoading}\n                title=\"Sign in with GitHub\"\n                aria-label=\"Sign in with GitHub\"\n              >\n                <FaGithub />\n              </button>\n              {/* Add other provider icons here if needed */}\n            </div>\n          </div>\n        )}\n\n        {error && <p className={styles.LoginModal__error}>{error}</p>}\n\n        <p className={styles.LoginModal__footerText}>\n          By signing in, you agree to our imaginary Terms of Service.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginModal; "],"names":["_ref","onClose","setIsLoggingIn","error","authContextError","useAuth","isLoading","setIsLoading","useState","setError","email","setEmail","password","setPassword","useEffect","handleSignIn","async","getFirebaseAuth","signInWithPopup","auth","provider","err","code","message","closeModal","_jsx","className","styles","LoginModal","onClick","children","_jsxs","LoginModal__modal","e","stopPropagation","LoginModal__closeButton","IoMdClose","LoginModal__title","LoginModal__subtitle","LoginModal__spinnerContainer","Spinner","size","LoginModal__emailForm","onSubmit","preventDefault","signInWithEmailAndPassword","type","placeholder","value","onChange","target","required","LoginModal__inputField","LoginModal__emailButtonContainer","LoginModal__emailButton","disabled","createUserWithEmailAndPassword","LoginModal__signUpButton","LoginModal__alternativeLoginContainer","LoginModal__alternativeLoginText","LoginModal__providerIconContainer","LoginModal__providerIconButton","GoogleAuthProvider","googleProvider","title","FcGoogle","GithubAuthProvider","githubProvider","FaGithub","LoginModal__error","LoginModal__footerText"],"sourceRoot":""}