{"version":3,"file":"static/js/vendor.highlight.js-b1fef35a.5fda3e194c.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/highlight.js/lib/languages/elixir.js","../node_modules/highlight.js/lib/languages/erlang-repl.js","../node_modules/highlight.js/lib/languages/erb.js","../node_modules/highlight.js/lib/languages/erlang.js","../node_modules/highlight.js/lib/languages/fix.js","../node_modules/highlight.js/lib/languages/fortran.js","../node_modules/highlight.js/lib/languages/elm.js","../node_modules/highlight.js/lib/languages/flix.js","../node_modules/highlight.js/lib/languages/fsharp.js","../node_modules/highlight.js/lib/languages/excel.js"],"sourcesContent":["/*\nLanguage: Elixir\nAuthor: Josh Adams <josh@isotope11.com>\nDescription: language definition for Elixir source code files (.ex and .exs).  Based on ruby language support.\nCategory: functional\nWebsite: https://elixir-lang.org\n*/\n\n/** @type LanguageFn */\nfunction elixir(hljs) {\n  const ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(!|\\\\?)?';\n  const ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  const ELIXIR_KEYWORDS = {\n    $pattern: ELIXIR_IDENT_RE,\n    keyword: 'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: ELIXIR_KEYWORDS\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(\\\\.[0-9_]+([eE][-+]?[0-9]+)?)?)',\n    relevance: 0\n  };\n  const SIGIL_DELIMITERS = '[/|([{<\"\\']';\n  const LOWERCASE_SIGIL = {\n    className: 'string',\n    begin: '~[a-z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        endsParent: true,\n        contains: [\n          {\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ],\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/\n              },\n              {\n                begin: /'/,\n                end: /'/\n              },\n              {\n                begin: /\\//,\n                end: /\\//\n              },\n              {\n                begin: /\\|/,\n                end: /\\|/\n              },\n              {\n                begin: /\\(/,\n                end: /\\)/\n              },\n              {\n                begin: /\\[/,\n                end: /\\]/\n              },\n              {\n                begin: /\\{/,\n                end: /\\}/\n              },\n              {\n                begin: /</,\n                end: />/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n\n  const UPCASE_SIGIL = {\n    className: 'string',\n    begin: '~[A-Z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\\//,\n        end: /\\//\n      },\n      {\n        begin: /\\|/,\n        end: /\\|/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /</,\n        end: />/\n      }\n    ]\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/\n      },\n      {\n        begin: /'''/,\n        end: /'''/\n      },\n      {\n        begin: /~S\"\"\"/,\n        end: /\"\"\"/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S\"/,\n        end: /\"/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S'''/,\n        end: /'''/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S'/,\n        end: /'/,\n        contains: [] // override default\n      },\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      }\n    ]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro',\n    end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  const CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord',\n    end: /\\bdo\\b|$|;/\n  });\n  const ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    UPCASE_SIGIL,\n    LOWERCASE_SIGIL,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [\n        STRING,\n        {\n          begin: ELIXIR_METHOD_RE\n        }\n      ],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    NUMBER,\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          // to prevent false regex triggers for the division function:\n          // /:\n          begin: /\\/: (?=\\d+\\s*[,\\]])/,\n          relevance: 0,\n          contains: [NUMBER]\n        },\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Elixir',\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = elixir;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Erlang REPL\nAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\nWebsite: https://www.erlang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction erlangRepl(hljs) {\n  return {\n    name: 'Erlang REPL',\n    keywords: {\n      built_in:\n        'spawn spawn_link self',\n      keyword:\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n        'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: '^[0-9]+> ',\n        relevance: 10\n      },\n      hljs.COMMENT('%', '$'),\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        begin: concat(\n          /\\?(::)?/,\n          /([A-Z]\\w*)/, // at least one identifier\n          /((::)[A-Z]\\w*)*/ // perhaps more\n        )\n      },\n      {\n        begin: '->'\n      },\n      {\n        begin: 'ok'\n      },\n      {\n        begin: '!'\n      },\n      {\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n        relevance: 0\n      },\n      {\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = erlangRepl;\n","/*\nLanguage: ERB (Embedded Ruby)\nRequires: xml.js, ruby.js\nAuthor: Lucas Mazza <lucastmazza@gmail.com>\nContributors: Kassio Borges <kassioborgesm@gmail.com>\nDescription: \"Bridge\" language defining fragments of Ruby in HTML within <% .. %>\nWebsite: https://ruby-doc.org/stdlib-2.6.5/libdoc/erb/rdoc/ERB.html\nCategory: template\n*/\n\n/** @type LanguageFn */\nfunction erb(hljs) {\n  return {\n    name: 'ERB',\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT('<%#', '%>'),\n      {\n        begin: '<%[%=-]?',\n        end: '[%-]?%>',\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n}\n\nmodule.exports = erb;\n","/*\nLanguage: Erlang\nDescription: Erlang is a general-purpose functional language, with strict evaluation, single assignment, and dynamic typing.\nAuthor: Nikolay Zakharov <nikolay.desh@gmail.com>, Dmitry Kovega <arhibot@gmail.com>\nWebsite: https://www.erlang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction erlang(hljs) {\n  const BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n  const FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n  const ERLANG_RESERVED = {\n    keyword:\n      'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' +\n      'let not of orelse|10 query receive rem try when xor',\n    literal:\n      'false true'\n  };\n\n  const COMMENT = hljs.COMMENT('%', '$');\n  const NUMBER = {\n    className: 'number',\n    begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n  const NAMED_FUN = {\n    begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+'\n  };\n  const FUNCTION_CALL = {\n    begin: FUNCTION_NAME_RE + '\\\\(',\n    end: '\\\\)',\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        begin: FUNCTION_NAME_RE,\n        relevance: 0\n      },\n      {\n        begin: '\\\\(',\n        end: '\\\\)',\n        endsWithParent: true,\n        returnEnd: true,\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n  const TUPLE = {\n    begin: /\\{/,\n    end: /\\}/,\n    relevance: 0\n    // \"contains\" defined later\n  };\n  const VAR1 = {\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n    relevance: 0\n  };\n  const VAR2 = {\n    begin: '[A-Z][a-zA-Z0-9_]*',\n    relevance: 0\n  };\n  const RECORD_ACCESS = {\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0,\n    returnBegin: true,\n    contains: [\n      {\n        begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /\\{/,\n        end: /\\}/,\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n\n  const BLOCK_STATEMENTS = {\n    beginKeywords: 'fun receive if try case',\n    end: 'end',\n    keywords: ERLANG_RESERVED\n  };\n  BLOCK_STATEMENTS.contains = [\n    COMMENT,\n    NAMED_FUN,\n    hljs.inherit(hljs.APOS_STRING_MODE, {\n      className: ''\n    }),\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1,\n    VAR2,\n    RECORD_ACCESS\n  ];\n\n  const BASIC_MODES = [\n    COMMENT,\n    NAMED_FUN,\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1,\n    VAR2,\n    RECORD_ACCESS\n  ];\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n  TUPLE.contains = BASIC_MODES;\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n\n  const DIRECTIVES = [\n    \"-module\",\n    \"-record\",\n    \"-undef\",\n    \"-export\",\n    \"-ifdef\",\n    \"-ifndef\",\n    \"-author\",\n    \"-copyright\",\n    \"-doc\",\n    \"-vsn\",\n    \"-import\",\n    \"-include\",\n    \"-include_lib\",\n    \"-compile\",\n    \"-define\",\n    \"-else\",\n    \"-endif\",\n    \"-file\",\n    \"-behaviour\",\n    \"-behavior\",\n    \"-spec\"\n  ];\n\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: BASIC_MODES\n  };\n  return {\n    name: 'Erlang',\n    aliases: ['erl'],\n    keywords: ERLANG_RESERVED,\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n    contains: [\n      {\n        className: 'function',\n        begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(',\n        end: '->',\n        returnBegin: true,\n        illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: BASIC_ATOM_RE\n          })\n        ],\n        starts: {\n          end: ';|\\\\.',\n          keywords: ERLANG_RESERVED,\n          contains: BASIC_MODES\n        }\n      },\n      COMMENT,\n      {\n        begin: '^-',\n        end: '\\\\.',\n        relevance: 0,\n        excludeEnd: true,\n        returnBegin: true,\n        keywords: {\n          $pattern: '-' + hljs.IDENT_RE,\n          keyword: DIRECTIVES.map(x => `${x}|1.5`).join(\" \")\n        },\n        contains: [PARAMS]\n      },\n      NUMBER,\n      hljs.QUOTE_STRING_MODE,\n      RECORD_ACCESS,\n      VAR1,\n      VAR2,\n      TUPLE,\n      {\n        begin: /\\.$/\n      } // relevance booster\n    ]\n  };\n}\n\nmodule.exports = erlang;\n","/*\nLanguage: FIX\nAuthor: Brent Bradbury <brent@brentium.com>\n*/\n\n/** @type LanguageFn */\nfunction fix(hljs) {\n  return {\n    name: 'FIX',\n    contains: [{\n      begin: /[^\\u2401\\u0001]+/,\n      end: /[\\u2401\\u0001]/,\n      excludeEnd: true,\n      returnBegin: true,\n      returnEnd: false,\n      contains: [\n        {\n          begin: /([^\\u2401\\u0001=]+)/,\n          end: /=([^\\u2401\\u0001=]+)/,\n          returnEnd: true,\n          returnBegin: false,\n          className: 'attr'\n        },\n        {\n          begin: /=/,\n          end: /([\\u2401\\u0001])/,\n          excludeEnd: true,\n          excludeBegin: true,\n          className: 'string'\n        }\n      ]\n    }],\n    case_insensitive: true\n  };\n}\n\nmodule.exports = fix;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Fortran\nAuthor: Anthony Scemama <scemama@irsamc.ups-tlse.fr>\nWebsite: https://en.wikipedia.org/wiki/Fortran\nCategory: scientific\n*/\n\n/** @type LanguageFn */\nfunction fortran(hljs) {\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)'\n  };\n\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('!', '$', {\n        relevance: 0\n      }),\n      // allow FORTRAN 77 style comments\n      hljs.COMMENT('^C[ ]', '$', {\n        relevance: 0\n      }),\n      hljs.COMMENT('^C$', '$', {\n        relevance: 0\n      })\n    ]\n  };\n\n  // regex in both fortran and irpf90 should match\n  const OPTIONAL_NUMBER_SUFFIX = /(_[a-z_\\d]+)?/;\n  const OPTIONAL_NUMBER_EXP = /([de][+-]?\\d+)?/;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: concat(/\\b\\d+/, /\\.(\\d*)/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\n      },\n      {\n        begin: concat(/\\b\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\n      },\n      {\n        begin: concat(/\\.\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\n      }\n    ],\n    relevance: 0\n  };\n\n  const FUNCTION_DEF = {\n    className: 'function',\n    beginKeywords: 'subroutine function program',\n    illegal: '[${=\\\\n]',\n    contains: [\n      hljs.UNDERSCORE_TITLE_MODE,\n      PARAMS\n    ]\n  };\n\n  const STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  const KEYWORDS = {\n    literal: '.False. .True.',\n    keyword: 'kind do concurrent local shared while private call intrinsic where elsewhere ' +\n      'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then block endblock endassociate ' +\n      'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +\n      'goto save else use module select case ' +\n      'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +\n      'continue format pause cycle exit ' +\n      'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +\n      'synchronous nopass non_overridable pass protected volatile abstract extends import ' +\n      'non_intrinsic value deferred generic final enumerator class associate bind enum ' +\n      'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +\n      'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +\n      'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +\n      'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +\n      'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +\n      'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +\n      'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' +\n      'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure impure ' +\n      'integer real character complex logical codimension dimension allocatable|10 parameter ' +\n      'external implicit|10 none double precision assign intent optional pointer ' +\n      'target in out common equivalence data',\n    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +\n      'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +\n      'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +\n      'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +\n      'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +\n      'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +\n      'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +\n      'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +\n      'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +\n      'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +\n      'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +\n      'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +\n      'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +\n      'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of ' +\n      'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +\n      'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +\n      'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +\n      'num_images parity popcnt poppar shifta shiftl shiftr this_image sync change team co_broadcast co_max co_min co_sum co_reduce'\n  };\n  return {\n    name: 'Fortran',\n    case_insensitive: true,\n    aliases: [\n      'f90',\n      'f95'\n    ],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [\n      STRING,\n      FUNCTION_DEF,\n      // allow `C = value` for assignments so they aren't misdetected\n      // as Fortran 77 style comments\n      {\n        begin: /^C\\s*=(?!=)/,\n        relevance: 0\n      },\n      COMMENT,\n      NUMBER\n    ]\n  };\n}\n\nmodule.exports = fortran;\n","/*\nLanguage: Elm\nAuthor: Janis Voigtlaender <janis.voigtlaender@gmail.com>\nWebsite: https://elm-lang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction elm(hljs) {\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        /\\{-/,\n        /-\\}/,\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  const CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n\n  return {\n    name: 'Elm',\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module',\n        end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import',\n        end: '$',\n        keywords: 'import as exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type',\n        end: '$',\n        keywords: 'type alias',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: 'port',\n        end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n\n      CHARACTER,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '^[_a-z][\\\\w\\']*'\n      }),\n      COMMENT,\n\n      {\n        begin: '->|<-'\n      } // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n}\n\nmodule.exports = elm;\n","/*\n Language: Flix\n Category: functional\n Author: Magnus Madsen <mmadsen@uwaterloo.ca>\n Website: https://flix.dev/\n */\n\n /** @type LanguageFn */\nfunction flix(hljs) {\n  const CHAR = {\n    className: 'string',\n    begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n  };\n\n  const STRING = {\n    className: 'string',\n    variants: [{\n      begin: '\"',\n      end: '\"'\n    }]\n  };\n\n  const NAME = {\n    className: 'title',\n    relevance: 0,\n    begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/\n  };\n\n  const METHOD = {\n    className: 'function',\n    beginKeywords: 'def',\n    end: /[:={\\[(\\n;]/,\n    excludeEnd: true,\n    contains: [NAME]\n  };\n\n  return {\n    name: 'Flix',\n    keywords: {\n      literal: 'true false',\n      keyword: 'case class def else enum if impl import in lat rel index let match namespace switch type yield with'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      CHAR,\n      STRING,\n      METHOD,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = flix;\n","/*\nLanguage: F#\nAuthor: Jonas Follesø <jonas@follesoe.no>\nContributors: Troy Kershaw <hello@troykershaw.com>, Henrik Feldt <henrik@haf.se>\nWebsite: https://docs.microsoft.com/en-us/dotnet/fsharp/\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction fsharp(hljs) {\n  const TYPEPARAM = {\n    begin: '<',\n    end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: /'[a-zA-Z0-9_]+/\n      })\n    ]\n  };\n\n  return {\n    name: 'F#',\n    aliases: ['fs'],\n    keywords:\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [\n      {\n        // monad builder keywords (matches before non-bang kws)\n        className: 'keyword',\n        begin: /\\b(yield|return|let|do)!/\n      },\n      {\n        className: 'string',\n        begin: '@\"',\n        end: '\"',\n        contains: [\n          {\n            begin: '\"\"'\n          }\n        ]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"',\n        end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*(\\\\s)', '\\\\*\\\\)', {\n        contains: [\"self\"]\n      }),\n      {\n        className: 'class',\n        beginKeywords: 'type',\n        end: '\\\\(|=|$',\n        excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[<',\n        end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null\n      }),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = fsharp;\n","/*\nLanguage: Excel formulae\nAuthor: Victor Zhou <OiCMudkips@users.noreply.github.com>\nDescription: Excel formulae\nWebsite: https://products.office.com/en-us/excel/\n*/\n\n/** @type LanguageFn */\nfunction excel(hljs) {\n  return {\n    name: 'Excel formulae',\n    aliases: [\n      'xlsx',\n      'xls'\n    ],\n    case_insensitive: true,\n    // built-in functions imported from https://web.archive.org/web/20160513042710/https://support.office.com/en-us/article/Excel-functions-alphabetical-b3944572-255d-4efb-bb96-c6d90033e188\n    keywords: {\n      $pattern: /[a-zA-Z][\\w\\.]*/,\n      built_in: 'ABS ACCRINT ACCRINTM ACOS ACOSH ACOT ACOTH AGGREGATE ADDRESS AMORDEGRC AMORLINC AND ARABIC AREAS ASC ASIN ASINH ATAN ATAN2 ATANH AVEDEV AVERAGE AVERAGEA AVERAGEIF AVERAGEIFS BAHTTEXT BASE BESSELI BESSELJ BESSELK BESSELY BETADIST BETA.DIST BETAINV BETA.INV BIN2DEC BIN2HEX BIN2OCT BINOMDIST BINOM.DIST BINOM.DIST.RANGE BINOM.INV BITAND BITLSHIFT BITOR BITRSHIFT BITXOR CALL CEILING CEILING.MATH CEILING.PRECISE CELL CHAR CHIDIST CHIINV CHITEST CHISQ.DIST CHISQ.DIST.RT CHISQ.INV CHISQ.INV.RT CHISQ.TEST CHOOSE CLEAN CODE COLUMN COLUMNS COMBIN COMBINA COMPLEX CONCAT CONCATENATE CONFIDENCE CONFIDENCE.NORM CONFIDENCE.T CONVERT CORREL COS COSH COT COTH COUNT COUNTA COUNTBLANK COUNTIF COUNTIFS COUPDAYBS COUPDAYS COUPDAYSNC COUPNCD COUPNUM COUPPCD COVAR COVARIANCE.P COVARIANCE.S CRITBINOM CSC CSCH CUBEKPIMEMBER CUBEMEMBER CUBEMEMBERPROPERTY CUBERANKEDMEMBER CUBESET CUBESETCOUNT CUBEVALUE CUMIPMT CUMPRINC DATE DATEDIF DATEVALUE DAVERAGE DAY DAYS DAYS360 DB DBCS DCOUNT DCOUNTA DDB DEC2BIN DEC2HEX DEC2OCT DECIMAL DEGREES DELTA DEVSQ DGET DISC DMAX DMIN DOLLAR DOLLARDE DOLLARFR DPRODUCT DSTDEV DSTDEVP DSUM DURATION DVAR DVARP EDATE EFFECT ENCODEURL EOMONTH ERF ERF.PRECISE ERFC ERFC.PRECISE ERROR.TYPE EUROCONVERT EVEN EXACT EXP EXPON.DIST EXPONDIST FACT FACTDOUBLE FALSE|0 F.DIST FDIST F.DIST.RT FILTERXML FIND FINDB F.INV F.INV.RT FINV FISHER FISHERINV FIXED FLOOR FLOOR.MATH FLOOR.PRECISE FORECAST FORECAST.ETS FORECAST.ETS.CONFINT FORECAST.ETS.SEASONALITY FORECAST.ETS.STAT FORECAST.LINEAR FORMULATEXT FREQUENCY F.TEST FTEST FV FVSCHEDULE GAMMA GAMMA.DIST GAMMADIST GAMMA.INV GAMMAINV GAMMALN GAMMALN.PRECISE GAUSS GCD GEOMEAN GESTEP GETPIVOTDATA GROWTH HARMEAN HEX2BIN HEX2DEC HEX2OCT HLOOKUP HOUR HYPERLINK HYPGEOM.DIST HYPGEOMDIST IF IFERROR IFNA IFS IMABS IMAGINARY IMARGUMENT IMCONJUGATE IMCOS IMCOSH IMCOT IMCSC IMCSCH IMDIV IMEXP IMLN IMLOG10 IMLOG2 IMPOWER IMPRODUCT IMREAL IMSEC IMSECH IMSIN IMSINH IMSQRT IMSUB IMSUM IMTAN INDEX INDIRECT INFO INT INTERCEPT INTRATE IPMT IRR ISBLANK ISERR ISERROR ISEVEN ISFORMULA ISLOGICAL ISNA ISNONTEXT ISNUMBER ISODD ISREF ISTEXT ISO.CEILING ISOWEEKNUM ISPMT JIS KURT LARGE LCM LEFT LEFTB LEN LENB LINEST LN LOG LOG10 LOGEST LOGINV LOGNORM.DIST LOGNORMDIST LOGNORM.INV LOOKUP LOWER MATCH MAX MAXA MAXIFS MDETERM MDURATION MEDIAN MID MIDBs MIN MINIFS MINA MINUTE MINVERSE MIRR MMULT MOD MODE MODE.MULT MODE.SNGL MONTH MROUND MULTINOMIAL MUNIT N NA NEGBINOM.DIST NEGBINOMDIST NETWORKDAYS NETWORKDAYS.INTL NOMINAL NORM.DIST NORMDIST NORMINV NORM.INV NORM.S.DIST NORMSDIST NORM.S.INV NORMSINV NOT NOW NPER NPV NUMBERVALUE OCT2BIN OCT2DEC OCT2HEX ODD ODDFPRICE ODDFYIELD ODDLPRICE ODDLYIELD OFFSET OR PDURATION PEARSON PERCENTILE.EXC PERCENTILE.INC PERCENTILE PERCENTRANK.EXC PERCENTRANK.INC PERCENTRANK PERMUT PERMUTATIONA PHI PHONETIC PI PMT POISSON.DIST POISSON POWER PPMT PRICE PRICEDISC PRICEMAT PROB PRODUCT PROPER PV QUARTILE QUARTILE.EXC QUARTILE.INC QUOTIENT RADIANS RAND RANDBETWEEN RANK.AVG RANK.EQ RANK RATE RECEIVED REGISTER.ID REPLACE REPLACEB REPT RIGHT RIGHTB ROMAN ROUND ROUNDDOWN ROUNDUP ROW ROWS RRI RSQ RTD SEARCH SEARCHB SEC SECH SECOND SERIESSUM SHEET SHEETS SIGN SIN SINH SKEW SKEW.P SLN SLOPE SMALL SQL.REQUEST SQRT SQRTPI STANDARDIZE STDEV STDEV.P STDEV.S STDEVA STDEVP STDEVPA STEYX SUBSTITUTE SUBTOTAL SUM SUMIF SUMIFS SUMPRODUCT SUMSQ SUMX2MY2 SUMX2PY2 SUMXMY2 SWITCH SYD T TAN TANH TBILLEQ TBILLPRICE TBILLYIELD T.DIST T.DIST.2T T.DIST.RT TDIST TEXT TEXTJOIN TIME TIMEVALUE T.INV T.INV.2T TINV TODAY TRANSPOSE TREND TRIM TRIMMEAN TRUE|0 TRUNC T.TEST TTEST TYPE UNICHAR UNICODE UPPER VALUE VAR VAR.P VAR.S VARA VARP VARPA VDB VLOOKUP WEBSERVICE WEEKDAY WEEKNUM WEIBULL WEIBULL.DIST WORKDAY WORKDAY.INTL XIRR XNPV XOR YEAR YEARFRAC YIELD YIELDDISC YIELDMAT Z.TEST ZTEST'\n    },\n    contains: [\n      {\n        /* matches a beginning equal sign found in Excel formula examples */\n        begin: /^=/,\n        end: /[^=]/,\n        returnEnd: true,\n        illegal: /=/, /* only allow single equal sign at front of line */\n        relevance: 10\n      },\n      /* technically, there can be more than 2 letters in column names, but this prevents conflict with some keywords */\n      {\n        /* matches a reference to a single cell */\n        className: 'symbol',\n        begin: /\\b[A-Z]{1,2}\\d+\\b/,\n        end: /[^\\d]/,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        /* matches a reference to a range of cells */\n        className: 'symbol',\n        begin: /[A-Z]{0,2}\\d*:[A-Z]{0,2}\\d*/,\n        relevance: 0\n      },\n      hljs.BACKSLASH_ESCAPE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE + '(%)?',\n        relevance: 0\n      },\n      /* Excel formula comments are done by putting the comment in a function call to N() */\n      hljs.COMMENT(/\\bN\\(/, /\\)/,\n        {\n          excludeBegin: true,\n          excludeEnd: true,\n          illegal: /\\n/\n        })\n    ]\n  };\n}\n\nmodule.exports = excel;\n"],"names":["module","exports","hljs","ELIXIR_IDENT_RE","ELIXIR_KEYWORDS","$pattern","keyword","SUBST","className","begin","end","keywords","NUMBER","relevance","SIGIL_DELIMITERS","LOWERCASE_SIGIL","contains","endsParent","BACKSLASH_ESCAPE","variants","UPCASE_SIGIL","STRING","FUNCTION","beginKeywords","inherit","TITLE_MODE","CLASS","ELIXIR_DEFAULT_CONTAINS","HASH_COMMENT_MODE","RE_STARTERS_RE","illegal","name","concat","_len","arguments","length","args","Array","_key","map","x","source","re","join","built_in","COMMENT","APOS_STRING_MODE","QUOTE_STRING_MODE","subLanguage","excludeBegin","excludeEnd","BASIC_ATOM_RE","FUNCTION_NAME_RE","ERLANG_RESERVED","literal","NAMED_FUN","FUNCTION_CALL","returnBegin","endsWithParent","returnEnd","TUPLE","VAR1","VAR2","RECORD_ACCESS","UNDERSCORE_IDENT_RE","BLOCK_STATEMENTS","BASIC_MODES","PARAMS","aliases","starts","IDENT_RE","case_insensitive","OPTIONAL_NUMBER_SUFFIX","OPTIONAL_NUMBER_EXP","FUNCTION_DEF","UNDERSCORE_TITLE_MODE","CONSTRUCTOR","LIST","C_NUMBER_MODE","METHOD","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","TYPEPARAM","NUMBER_RE"],"sourceRoot":""}