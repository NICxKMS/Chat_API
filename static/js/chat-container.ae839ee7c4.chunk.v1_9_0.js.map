{"version":3,"file":"static/js/chat-container.ae839ee7c4.chunk.v1_9_0.js","mappings":"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","sources":["hooks/useChatLogic.js","components/chat/ChatContainer/index.js","../node_modules/lodash.throttle/index.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useChatState } from '../contexts/ChatStateContext';\nimport { useChatControl } from '../contexts/ChatControlContext';\nimport { useModel } from '../contexts/ModelContext';\nimport { useSettings } from '../contexts/SettingsContext';\n\n// Helper to generate unique IDs\nconst generateUniqueId = () => {\n  return `msg_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n};\n\n/**\n * Custom Hook for Chat Container Logic\n * Encapsulates state management, API calls, and event handlers \n * related to the chat interface.\n */\nexport const useChatLogic = () => {\n  const {\n    chatHistory,\n    isWaitingForResponse,\n    error,\n    currentMessageMetrics: metrics\n  } = useChatState();\n  const { sendMessage: submitMessage, clearChat: resetChat, downloadChatHistory } = useChatControl();\n  \n  const { selectedModel } = useModel();\n  const { settings } = useSettings();\n  \n  // Enhanced function to handle sending messages, including edits\n  const handleSendMessage = useCallback(async (message, editedMessage = null) => {\n    const isEditing = !!editedMessage;\n    \n    // Handle both string and array payloads for content validation\n    const messageContent = Array.isArray(message) \n      ? message.map(part => part.type === 'text' ? part.text : '').join(' ').trim()\n      : message;\n\n    if (!messageContent && !Array.isArray(message)) return;\n    if (!selectedModel) return;\n    \n    try {\n      if (isEditing) {\n        // Get or create unique identifier for the message\n        const editMsgId = editedMessage.uniqueId || editedMessage.id || editedMessage.timestamp;\n        // Find the index of the message being edited with a single pass\n        const editIndex = chatHistory.findIndex(msg =>\n          [msg.uniqueId, msg.id, msg.timestamp].includes(editMsgId) ||\n          (typeof msg.content === 'string' && msg.content === editedMessage.content && msg.role === 'user')\n        );\n        if (editIndex === -1) {\n          return;\n        }\n        // Ensure the message to be submitted has the correct uniqueId\n        const finalMessage = Array.isArray(message) ? message : { type: 'text', text: message };\n        \n        // Add uniqueId to message\n        if (Array.isArray(finalMessage)) {\n          finalMessage.uniqueId = editMsgId;\n        } else {\n          finalMessage.uniqueId = editMsgId;\n        }\n        \n        // Call the submitMessage function with the truncated history index\n        await submitMessage(finalMessage, editIndex);\n      } else {\n        // For new messages, generate a unique ID\n        const uniqueId = generateUniqueId();\n        \n        // Add uniqueId to new message\n        const finalMessage = Array.isArray(message) \n          ? message.map(part => ({...part, uniqueId}))\n          : message;\n          \n        if (!Array.isArray(finalMessage)) {\n          finalMessage.uniqueId = uniqueId;\n        }\n        \n        // Normal message submission with uniqueId\n        await submitMessage(finalMessage);\n      }\n    } catch (err) {\n      console.error(`Error ${isEditing ? 'editing' : 'submitting'} message:`, err);\n    }\n  }, [selectedModel, submitMessage, chatHistory]);\n\n  // Return values needed by the ChatContainer component\n  return {\n    chatHistory,\n    isWaitingForResponse,\n    error,\n    metrics,\n    selectedModel,\n    settings,\n    handleSendMessage,\n    resetChat, \n    downloadChatHistory,\n  };\n}; ","import { memo, lazy, useRef, useEffect, useState, useCallback, useMemo, Suspense } from 'react';\nimport { useChatLogic } from '../../../hooks/useChatLogic';\nimport { ChevronDownIcon } from '@primer/octicons-react';\nimport styles from './ChatContainer.module.css';\nimport throttle from 'lodash.throttle';\nimport PropTypes from 'prop-types';\n\n// Lazy-loaded components\nconst MessageList = lazy(() => import(/* webpackChunkName: \"chat-messagelist\" */ '../MessageList'));\nconst ChatInput = lazy(() => import(/* webpackChunkName: \"chat-input\" */ '../ChatInput'));\nconst GlobalMetricsBar = lazy(() => import(/* webpackChunkName: \"chat-globalmetrics\" */ '../GlobalMetricsBar'));\nconst ModelSelectorButton = lazy(() => import(/* webpackChunkName: \"model-selector-button\" */ '../../models/ModelSelectorButton'));\n\n/**\n * Main chat container component\n */\nconst ChatContainer = memo(({ \n  selectedModel: passedSelectedModel,\n  isLoadingModels, \n  toggleModelSelector,\n  onToggleSettings,\n  isSidebarOpen,\n  isSettingsOpen,\n  isModelSelectorOpen\n}) => {\n  const {\n    chatHistory,\n    isWaitingForResponse,\n    error,\n    metrics, \n    selectedModel: modelFromLogic,\n    handleSendMessage,\n  } = useChatLogic();\n\n  // Add state to track which message is being edited\n  const [editingMessage, setEditingMessage] = useState(null);\n\n  const messageListRef = useRef(null);\n  const scrollContainerRef = useRef(null);\n  const containerRef = useRef(null);\n  const isActiveChat = chatHistory.length > 0;\n  const [showScrollToBottomButton, setShowScrollToBottomButton] = useState(false);\n  const prevWaitingForResponse = useRef(isWaitingForResponse);\n\n  // === Performance-tuned handlers ===\n  // Smooth scroll to bottom, memoized\n  const scrollToBottom = useCallback((behavior = 'smooth') => {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.scrollTo({ top: scrollContainerRef.current.scrollHeight, behavior });\n      setShowScrollToBottomButton(false);\n    }\n  }, []);\n\n  // Scroll handler for showing/hiding the scroll-to-bottom button, throttled\n  const handleScroll = useCallback(() => {\n    const container = scrollContainerRef.current;\n    if (!container) return;\n    const scrollThreshold = 10;\n    const atBottom = container.scrollHeight - container.scrollTop - container.clientHeight < scrollThreshold;\n    setShowScrollToBottomButton(!atBottom);\n  }, []);\n  const throttledHandleScroll = useMemo(\n    () => throttle(handleScroll, 100),\n    [handleScroll]\n  );\n\n  // Focus input helper, memoized\n  const focusInputField = useCallback(() => {\n    // Use a timeout to ensure the component is fully rendered and mounted\n    setTimeout(() => {\n      // Try to find the textarea within the ChatInput component\n      const inputField = document.querySelector('textarea.'+styles.chatInput) || \n                         document.querySelector('textarea[aria-label=\"Chat message input\"]');\n      if (inputField) {\n        inputField.focus();\n      }\n    }, 100);\n  }, []);\n\n  // Focus the input field when the component is mounted\n  useEffect(() => {\n    focusInputField();\n  }, [focusInputField]);\n\n  // Focus input when response is completed, only if UI elements aren't open\n  useEffect(() => {\n    // Check if response has just completed (was waiting, now not waiting)\n    if (prevWaitingForResponse.current && !isWaitingForResponse) {\n      // Only focus if no UI elements are open\n      const noUIElementsOpen = !isSidebarOpen && !isSettingsOpen && !isModelSelectorOpen && !editingMessage;\n      \n      if (noUIElementsOpen) {\n        focusInputField();\n      }\n    }\n    \n    // Update the ref for the next check\n    prevWaitingForResponse.current = isWaitingForResponse;\n  }, [isWaitingForResponse, isSidebarOpen, isSettingsOpen, isModelSelectorOpen, editingMessage, focusInputField]);\n\n  // Effect to handle manual scrolling by the user (NOW MANAGES BUTTON VISIBILITY)\n  useEffect(() => {\n    const container = scrollContainerRef.current;\n    if (!container) return;\n    // Initial check\n    throttledHandleScroll();\n    container.addEventListener('scroll', throttledHandleScroll, { passive: true });\n    return () => {\n      container.removeEventListener('scroll', throttledHandleScroll);\n      throttledHandleScroll.cancel();\n    };\n  }, [throttledHandleScroll]);\n\n  // Effect to handle manual scrolling by the user (NOW MANAGES BUTTON VISIBILITY)\n  useEffect(() => {\n    const container = scrollContainerRef.current;\n    if (!container) return;\n\n    const handleScroll = () => {\n      const scrollThreshold = 10; // Pixels from bottom to consider \"at bottom\"\n      const atBottom = container.scrollHeight - container.scrollTop - container.clientHeight < scrollThreshold;\n      // Show the button if user is NOT at the bottom\n      setShowScrollToBottomButton(!atBottom);\n    };\n\n    // Run handler once initially to set correct state\n    handleScroll();\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    return () => container.removeEventListener('scroll', handleScroll);\n\n  }, [showScrollToBottomButton]); // Dependency helps re-attach listener if needed, though primary logic is inside\n\n  // Need another effect to check scroll position when chatHistory length changes,\n  // as new content might make the button necessary even if user didn't scroll.\n  useEffect(() => {\n    // React to new messages by re-checking scroll only once after DOM update\n    const timeout = setTimeout(() => throttledHandleScroll(), 100);\n    return () => clearTimeout(timeout);\n  }, [chatHistory, throttledHandleScroll]);\n\n  // Use the selected model passed down for the button, but model from logic elsewhere\n  const displayModelName = passedSelectedModel?.name;\n  const displayProviderName = passedSelectedModel?.provider;\n\n  // Handle edit message request from a message\n  const handleEditMessage = useCallback((message) => {\n    // Can't edit while waiting for response\n    if (isWaitingForResponse) return;\n    setEditingMessage(message);\n    // Scroll to input area if needed\n    setTimeout(() => {\n      const inputArea = document.querySelector(`.${styles.ChatContainer__fixedInputArea}`);\n      if (inputArea) {\n        // inputArea.scrollIntoView({ behavior: 'smooth' }); // Commented out to prevent scroll\n      }\n    }, 100);\n  }, [isWaitingForResponse]);\n\n  // Handle cancel edit\n  const handleCancelEdit = useCallback(() => {\n    setEditingMessage(null);\n  }, []);\n\n  // Disable editing if the model starts responding\n  useEffect(() => {\n    if (isWaitingForResponse && editingMessage) {\n      setEditingMessage(null);\n    }\n  }, [isWaitingForResponse, editingMessage]);\n\n  // Classes for the main container\n  const chatContainerClasses = `${styles.ChatContainer} ${isActiveChat ? styles['ChatContainer--activeChat'] : styles['ChatContainer--emptyChat']} ${editingMessage ? styles['ChatContainer--editingMode'] : ''}`;\n\n  // Helper function to render the input area contents\n  const renderInputAreaContents = (isFixedLayout) => {\n    // Determine if it's the initial chat state\n    const isInitialChat = !isActiveChat;\n\n    return (\n      <>\n        {/* Global Metrics: Only show when fixed */}\n        {isFixedLayout && !editingMessage && (\n          <Suspense fallback={<div className={styles.globalMetricsPlaceholder} />}>\n            <GlobalMetricsBar \n              metrics={metrics?.session}\n              modelName={modelFromLogic?.name} \n            />\n          </Suspense>\n        )}\n\n        <div className={styles.ChatContainer__inputControlsWrapper}> \n          <Suspense fallback={<div className={styles.ChatContainer__inputPlaceholder} />}>\n            <ChatInput\n              isInitialChat={isInitialChat}\n              onSendMessage={handleSendMessage}\n              disabled={isWaitingForResponse} \n              selectedModel={modelFromLogic} \n              editingMessage={editingMessage}\n              onCancelEdit={handleCancelEdit}\n              isStreaming={isWaitingForResponse}\n              toggleModelSelector={toggleModelSelector}\n              onFocus={focusInputField}\n            />\n          </Suspense>\n        </div>\n      </>\n    );\n  };\n\n  // Update CSS var for input height\n  useEffect(() => {\n    if (!chatHistory.length) return;\n    const container = containerRef.current;\n    if (!container) return;\n    const updateInputHeight = () => {\n      const inputArea = container.querySelector(`.${styles.ChatContainer__fixedInputArea}`);\n      if (inputArea) {\n        const height = inputArea.getBoundingClientRect().height;\n        container.style.setProperty('--input-height', `${height}px`);\n      }\n    };\n    updateInputHeight();\n    window.addEventListener('resize', updateInputHeight);\n    return () => window.removeEventListener('resize', updateInputHeight);\n  }, [chatHistory]);\n\n  return (\n    <div ref={containerRef} className={chatContainerClasses}>\n      {/* Container for the Model Selector Button */}\n      <div className={styles.ChatContainer__modelButtonContainer}>\n        <Suspense fallback={null}> \n          <ModelSelectorButton \n            selectedModelName={displayModelName}\n            providerName={displayProviderName}\n            onClick={toggleModelSelector}\n            disabled={isLoadingModels}\n          />\n        </Suspense>\n      </div>\n\n      <div className={styles.ChatContainer__chatAreaWrapper}>\n        <div className={styles.ChatContainer__chatArea}>\n          {isActiveChat ? (\n            // Active Chat: Render MessageList inside scroll container\n            <div className={styles.ChatContainer__scrollContainer} ref={scrollContainerRef}>\n              <div className={styles.ChatContainer__scrollInner}>\n                <Suspense fallback={<div className={styles.messagePlaceholder} />}>\n                  <MessageList\n                    ref={messageListRef}\n                    messages={chatHistory}\n                    error={error}\n                    onEditMessage={handleEditMessage}\n                  />\n                </Suspense>\n              </div>\n            </div>\n          ) : (\n            // Empty Chat: Render Greeting and Input Area (Static Layout)\n            <div className={styles.ChatContainer__emptyChatContent}>\n              <div className={styles.ChatContainer__greetingMessage}>\n                <h2>Welcome to AI Chat!</h2>\n                <p>Select a model above and start your conversation.</p>\n              </div>\n              {/* Render input area directly below greeting */}\n              <div className={`${styles.ChatContainer__inputArea} ${styles.ChatContainer__staticInputArea}`}> \n                {renderInputAreaContents(false)} \n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Scroll to Bottom Button */}\n        {showScrollToBottomButton && isActiveChat && (\n          <button\n            className={styles.ChatContainer__scrollToBottomButton}\n            onClick={() => scrollToBottom('smooth')}\n            aria-label=\"Scroll to bottom\"\n            title=\"Scroll to bottom\"\n          >\n            <ChevronDownIcon size={20} />\n          </button>\n        )}\n      </div>\n\n      {/* Fixed Input Area Wrapper (Only rendered when chat is active) */}\n      {isActiveChat && (\n        <div className={`${styles.ChatContainer__inputArea} ${styles.ChatContainer__fixedInputArea}`}> \n          {renderInputAreaContents(true)} \n        </div>\n      )}\n    </div>\n  );\n});\n\nChatContainer.displayName = 'ChatContainer';\n\nChatContainer.propTypes = {\n  selectedModel: PropTypes.object, // Shape could be refined\n  isLoadingModels: PropTypes.bool,\n  toggleModelSelector: PropTypes.func.isRequired,\n  onToggleSettings: PropTypes.func.isRequired,\n  isSidebarOpen: PropTypes.bool,\n  isSettingsOpen: PropTypes.bool,\n  isModelSelectorOpen: PropTypes.bool\n};\n\nexport default ChatContainer; ","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n"],"names":["useChatLogic","chatHistory","isWaitingForResponse","error","currentMessageMetrics","metrics","useChatState","sendMessage","submitMessage","clearChat","resetChat","downloadChatHistory","useChatControl","selectedModel","useModel","settings","useSettings","handleSendMessage","useCallback","async","message","editedMessage","arguments","length","undefined","isEditing","Array","isArray","map","part","type","text","join","trim","editMsgId","uniqueId","id","timestamp","editIndex","findIndex","msg","includes","content","role","finalMessage","Date","now","Math","random","toString","substring","err","MessageList","lazy","ChatInput","GlobalMetricsBar","ModelSelectorButton","ChatContainer","memo","_ref","passedSelectedModel","isLoadingModels","toggleModelSelector","onToggleSettings","isSidebarOpen","isSettingsOpen","isModelSelectorOpen","modelFromLogic","editingMessage","setEditingMessage","useState","messageListRef","useRef","scrollContainerRef","containerRef","isActiveChat","showScrollToBottomButton","setShowScrollToBottomButton","prevWaitingForResponse","scrollToBottom","behavior","current","scrollTo","top","scrollHeight","handleScroll","container","atBottom","scrollTop","clientHeight","throttledHandleScroll","useMemo","throttle","focusInputField","setTimeout","inputField","document","querySelector","styles","chatInput","focus","useEffect","addEventListener","passive","removeEventListener","cancel","timeout","clearTimeout","displayModelName","name","displayProviderName","provider","handleEditMessage","ChatContainer__fixedInputArea","handleCancelEdit","chatContainerClasses","renderInputAreaContents","isFixedLayout","isInitialChat","_jsxs","_Fragment","children","_jsx","Suspense","fallback","className","globalMetricsPlaceholder","session","modelName","ChatContainer__inputControlsWrapper","ChatContainer__inputPlaceholder","onSendMessage","disabled","onCancelEdit","isStreaming","onFocus","updateInputHeight","inputArea","height","getBoundingClientRect","style","setProperty","window","ref","ChatContainer__modelButtonContainer","selectedModelName","providerName","onClick","ChatContainer__chatAreaWrapper","ChatContainer__chatArea","ChatContainer__scrollContainer","ChatContainer__scrollInner","messagePlaceholder","messages","onEditMessage","ChatContainer__emptyChatContent","ChatContainer__greetingMessage","ChatContainer__inputArea","ChatContainer__staticInputArea","ChatContainer__scrollToBottomButton","title","ChevronDownIcon","size","displayName","FUNC_ERROR_TEXT","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectToString","prototype","nativeMax","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","remainingWait","debounced","isInvoking","this","leadingEdge","toNumber","isObject","flush","value","isObjectLike","call","isSymbol","other","valueOf","replace","isBinary","test","slice","module","exports"],"sourceRoot":""}