{"version":3,"file":"static/js/vendor-refractor-3ec14123.73feb92791.chunk.v1_9_0.js","mappings":"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","sources":["../node_modules/refractor/lang/jsonp.js","../node_modules/refractor/lang/json5.js","../node_modules/refractor/lang/jsx.js","../node_modules/refractor/lang/jsstacktrace.js","../node_modules/refractor/lang/jsdoc.js","../node_modules/refractor/lang/json.js"],"sourcesContent":["'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsx\njsx.displayName = 'jsx'\njsx.aliases = []\nfunction jsx(Prism) {\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          alias: 'language-javascript',\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    ) // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = ['webmanifest']\nfunction json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n"],"names":["refractorJson","require","jsonp","Prism","register","languages","extend","punctuation","insertBefore","function","module","exports","displayName","aliases","json5","string","property","pattern","RegExp","source","greedy","alias","number","jsx","javascript","util","clone","space","braces","spread","re","flags","replace","tag","inside","script","rest","stringifyToken","token","content","map","join","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","push","openedBraces","plainText","splice","Token","hooks","add","env","language","jsstacktrace","lookbehind","filename","keyword","refractorJavadoclike","refractorTypescript","jsdoc","parameterPrefix","parameter","code","boolean","typescript","operator","example","javadoclike","addSupport","json","comment","null","webmanifest"],"sourceRoot":""}