{"version":3,"file":"static/js/vendor-refractor-6072c7a0.85e2d6f92e.chunk.v1_9_0.js","mappings":"uIAKA,SAASA,EAASC,GAEhBA,EAAMC,UAAUF,SAAWC,EAAMC,UAAUC,OAAO,QAAS,CACzDC,QAAS,CACP,CACEC,QAAS,kCACTC,YAAY,EACZC,OAAQ,CACNC,WAAY,CACVH,QAAS,qBACTI,MAAO,iBAIb,CACEJ,QAAS,mBACTC,YAAY,EACZI,QAAQ,IAGZC,QACE,gOACFC,SAAU,CACR,yEACA,yEAEFC,MAAO,CACLR,QACE,qFACFI,MAAO,UAETK,KAAM,CACJT,QACE,uFACFI,MAAO,aAGXR,EAAMC,UAAUa,aAAa,WAAY,UAAW,CAElD,oBAAqB,CACnBV,QACE,2KACFI,MAAO,qBAGJR,EAAMC,UAAUF,SAAS,cAChCC,EAAMC,UAAUc,IAAMf,EAAMC,UAAoB,QAClD,CAlDAe,EAAOC,QAAUlB,EACjBA,EAASmB,YAAc,WACvBnB,EAASoB,QAAU,E,kBCHnB,IAAIC,EAAeC,EAAQ,OAI3B,SAASC,EAAWtB,GAClBA,EAAMuB,SAASH,GACfpB,EAAMC,UAAUqB,WAAatB,EAAMC,UAAUC,OAAO,QAAS,CAC3DsB,OAAQ,CACNpB,QAAS,kCACTC,YAAY,EACZI,QAAQ,GAEV,aAAc,CACZ,CAEEL,QAAS,kBACTC,YAAY,GAEd,CAEED,QAAS,kCACTC,YAAY,IAGhBK,QACE,gIACFe,OAAQ,CAACzB,EAAMC,UAAUyB,IAAID,OAAQ,wBACrCd,SACE,4EAEJX,EAAMC,UAAUa,aAAa,aAAc,WAAY,CACrD,iBAAkB,CAEhBV,QAAS,wBACTC,YAAY,EACZG,MAAO,gBAGXR,EAAMC,UAAUa,aAAa,aAAc,SAAU,CACnD,uBAAwB,CACtBV,QACE,uFACFC,YAAY,EACZI,QAAQ,EACRH,OAAQ,CACNqB,cAAe,CACbvB,QACE,oEACFC,YAAY,EACZC,OAAQ,CACN,2BAA4B,CAC1BF,QAAS,wBACTC,YAAY,EACZC,OAAQN,EAAMC,UAAUqB,YAE1B,4BAA6B,CAC3BlB,QAAS,YACTI,MAAO,iBAIbgB,OAAQ,aAIhB,CAhEAR,EAAOC,QAAUK,EACjBA,EAAWJ,YAAc,aACzBI,EAAWH,QAAU,E","sources":["../node_modules/refractor/lang/cfscript.js","../node_modules/refractor/lang/chaiscript.js"],"sourcesContent":["'use strict'\n\nmodule.exports = cfscript\ncfscript.displayName = 'cfscript'\ncfscript.aliases = []\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = chaiscript\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\nfunction chaiscript(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n"],"names":["cfscript","Prism","languages","extend","comment","pattern","lookbehind","inside","annotation","alias","greedy","keyword","operator","scope","type","insertBefore","cfc","module","exports","displayName","aliases","refractorCpp","require","chaiscript","register","string","number","cpp","interpolation"],"sourceRoot":""}