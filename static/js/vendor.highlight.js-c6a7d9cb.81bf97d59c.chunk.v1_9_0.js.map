{"version":3,"file":"static/js/vendor.highlight.js-c6a7d9cb.81bf97d59c.chunk.v1_9_0.js","mappings":"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X,UAAW,SACXQ,MAAO,IACPN,IAAK,KAEPT,EAAKmB,cACL,CACEZ,UAAW,WACXQ,MAAO,qBAIf,C,YC5FA,MAAMoC,EAAW,2BACXC,EAAW,CACf,KACA,KACA,KACA,KACA,MACA,QACA,UACA,MACA,MACA,WACA,KACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,WAEIC,EAAW,CACf,OACA,QACA,OACA,YACA,MACA,YAoFIC,EAAY,GAAGlB,OAlCI,CACvB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,YAGyB,CACzB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,SACA,UA9EY,CACZ,OACA,WACA,SACA,OACA,OACA,SACA,SACA,SACA,WACA,UACA,QACA,SACA,MACA,MACA,UACA,UACA,QACA,UACA,OACA,UACA,eACA,aACA,aACA,YACA,cACA,cACA,eACA,QACA,aACA,oBACA,cACA,gBACA,iBACA,UAGkB,CAClB,YACA,gBACA,aACA,iBACA,cACA,YACA,aAgEF,SAASmB,EAAUpB,GACjB,OAAOC,EAAO,MAAOD,EAAI,IAC3B,CAMA,SAASC,IAAgB,QAAAC,EAAAC,UAAAC,OAANC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAErB,OADeF,EAAKf,KAAKkB,IAAMT,OApBjBC,EAoBwBQ,GAlBpB,iBAAPR,EAAwBA,EAE5BA,EAAGD,OAHM,KADlB,IAAgBC,CAoB0B,IAAER,KAAK,GAEjD,CA4gBA7B,EAAOC,QAnFP,SAAoBC,GAClB,MAAMwD,EAAaL,EAoCbM,EAAa,CACjBC,SAAUP,EACVhD,QAASiD,EAAShB,OAfS,CAC3B,OACA,YACA,UACA,YACA,SACA,UACA,YACA,aACA,UACA,WACA,aAKA/B,QAASgD,EACTjD,SAAUkD,EAA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","sources":["../node_modules/highlight.js/lib/languages/vala.js","../node_modules/highlight.js/lib/languages/twig.js","../node_modules/highlight.js/lib/languages/vbscript.js","../node_modules/highlight.js/lib/languages/tp.js","../node_modules/highlight.js/lib/languages/typescript.js","../node_modules/highlight.js/lib/languages/vbscript-html.js","../node_modules/highlight.js/lib/languages/vbnet.js","../node_modules/highlight.js/lib/languages/verilog.js"],"sourcesContent":["/*\nLanguage: Vala\nAuthor: Antono Vasiljev <antono.vasiljev@gmail.com>\nDescription: Vala is a new programming language that aims to bring modern programming language features to GNOME developers without imposing any additional runtime requirements and without using a different ABI compared to applications and libraries written in C.\nWebsite: https://wiki.gnome.org/Projects/Vala\n*/\n\nfunction vala(hljs) {\n  return {\n    name: 'Vala',\n    keywords: {\n      keyword:\n        // Value types\n        'char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 ' +\n        'uint16 uint32 uint64 float double bool struct enum string void ' +\n        // Reference types\n        'weak unowned owned ' +\n        // Modifiers\n        'async signal static abstract interface override virtual delegate ' +\n        // Control Structures\n        'if while do for foreach else switch case break default return try catch ' +\n        // Visibility\n        'public private protected internal ' +\n        // Other\n        'using new this get set const stdout stdin stderr var',\n      built_in:\n        'DBus GLib CCode Gee Object Gtk Posix',\n      literal:\n        'false true null'\n    },\n    contains: [\n      {\n        className: 'class',\n        beginKeywords: 'class interface namespace',\n        end: /\\{/,\n        excludeEnd: true,\n        illegal: '[^,:\\\\n\\\\s\\\\.]',\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 5\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '^#',\n        end: '$',\n        relevance: 2\n      }\n    ]\n  };\n}\n\nmodule.exports = vala;\n","/*\nLanguage: Twig\nRequires: xml.js\nAuthor: Luke Holder <lukemh@gmail.com>\nDescription: Twig is a templating language for PHP\nWebsite: https://twig.symfony.com\nCategory: template\n*/\n\nfunction twig(hljs) {\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)'\n  };\n\n  var FUNCTION_NAMES = 'attribute block constant cycle date dump include ' +\n                  'max min parent random range source template_from_string';\n\n  var FUNCTIONS = {\n    beginKeywords: FUNCTION_NAMES,\n    keywords: {name: FUNCTION_NAMES},\n    relevance: 0,\n    contains: [\n      PARAMS\n    ]\n  };\n\n  var FILTER = {\n    begin: /\\|[A-Za-z_]+:?/,\n    keywords:\n      'abs batch capitalize column convert_encoding date date_modify default ' +\n      'escape filter first format inky_to_html inline_css join json_encode keys last ' +\n      'length lower map markdown merge nl2br number_format raw reduce replace ' +\n      'reverse round slice sort spaceless split striptags title trim upper url_encode',\n    contains: [\n      FUNCTIONS\n    ]\n  };\n\n  var TAGS = 'apply autoescape block deprecated do embed extends filter flush for from ' +\n    'if import include macro sandbox set use verbatim with';\n\n  TAGS = TAGS + ' ' + TAGS.split(' ').map(function(t){return 'end' + t}).join(' ');\n\n  return {\n    name: 'Twig',\n    aliases: ['craftcms'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT(/\\{#/, /#\\}/),\n      {\n        className: 'template-tag',\n        begin: /\\{%/, end: /%\\}/,\n        contains: [\n          {\n            className: 'name',\n            begin: /\\w+/,\n            keywords: TAGS,\n            starts: {\n              endsWithParent: true,\n              contains: [FILTER, FUNCTIONS],\n              relevance: 0\n            }\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /\\}\\}/,\n        contains: ['self', FILTER, FUNCTIONS]\n      }\n    ]\n  };\n}\n\nmodule.exports = twig;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: VBScript\nDescription: VBScript (\"Microsoft Visual Basic Scripting Edition\") is an Active Scripting language developed by Microsoft that is modeled on Visual Basic.\nAuthor: Nikita Ledyaev <lenikita@yandex.ru>\nContributors: Michal Gabrukiewicz <mgabru@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/VBScript\nCategory: scripting\n*/\n\n/** @type LanguageFn */\nfunction vbscript(hljs) {\n  const BUILT_IN_FUNCTIONS = ('lcase month vartype instrrev ubound setlocale getobject rgb getref string ' +\n  'weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency ' +\n  'conversions csng timevalue second year space abs clng timeserial fixs len asc ' +\n  'isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate ' +\n  'instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex ' +\n  'chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim ' +\n  'strcomp int createobject loadpicture tan formatnumber mid ' +\n  'split  cint sin datepart ltrim sqr ' +\n  'time derived eval date formatpercent exp inputbox left ascw ' +\n  'chrw regexp cstr err').split(\" \");\n  const BUILT_IN_OBJECTS = [\n    \"server\",\n    \"response\",\n    \"request\",\n    // take no arguments so can be called without ()\n    \"scriptengine\",\n    \"scriptenginebuildversion\",\n    \"scriptengineminorversion\",\n    \"scriptenginemajorversion\"\n  ];\n\n  const BUILT_IN_CALL = {\n    begin: concat(either(...BUILT_IN_FUNCTIONS), \"\\\\s*\\\\(\"),\n    // relevance 0 because this is acting as a beginKeywords really\n    relevance:0,\n    keywords: {\n      built_in: BUILT_IN_FUNCTIONS\n    }\n  };\n\n  return {\n    name: 'VBScript',\n    aliases: ['vbs'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'call class const dim do loop erase execute executeglobal exit for each next function ' +\n        'if then else on error option explicit new private property let get public randomize ' +\n        'redim rem select case set stop sub while wend with end to elseif is or xor and not ' +\n        'class_initialize class_terminate default preserve in me byval byref step resume goto',\n      built_in: BUILT_IN_OBJECTS,\n      literal:\n        'true false null nothing empty'\n    },\n    illegal: '//',\n    contains: [\n      BUILT_IN_CALL,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n      hljs.COMMENT(\n        /'/,\n        /$/,\n        {\n          relevance: 0\n        }\n      ),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = vbscript;\n","/*\nLanguage: TP\nAuthor: Jay Strybis <jay.strybis@gmail.com>\nDescription: FANUC TP programming language (TPP).\n*/\n\nfunction tp(hljs) {\n  const TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*', /* no leading zeros */\n    relevance: 0\n  };\n  const TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  const TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' +\n    'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      TPLABEL\n    ]\n  };\n  const TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\n      TPLABEL\n    ]\n  };\n\n  return {\n    name: 'TP',\n    keywords: {\n      keyword:\n        'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' +\n        'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' +\n        'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' +\n        'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' +\n        'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' +\n        'SUBSTR FINDSTR VOFFSET PROG ATTR MN POS',\n      literal:\n        'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET'\n    },\n    contains: [\n      TPDATA,\n      TPIO,\n      {\n        className: 'keyword',\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n      },\n      {\n        /* this is for cases like ,CALL */\n        className: 'keyword',\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n      },\n      {\n        /* this is for cases like CNT100 where the default lexemes do not\n         * separate the keyword and the number */\n        className: 'keyword',\n        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n      },\n      {\n        /* to catch numbers that do not have a word boundary on the left */\n        className: 'number',\n        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n        relevance: 0\n      },\n      hljs.COMMENT('//', '[;$]'),\n      hljs.COMMENT('!', '[;$]'),\n      hljs.COMMENT('--eg:', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '\\''\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'variable',\n        begin: '\\\\$[A-Za-z0-9_]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = tp;\n","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  \"BigInt\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\n/** @type LanguageFn */\nfunction javascript(hljs) {\n  /**\n   * Takes a string like \"<Booger\" and checks to see\n   * if we can find a matching \"</Booger\" later in the\n   * content.\n   * @param {RegExpMatchArray} match\n   * @param {{after:number}} param1\n   */\n  const hasClosingTag = (match, { after }) => {\n    const tag = \"</\" + match[0].slice(1);\n    const pos = match.input.indexOf(tag, after);\n    return pos !== -1;\n  };\n\n  const IDENT_RE$1 = IDENT_RE;\n  const FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  const XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/,\n    /**\n     * @param {RegExpMatchArray} match\n     * @param {CallbackResponse} response\n     */\n    isTrulyOpeningTag: (match, response) => {\n      const afterMatchIndex = match[0].length + match.index;\n      const nextChar = match.input[afterMatchIndex];\n      // nested type?\n      // HTML should not include another raw `<` inside a tag\n      // But a type might: `<Array<Array<number>>`, etc.\n      if (nextChar === \"<\") {\n        response.ignoreMatch();\n        return;\n      }\n      // <something>\n      // This is now either a tag or a type.\n      if (nextChar === \">\") {\n        // if we cannot find a matching closing tag, then we\n        // will ignore it\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\n          response.ignoreMatch();\n        }\n      }\n    }\n  };\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS,\n    literal: LITERALS,\n    built_in: BUILT_INS\n  };\n\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\n  const decimalDigits = '[0-9](_?[0-9])*';\n  const frac = `\\\\.(${decimalDigits})`;\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // DecimalLiteral\n      { begin: `(\\\\b(${decimalInteger})((${frac})|\\\\.)?|(${frac}))` +\n        `[eE][+-]?(${decimalDigits})\\\\b` },\n      { begin: `\\\\b(${decimalInteger})\\\\b((${frac})\\\\b|\\\\.)?|(${frac})\\\\b` },\n\n      // DecimalBigIntegerLiteral\n      { begin: `\\\\b(0|[1-9](_?[0-9])*)n\\\\b` },\n\n      // NonDecimalIntegerLiteral\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*n?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*n?\\\\b\" },\n\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\n      { begin: \"\\\\b0[0-7]+n?\\\\b\" },\n    ],\n    relevance: 0\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{',\n    end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: [] // defined later\n  };\n  const HTML_TEMPLATE = {\n    begin: 'html`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml'\n    }\n  };\n  const CSS_TEMPLATE = {\n    begin: 'css`',\n    end: '',\n    starts: {\n      end: '`',\n      returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css'\n    }\n  };\n  const TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`',\n    end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  const JSDOC_COMMENT = hljs.COMMENT(\n    /\\/\\*\\*(?!\\/)/,\n    '\\\\*/',\n    {\n      relevance: 0,\n      contains: [\n        {\n          className: 'doctag',\n          begin: '@[A-Za-z]+',\n          contains: [\n            {\n              className: 'type',\n              begin: '\\\\{',\n              end: '\\\\}',\n              relevance: 0\n            },\n            {\n              className: 'variable',\n              begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n              endsParent: true,\n              relevance: 0\n            },\n            // eat spaces (not newlines) so we can find\n            // types or variables\n            {\n              begin: /(?=[^\\n])\\s/,\n              relevance: 0\n            }\n          ]\n        }\n      ]\n    }\n  );\n  const COMMENT = {\n    className: \"comment\",\n    variants: [\n      JSDOC_COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  };\n  const SUBST_INTERNALS = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  SUBST.contains = SUBST_INTERNALS\n    .concat({\n      // we need to pair up {} inside our subst to prevent\n      // it from ending too early by matching another }\n      begin: /\\{/,\n      end: /\\}/,\n      keywords: KEYWORDS$1,\n      contains: [\n        \"self\"\n      ].concat(SUBST_INTERNALS)\n    });\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\n    // eat recursive parens in sub expressions\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: [\"self\"].concat(SUBST_AND_COMMENTS)\n    }\n  ]);\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    keywords: KEYWORDS$1,\n    contains: PARAMS_CONTAINS\n  };\n\n  return {\n    name: 'Javascript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    // this will be extended by TypeScript\n    exports: { PARAMS_CONTAINS },\n    illegal: /#(?![$_A-z])/,\n    contains: [\n      hljs.SHEBANG({\n        label: \"shebang\",\n        binary: \"node\",\n        relevance: 5\n      }),\n      {\n        label: \"use_strict\",\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      COMMENT,\n      NUMBER,\n      { // object attr container\n        begin: concat(/[{,\\n]\\s*/,\n          // we need to look ahead to make sure that we actually have an\n          // attribute coming up so we don't steal a comma from a potential\n          // \"value\" container\n          //\n          // NOTE: this might not work how you think.  We don't actually always\n          // enter this mode and stay.  Instead it might merely match `,\n          // <comments up next>` and then immediately end after the , because it\n          // fails to find any actual attrs. But this still does the job because\n          // it prevents the value contain rule from grabbing this instead and\n          // prevening this rule from firing when we actually DO have keys.\n          lookahead(concat(\n            // we also need to allow for multiple possible comments inbetween\n            // the first key:value pairing\n            /(((\\/\\/.*$)|(\\/\\*(\\*[^/]|[^*])*\\*\\/))\\s*)*/,\n            IDENT_RE$1 + '\\\\s*:'))),\n        relevance: 0,\n        contains: [\n          {\n            className: 'attr',\n            begin: IDENT_RE$1 + lookahead('\\\\s*:'),\n            relevance: 0\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          COMMENT,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: '(\\\\(' +\n            '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n            '[^()]*' +\n            '\\\\)[^()]*)*' +\n            '\\\\)[^()]*)*' +\n            '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>',\n            returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE,\n                    relevance: 0\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/,\n                    end: /\\)/,\n                    excludeBegin: true,\n                    excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/, relevance: 0\n          },\n          {\n            className: '',\n            begin: /\\s/,\n            end: /\\s*/,\n            skip: true\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              {\n                begin: XML_TAG.begin,\n                // we carefully check the opening tag to see if it truly\n                // is a tag and not a false positive\n                'on:begin': XML_TAG.isTrulyOpeningTag,\n                end: XML_TAG.end\n              }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin,\n                end: XML_TAG.end,\n                skip: true,\n                contains: ['self']\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /[{;]/,\n        excludeEnd: true,\n        keywords: KEYWORDS$1,\n        contains: [\n          'self',\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n          PARAMS\n        ],\n        illegal: /%/\n      },\n      {\n        // prevent this from getting swallowed up by function\n        // since they appear \"function like\"\n        beginKeywords: \"while if switch catch for\"\n      },\n      {\n        className: 'function',\n        // we have to count the parens to make sure we actually have the correct\n        // bounding ( ).  There could be any number of sub-expressions inside\n        // also surrounded by parens.\n        begin: hljs.UNDERSCORE_IDENT_RE +\n          '\\\\(' + // first parens\n          '[^()]*(\\\\(' +\n            '[^()]*(\\\\(' +\n              '[^()]*' +\n            '\\\\)[^()]*)*' +\n          '\\\\)[^()]*)*' +\n          '\\\\)\\\\s*\\\\{', // end parens\n        returnBegin:true,\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n        ]\n      },\n      // hack: prevents detection of keywords in some circumstances\n      // .keyword()\n      // $keyword = x\n      {\n        variants: [\n          { begin: '\\\\.' + IDENT_RE$1 },\n          { begin: '\\\\$' + IDENT_RE$1 }\n        ],\n        relevance: 0\n      },\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class',\n        end: /[{;=]/,\n        excludeEnd: true,\n        illegal: /[:\"[\\]]/,\n        contains: [\n          { beginKeywords: 'extends' },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        begin: /\\b(?=constructor)/,\n        end: /[{;]/,\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n          'self',\n          PARAMS\n        ]\n      },\n      {\n        begin: '(get|set)\\\\s+(?=' + IDENT_RE$1 + '\\\\()',\n        end: /\\{/,\n        keywords: \"get set\",\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1 }),\n          { begin: /\\(\\)/ }, // eat to avoid empty params\n          PARAMS\n        ]\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      }\n    ]\n  };\n}\n\n/*\nLanguage: TypeScript\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\nContributors: Ike Ku <dempfi@yahoo.com>\nDescription: TypeScript is a strict superset of JavaScript\nWebsite: https://www.typescriptlang.org\nCategory: common, scripting\n*/\n\n/** @type LanguageFn */\nfunction typescript(hljs) {\n  const IDENT_RE$1 = IDENT_RE;\n  const NAMESPACE = {\n    beginKeywords: 'namespace', end: /\\{/, excludeEnd: true\n  };\n  const INTERFACE = {\n    beginKeywords: 'interface', end: /\\{/, excludeEnd: true,\n    keywords: 'interface extends'\n  };\n  const USE_STRICT = {\n    className: 'meta',\n    relevance: 10,\n    begin: /^\\s*['\"]use strict['\"]/\n  };\n  const TYPES = [\n    \"any\",\n    \"void\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    \"never\",\n    \"enum\"\n  ];\n  const TS_SPECIFIC_KEYWORDS = [\n    \"type\",\n    \"namespace\",\n    \"typedef\",\n    \"interface\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"implements\",\n    \"declare\",\n    \"abstract\",\n    \"readonly\"\n  ];\n  const KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\n    literal: LITERALS,\n    built_in: BUILT_INS.concat(TYPES)\n  };\n  const DECORATOR = {\n    className: 'meta',\n    begin: '@' + IDENT_RE$1,\n  };\n\n  const swapMode = (mode, label, replacement) => {\n    const indx = mode.contains.findIndex(m => m.label === label);\n    if (indx === -1) { throw new Error(\"can not find mode to replace\"); }\n    mode.contains.splice(indx, 1, replacement);\n  };\n\n  const tsLanguage = javascript(hljs);\n\n  // this should update anywhere keywords is used since\n  // it will be the same actual JS object\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\n\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\n  tsLanguage.contains = tsLanguage.contains.concat([\n    DECORATOR,\n    NAMESPACE,\n    INTERFACE,\n  ]);\n\n  // TS gets a simpler shebang rule than JS\n  swapMode(tsLanguage, \"shebang\", hljs.SHEBANG());\n  // JS use strict rule purposely excludes `asm` which makes no sense\n  swapMode(tsLanguage, \"use_strict\", USE_STRICT);\n\n  const functionDeclaration = tsLanguage.contains.find(m => m.className === \"function\");\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\n\n  Object.assign(tsLanguage, {\n    name: 'TypeScript',\n    aliases: ['ts', 'tsx']\n  });\n\n  return tsLanguage;\n}\n\nmodule.exports = typescript;\n","/*\nLanguage: VBScript in HTML\nRequires: xml.js, vbscript.js\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nDescription: \"Bridge\" language defining fragments of VBScript in HTML within <% .. %>\nWebsite: https://en.wikipedia.org/wiki/VBScript\nCategory: scripting\n*/\n\nfunction vbscriptHtml(hljs) {\n  return {\n    name: 'VBScript in HTML',\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: '<%',\n        end: '%>',\n        subLanguage: 'vbscript'\n      }\n    ]\n  };\n}\n\nmodule.exports = vbscriptHtml;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Visual Basic .NET\nDescription: Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework.\nAuthors: Poren Chiang <ren.chiang@gmail.com>, Jan Pilzer\nWebsite: https://docs.microsoft.com/dotnet/visual-basic/getting-started\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction vbnet(hljs) {\n  /**\n   * Character Literal\n   * Either a single character (\"a\"C) or an escaped double quote (\"\"\"\"C).\n   */\n  const CHARACTER = {\n    className: 'string',\n    begin: /\"(\"\"|[^/n])\"C\\b/\n  };\n\n  const STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    illegal: /\\n/,\n    contains: [\n      {\n        // double quote escape\n        begin: /\"\"/\n      }\n    ]\n  };\n\n  /** Date Literals consist of a date, a time, or both separated by whitespace, surrounded by # */\n  const MM_DD_YYYY = /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/;\n  const YYYY_MM_DD = /\\d{4}-\\d{1,2}-\\d{1,2}/;\n  const TIME_12H = /(\\d|1[012])(:\\d+){0,2} *(AM|PM)/;\n  const TIME_24H = /\\d{1,2}(:\\d{1,2}){1,2}/;\n  const DATE = {\n    className: 'literal',\n    variants: [\n      {\n        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)\n        begin: concat(/# */, either(YYYY_MM_DD, MM_DD_YYYY), / *#/)\n      },\n      {\n        // #H:mm[:ss]# (24h Time)\n        begin: concat(/# */, TIME_24H, / *#/)\n      },\n      {\n        // #h[:mm[:ss]] A# (12h Time)\n        begin: concat(/# */, TIME_12H, / *#/)\n      },\n      {\n        // date plus time\n        begin: concat(\n          /# */,\n          either(YYYY_MM_DD, MM_DD_YYYY),\n          / +/,\n          either(TIME_12H, TIME_24H),\n          / *#/\n        )\n      }\n    ]\n  };\n\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        // Float\n        begin: /\\b\\d[\\d_]*((\\.[\\d_]+(E[+-]?[\\d_]+)?)|(E[+-]?[\\d_]+))[RFD@!#]?/\n      },\n      {\n        // Integer (base 10)\n        begin: /\\b\\d[\\d_]*((U?[SIL])|[%&])?/\n      },\n      {\n        // Integer (base 16)\n        begin: /&H[\\dA-F_]+((U?[SIL])|[%&])?/\n      },\n      {\n        // Integer (base 8)\n        begin: /&O[0-7_]+((U?[SIL])|[%&])?/\n      },\n      {\n        // Integer (base 2)\n        begin: /&B[01_]+((U?[SIL])|[%&])?/\n      }\n    ]\n  };\n\n  const LABEL = {\n    className: 'label',\n    begin: /^\\w+:/\n  };\n\n  const DOC_COMMENT = hljs.COMMENT(/'''/, /$/, {\n    contains: [\n      {\n        className: 'doctag',\n        begin: /<\\/?/,\n        end: />/\n      }\n    ]\n  });\n\n  const COMMENT = hljs.COMMENT(null, /$/, {\n    variants: [\n      {\n        begin: /'/\n      },\n      {\n        // TODO: Use `beforeMatch:` for leading spaces\n        begin: /([\\t ]|^)REM(?=\\s)/\n      }\n    ]\n  });\n\n  const DIRECTIVES = {\n    className: 'meta',\n    // TODO: Use `beforeMatch:` for indentation once available\n    begin: /[\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\b/,\n    end: /$/,\n    keywords: {\n      'meta-keyword':\n        'const disable else elseif enable end externalsource if region then'\n    },\n    contains: [ COMMENT ]\n  };\n\n  return {\n    name: 'Visual Basic .NET',\n    aliases: [ 'vb' ],\n    case_insensitive: true,\n    classNameAliases: {\n      label: 'symbol'\n    },\n    keywords: {\n      keyword:\n        'addhandler alias aggregate ansi as async assembly auto binary by byref byval ' + /* a-b */\n        'call case catch class compare const continue custom declare default delegate dim distinct do ' + /* c-d */\n        'each equals else elseif end enum erase error event exit explicit finally for friend from function ' + /* e-f */\n        'get global goto group handles if implements imports in inherits interface into iterator ' + /* g-i */\n        'join key let lib loop me mid module mustinherit mustoverride mybase myclass ' + /* j-m */\n        'namespace narrowing new next notinheritable notoverridable ' + /* n */\n        'of off on operator option optional order overloads overridable overrides ' + /* o */\n        'paramarray partial preserve private property protected public ' + /* p */\n        'raiseevent readonly redim removehandler resume return ' + /* r */\n        'select set shadows shared skip static step stop structure strict sub synclock ' + /* s */\n        'take text then throw to try unicode until using when where while widening with withevents writeonly yield' /* t-y */,\n      built_in:\n        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators\n        'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor ' +\n        // Type Conversion Functions https://docs.microsoft.com/dotnet/visual-basic/language-reference/functions/type-conversion-functions\n        'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',\n      type:\n        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types\n        'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',\n      literal: 'true false nothing'\n    },\n    illegal:\n      '//|\\\\{|\\\\}|endif|gosub|variant|wend|^\\\\$ ' /* reserved deprecated keywords */,\n    contains: [\n      CHARACTER,\n      STRING,\n      DATE,\n      NUMBER,\n      LABEL,\n      DOC_COMMENT,\n      COMMENT,\n      DIRECTIVES\n    ]\n  };\n}\n\nmodule.exports = vbnet;\n","/*\nLanguage: Verilog\nAuthor: Jon Evans <jon@craftyjon.com>\nContributors: Boone Severson <boone.severson@gmail.com>\nDescription: Verilog is a hardware description language used in electronic design automation to describe digital and mixed-signal systems. This highlighter supports Verilog and SystemVerilog through IEEE 1800-2012.\nWebsite: http://www.verilog.com\n*/\n\nfunction verilog(hljs) {\n  const SV_KEYWORDS = {\n    $pattern: /[\\w\\$]+/,\n    keyword:\n      'accept_on alias always always_comb always_ff always_latch and assert assign ' +\n      'assume automatic before begin bind bins binsof bit break buf|0 bufif0 bufif1 ' +\n      'byte case casex casez cell chandle checker class clocking cmos config const ' +\n      'constraint context continue cover covergroup coverpoint cross deassign default ' +\n      'defparam design disable dist do edge else end endcase endchecker endclass ' +\n      'endclocking endconfig endfunction endgenerate endgroup endinterface endmodule ' +\n      'endpackage endprimitive endprogram endproperty endspecify endsequence endtable ' +\n      'endtask enum event eventually expect export extends extern final first_match for ' +\n      'force foreach forever fork forkjoin function generate|5 genvar global highz0 highz1 ' +\n      'if iff ifnone ignore_bins illegal_bins implements implies import incdir include ' +\n      'initial inout input inside instance int integer interconnect interface intersect ' +\n      'join join_any join_none large let liblist library local localparam logic longint ' +\n      'macromodule matches medium modport module nand negedge nettype new nexttime nmos ' +\n      'nor noshowcancelled not notif0 notif1 or output package packed parameter pmos ' +\n      'posedge primitive priority program property protected pull0 pull1 pulldown pullup ' +\n      'pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos ' +\n      'real realtime ref reg reject_on release repeat restrict return rnmos rpmos rtran ' +\n      'rtranif0 rtranif1 s_always s_eventually s_nexttime s_until s_until_with scalared ' +\n      'sequence shortint shortreal showcancelled signed small soft solve specify specparam ' +\n      'static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on ' +\n      'sync_reject_on table tagged task this throughout time timeprecision timeunit tran ' +\n      'tranif0 tranif1 tri tri0 tri1 triand trior trireg type typedef union unique unique0 ' +\n      'unsigned until until_with untyped use uwire var vectored virtual void wait wait_order ' +\n      'wand weak weak0 weak1 while wildcard wire with within wor xnor xor',\n    literal:\n      'null',\n    built_in:\n      '$finish $stop $exit $fatal $error $warning $info $realtime $time $printtimescale ' +\n      '$bitstoreal $bitstoshortreal $itor $signed $cast $bits $stime $timeformat ' +\n      '$realtobits $shortrealtobits $rtoi $unsigned $asserton $assertkill $assertpasson ' +\n      '$assertfailon $assertnonvacuouson $assertoff $assertcontrol $assertpassoff ' +\n      '$assertfailoff $assertvacuousoff $isunbounded $sampled $fell $changed $past_gclk ' +\n      '$fell_gclk $changed_gclk $rising_gclk $steady_gclk $coverage_control ' +\n      '$coverage_get $coverage_save $set_coverage_db_name $rose $stable $past ' +\n      '$rose_gclk $stable_gclk $future_gclk $falling_gclk $changing_gclk $display ' +\n      '$coverage_get_max $coverage_merge $get_coverage $load_coverage_db $typename ' +\n      '$unpacked_dimensions $left $low $increment $clog2 $ln $log10 $exp $sqrt $pow ' +\n      '$floor $ceil $sin $cos $tan $countbits $onehot $isunknown $fatal $warning ' +\n      '$dimensions $right $high $size $asin $acos $atan $atan2 $hypot $sinh $cosh ' +\n      '$tanh $asinh $acosh $atanh $countones $onehot0 $error $info $random ' +\n      '$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson ' +\n      '$dist_t $dist_uniform $q_initialize $q_remove $q_exam $async$and$array ' +\n      '$async$nand$array $async$or$array $async$nor$array $sync$and$array ' +\n      '$sync$nand$array $sync$or$array $sync$nor$array $q_add $q_full $psprintf ' +\n      '$async$and$plane $async$nand$plane $async$or$plane $async$nor$plane ' +\n      '$sync$and$plane $sync$nand$plane $sync$or$plane $sync$nor$plane $system ' +\n      '$display $displayb $displayh $displayo $strobe $strobeb $strobeh $strobeo ' +\n      '$write $readmemb $readmemh $writememh $value$plusargs ' +\n      '$dumpvars $dumpon $dumplimit $dumpports $dumpportson $dumpportslimit ' +\n      '$writeb $writeh $writeo $monitor $monitorb $monitorh $monitoro $writememb ' +\n      '$dumpfile $dumpoff $dumpall $dumpflush $dumpportsoff $dumpportsall ' +\n      '$dumpportsflush $fclose $fdisplay $fdisplayb $fdisplayh $fdisplayo ' +\n      '$fstrobe $fstrobeb $fstrobeh $fstrobeo $swrite $swriteb $swriteh ' +\n      '$swriteo $fscanf $fread $fseek $fflush $feof $fopen $fwrite $fwriteb ' +\n      '$fwriteh $fwriteo $fmonitor $fmonitorb $fmonitorh $fmonitoro $sformat ' +\n      '$sformatf $fgetc $ungetc $fgets $sscanf $rewind $ftell $ferror'\n  };\n\n  return {\n    name: 'Verilog',\n    aliases: [\n      'v',\n      'sv',\n      'svh'\n    ],\n    case_insensitive: false,\n    keywords: SV_KEYWORDS,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        contains: [ hljs.BACKSLASH_ESCAPE ],\n        variants: [\n          {\n            begin: '\\\\b((\\\\d+\\'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)'\n          },\n          {\n            begin: '\\\\B((\\'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)'\n          },\n          {\n            begin: '\\\\b([0-9_])+',\n            relevance: 0\n          }\n        ]\n      },\n      /* parameters to instances */\n      {\n        className: 'variable',\n        variants: [\n          {\n            begin: '#\\\\((?!parameter).+\\\\)'\n          },\n          {\n            begin: '\\\\.\\\\w+',\n            relevance: 0\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '`',\n        end: '$',\n        keywords: {\n          'meta-keyword':\n            'define __FILE__ ' +\n            '__LINE__ begin_keywords celldefine default_nettype define ' +\n            'else elsif end_keywords endcelldefine endif ifdef ifndef ' +\n            'include line nounconnected_drive pragma resetall timescale ' +\n            'unconnected_drive undef undefineall'\n        },\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = verilog;\n"],"names":["module","exports","hljs","name","keywords","keyword","built_in","literal","contains","className","beginKeywords","end","excludeEnd","illegal","UNDERSCORE_TITLE_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","begin","relevance","APOS_STRING_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","FUNCTION_NAMES","FUNCTIONS","FILTER","TAGS","split","map","t","join","aliases","case_insensitive","subLanguage","COMMENT","starts","endsWithParent","source","re","concat","_len","arguments","length","args","Array","_key","x","either","_len2","_key2","BUILT_IN_FUNCTIONS","inherit","TPID","TPLABEL","IDENT_RE","KEYWORDS","LITERALS","BUILT_INS","lookahead","IDENT_RE$1","KEYWORDS$1","$pattern","DECORATOR","swapMode","mode","label","replacement","indx","findIndex","m","Error","splice","tsLanguage","FRAGMENT","XML_TAG","isTrulyOpeningTag","match","response","afterMatchIndex","index","nextChar","input","hasClosingTag","_ref","after","tag","slice","indexOf","ignoreMatch","decimalDigits","frac","decimalInteger","NUMBER","variants","SUBST","HTML_TEMPLATE","returnEnd","BACKSLASH_ESCAPE","CSS_TEMPLATE","TEMPLATE_STRING","endsParent","SUBST_INTERNALS","REGEXP_MODE","SUBST_AND_COMMENTS","PARAMS_CONTAINS","PARAMS","excludeBegin","SHEBANG","binary","RE_STARTERS_RE","UNDERSCORE_IDENT_RE","returnBegin","skip","TITLE_MODE","javascript","Object","assign","push","find","MM_DD_YYYY","YYYY_MM_DD","TIME_12H","TIME_24H","DATE","DOC_COMMENT","classNameAliases","type"],"sourceRoot":""}