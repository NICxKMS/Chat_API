.inputContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 12px;
  padding-right: 8px; /* Reduced right padding to allow scrollbar to align with container edge */
  background-color: var(--input-bg-color, #303030);
  border-radius: 16px;
  border: 1px solid var(--border-color, #3f3f3f);
  position: relative;
  box-shadow: 0 2px 5px var(--shadow-color, rgba(0, 0, 0, 0.1));
  overflow: hidden; /* Ensure no content spills outside */
}

.inputWrapper {
  position: relative;
  width: 100%;
  display: flex;
  overflow: visible; /* Allow scrollbar to be visible */
  margin-right: 0;
  padding-right: 0;
}

.chatInput {
  width: 100%;
  height: 48px;
  border: none;
  border-radius: 8px;
  padding: 12px;
  padding-right: 50px; /* Make room for send button */
  background-color: transparent;
  color: var(--text-primary, #e0e0e0);
  font-family: inherit;
  font-size: 1rem;
  resize: none;
  min-height: 24px;
  max-height: 200px;
  overflow-y: auto;
  line-height: 1.5;
  transition: all 0.2s ease;
  position: relative;
  scrollbar-width: thin; /* For Firefox */
  scrollbar-color: var(--scrollbar-thumb-color, rgba(255, 255, 255, 0.2)) var(--scrollbar-track-color, rgba(0, 0, 0, 0.1)); /* For Firefox */
  box-sizing: border-box;
  margin-right: 0;
}

/* Scrollbar styling for the chat input */
.chatInput::-webkit-scrollbar {
  width: 3px; /* Even slimmer scrollbar */
  position: absolute;
  right: 0;
  display: block;
}

.chatInput::-webkit-scrollbar-track {
  background: var(--scrollbar-track-color, rgba(0, 0, 0, 0.1));
  border-radius: 1.5px;
  margin-right: 0;
  margin-left: auto;
}

.chatInput::-webkit-scrollbar-thumb {
  background: var(--scrollbar-thumb-color, rgba(255, 255, 255, 0.2));
  border-radius: 1.5px;
  width: 3px;
}

.chatInput::-webkit-scrollbar-thumb:hover {
  background: var(--scrollbar-thumb-hover-color, rgba(255, 255, 255, 0.3));
}

.chatInput:focus {
  outline: none;
  border-color: transparent;
  background-color: transparent;
}

/* Add a subtle visual indicator when waiting for response */
.inputContainer.waitingForResponse .chatInput {
  border-left: 3px solid var(--waiting-border-color, #f44336);
}

.chatInput:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

/* Style placeholder text */
.chatInput::placeholder {
  color: var(--placeholder-color, #999);
  opacity: 1;
}

/* Input wrapper to position the send button inside the text input */
.inputWrapper {
  position: relative;
  width: 100%;
  display: flex;
  overflow: visible; /* Allow scrollbar to be visible */
  margin-right: 0;
  padding-right: 0;
}

/* Send button positioned inside input - ENABLED STATE (normal) */
.sendButtonInline {
  position: absolute;
  right: 2px;
  top: 50%;
  transform: translateY(-50%);
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-primary, #fff);
  background-color: var(--button-bg-color, rgba(87, 157, 152, 0.75));
  border: 1px solid transparent;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.2s ease;
  z-index: 5;
}

/* HOVER on enabled state */
.sendButtonInline:hover:not(:disabled) {
  color: var(--text-primary, #fff);
  background-color: var(--button-hover-bg-color, rgba(107, 168, 163, 0.9));
  border-color: var(--button-hover-border-color, rgba(255, 255, 255, 0.3));
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.2);
}

/* DISABLED STATE - completely hide the button */
.sendButtonInline:disabled {
  display: none;
}

/* Left side buttons */
.leftButtons {
  display: flex;
  gap: 8px;
  align-items: center;
  margin-top: 8px;
}

/* Right side buttons */
.rightButtons {
  display: flex;
  gap: 8px;
  align-items: center;
  margin-top: 8px;
  margin-left: auto;
}

/* Buttons in a row */
.actionRow {
  display: flex;
  justify-content: space-between;
  width: 100%;
  align-items: center;
  height: 36px;
}

/* General Action Button Style */
.actionButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  background-color: transparent;
  color: var(--button-text-color, #999);
  border: 2px solid var(--button-border-color, #4a4a4a);
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 36px;
  min-height: 36px;
  flex-shrink: 0;
}

.actionButton:hover:not(:disabled) {
  background-color: var(--button-hover-bg-color, rgba(255, 255, 255, 0.1));
  color: var(--text-primary, #fff);
}

.actionButton:active:not(:disabled) {
  transform: scale(0.95);
}

.actionButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Button with text (like "Reason") */
.textButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 6px 14px;
  background-color: transparent;
  color: var(--button-text-color, #999);
  border: 2px solid var(--button-border-color, #4a4a4a);
  border-radius: 18px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.9rem;
  gap: 6px;
}

.textButton .buttonText {
  margin-left: 4px;
  white-space: nowrap;
}

.textButton:hover:not(:disabled) {
  background-color: var(--button-hover-bg-color, rgba(255, 255, 255, 0.1));
  color: var(--text-primary, #fff);
}

/* Icon-only button style for mobile */
.iconOnlyButton {
  padding: 8px;
  border-radius: 50%;
  width: 36px;
  height: 36px;
  font-size: 0;
}

.iconOnlyButton .buttonText {
  display: none;
}

/* New Chat Button (Plus) */
.newChatButton {
  color: #999;
}

/* Upload button styling */
.uploadButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: transparent;
  color: var(--button-text-color, #999);
  border: 2px solid var(--button-border-color, #4a4a4a);
  cursor: pointer;
  transition: all 0.2s ease;
  flex-shrink: 0;
}

.uploadButton:hover:not(:disabled) {
  background-color: var(--button-hover-bg-color, rgba(255, 255, 255, 0.1));
  color: var(--text-primary, #fff);
}

.uploadButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* AI model button (dotted pattern) */
.modelButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: var(--model-button-bg, #fff);
  color: var(--model-button-color, #1a1a1a);
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
}

/* Image Preview Container */
.imagePreviewContainer {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  padding: 8px;
  background-color: var(--input-bg-color, #303030);
  border-radius: 8px 8px 0 0;
  border: 1px solid var(--border-color, #3f3f3f);
  border-bottom: none;
  max-height: 150px;
  overflow-y: auto;
  z-index: 10;
  margin-bottom: 4px;
}

/* Image Preview Item */
.imagePreviewItem {
  position: relative;
  width: 80px;
  height: 80px;
  border-radius: 4px;
  overflow: hidden;
  border: 1px solid var(--border-color, #3a3a3a);
}

/* Image Preview Thumbnail */
.imagePreviewThumbnail {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Remove Image Button */
.removeImageButton {
  position: absolute;
  top: 4px;
  right: 4px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease;
}

.removeImageButton:hover {
  background-color: rgba(0, 0, 0, 0.7);
}

/* Edit mode styles */
.inputContainer.editing {
  border: 1px solid var(--edit-border-color, #4a4a4a);
  background-color: var(--edit-bg-color, #2f2f2f);
}

.cancelButton {
  color: var(--cancel-color, #ff6b6b);
}

.cancelButton:hover {
  background-color: var(--cancel-hover-bg, rgba(255, 107, 107, 0.1));
}

/* Make placeholder text more visible in edit mode */
.inputContainer.editing .chatInput::placeholder {
  color: var(--edit-placeholder-color, #aaa);
  opacity: 0.8;
  font-style: italic;
}

/* Responsive adjustments */
@media (max-width: 600px) {
  .actionRow {
    flex-wrap: wrap;
    gap: 10px;
  }
  
  .leftButtons, .rightButtons {
    justify-content: center;
    width: 100%;
    margin-top: 5px;
  }
  
  /* Convert text buttons to icon buttons on mobile */
  .textButton {
    padding: 8px;
    border-radius: 50%;
    width: 36px;
    height: 36px;
  }
  
  .textButton .buttonText {
    display: none;
  }
  
  /* Ensure all buttons have consistent spacing */
  .actionButton, .uploadButton, .textButton, .modelButton {
    margin: 0 4px;
  }

  /* Reduce input container height in mobile view */
  .inputContainer {
    padding: 8px;
    padding-right: 6px;
  }

  /* Reduce input area height for mobile */
  .chatInput {
    height: 40px;
    min-height: 20px;
    max-height: 120px;
    padding: 8px;
    padding-right: 44px;
    font-size: 0.95rem;
  }

  /* Make send button slightly smaller but with a larger touch target */
  .sendButtonInline {
    width: 36px;
    height: 36px;
    right: 2px;
    /* Add a pseudo-element for larger touch target without changing visual size */
    position: relative;
  }
  
  /* Invisible touch target extension */
  .sendButtonInline::before {
    content: '';
    position: absolute;
    top: -8px;
    right: -8px;
    bottom: -8px;
    left: -8px;
    z-index: -1;
  }
}

/* Add this CSS for the stop button */
.stopButton {
  background-color: #f44336 !important;
  color: white !important;
}

.stopButton:hover {
  background-color: #d32f2f !important;
} 