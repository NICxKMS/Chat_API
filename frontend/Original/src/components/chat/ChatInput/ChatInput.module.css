.inputContainer {
  display: flex;
  align-items: center;
  width: 100%;
  gap: 8px;
  padding: 12px;
  background-color: var(--elevated-bg);
  border-top: 1px solid var(--border-color);
  position: relative;
}

.chatInput {
  flex-grow: 1;
  /* Remove border */
  border: none;
  border-radius: 12px;
  padding: 0.875rem 1rem;
  background-color: var(--input-bg);
  color: var(--text);
  font-family: inherit;
  font-size: 1rem;
  resize: none;
  min-height: 2.75rem;
  max-height: 200px;
  overflow-y: auto;
  line-height: 1.5;
  /* Update transition to include border-color */
  transition: border-color var(--theme-transition-duration) var(--theme-transition-timing),
              /* Update box-shadow transition */
              box-shadow var(--theme-transition-duration) var(--theme-transition-timing),
              background-color var(--theme-transition-duration) var(--theme-transition-timing);
  /* Update shadow */
  box-shadow: var(--shadow);
}

.chatInput:focus {
  outline: none;
  border-color: transparent;
  /* Update focus shadow slightly */
  box-shadow: 0 0 0 3px rgba(var(--primary-rgb), 0.2), var(--shadow);
}

.chatInput:disabled {
  background-color: var(--hover);
  cursor: not-allowed;
  opacity: 0.7;
}

/* Style placeholder text */
.chatInput::placeholder {
  color: var(--secondary-text);
  opacity: 0.7;
}

/* General Action Button Style (like controls) */
.actionButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  /* Match control button style */
  border-radius: 12px;
  border: 1px solid var(--border-pronounced);
  background-color: var(--elevated-bg);
  color: var(--secondary-text);
  box-shadow: var(--shadow);
  cursor: pointer;
  /* Update transition */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing),
              border-color var(--theme-transition-duration) var(--theme-transition-timing),
              box-shadow var(--theme-transition-duration) var(--theme-transition-timing),
              transform 0.2s ease;
  min-width: 36px;
  min-height: 36px;
  flex-shrink: 0;
}

.actionButton:hover:not(:disabled) {
  /* Match control button hover */
  background-color: color-mix(in srgb, var(--elevated-bg) 95%, black 5%);
  color: var(--text);
  border-color: var(--border-pronounced);
  box-shadow: var(--shadow);
}

.actionButton:active:not(:disabled) {
  /* Match control button active */
  transform: scale(0.98);
  box-shadow: var(--shadow-sm);
}

.actionButton:disabled {
  /* Match control button disabled */
  opacity: 0.5;
  cursor: not-allowed;
  box-shadow: none;
}

/* New Chat Button Specific (if any needed later) */
.newChatButton {
  /* Add specific overrides if needed */
}

.sendButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem; /* Adjust padding as needed */
  /* Match control button style */
  border-radius: 12px;
  border: 1px solid var(--border-pronounced);
  background: var(--button-bg); /* Keep primary color for send? Or use input-bg? Let's try input-bg first */
  background-color: var(--elevated-bg);
  color: var(--secondary-text); /* Match text color */
  box-shadow: var(--shadow);
  font-weight: 500;
  cursor: pointer;
  /* Update transition */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing),
              border-color var(--theme-transition-duration) var(--theme-transition-timing),
              opacity 0.2s ease,
              transform 0.3s ease,
              box-shadow var(--theme-transition-duration) var(--theme-transition-timing);
  flex-shrink: 0;
  position: relative;
  overflow: hidden;
}

.sendButton:hover:not(:disabled) {
  /* Match control button hover */
  background-color: color-mix(in srgb, var(--elevated-bg) 95%, black 5%);
  color: var(--text);
  border-color: var(--border-pronounced);
  box-shadow: var(--shadow);
  transform: translateY(0); /* Remove lift maybe? */
}

.sendButton:active:not(:disabled) {
  /* Match control button active */
  transform: scale(0.98);
  box-shadow: var(--shadow-sm);
}

.sendButton:disabled {
  /* Match control button disabled */
  opacity: 0.5;
  cursor: not-allowed;
  background: var(--elevated-bg); /* Ensure disabled bg matches */
  border-color: var(--border-pronounced); /* Keep border */
  box-shadow: none;
}

/* Styles for icon inside send button */
.sendButton svg {
  width: 18px;
  height: 18px;
}

/* Responsive adjustments */
@media (max-width: 480px) {
  .inputContainer {
    padding: 0.75rem;
    gap: 0.5rem;
  }

  .chatInput {
    font-size: 0.95rem;
    padding: 0.75rem;
    border-radius: 10px;
  }
  
  .sendButton {
    width: 40px;
    height: 40px;
  }
  
  .sendIcon {
    width: 18px;
    height: 18px;
  }

  /* Remove specific responsive styles for actionButton to match controlButton */
  /* 
  .actionButton {
    min-width: 32px; 
    min-height: 32px;
    padding: 0.4rem;
  }
  */
} 

.inputWrapper {
  display: flex;
  align-items: flex-end; /* Align items to bottom for textarea + button */
  position: relative;
  border-radius: 10px; /* Match parent .inputArea */
  background-color: var(--elevated-bg); /* Use elevated background */
  padding: 0.5rem;
  /* Define base border using standard variable */
  border: 1px solid var(--border);
  /* Ensure transition includes border-color */
  transition: border-color var(--theme-transition-duration) var(--theme-transition-timing),
              box-shadow 0.2s ease,
              background-color var(--theme-transition-duration) var(--theme-transition-timing);
}

/* Style when focused */
.inputWrapper:focus-within {
  border-color: rgb(var(--primary-rgb));
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.2);
}

.textarea {
  /* ... other styles ... */
  /* Use theme variables */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing);
}

.sendButton {
  /* ... other styles ... */
  /* Combine all with theme color */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing),
              opacity 0.2s ease;
}

.stopButton {
  /* ... other styles ... */
  /* Combine all with theme color */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing),
              opacity 0.3s ease;
}

.newChatButton {
  /* ... other styles ... */
  /* Combine all with theme color */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing),
              border-color var(--theme-transition-duration) var(--theme-transition-timing),
              opacity 0.3s ease;
}

.tooltip {
  /* ... other styles ... */
  /* Combine all with theme color */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing),
              opacity 0.3s ease;
}

/* Image Upload Button */
.uploadButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: var(--button-background);
  color: var(--text-color);
  border: none;
  cursor: pointer;
  transition: background-color 0.2s ease;
  flex-shrink: 0;
}

.uploadButton:hover {
  background-color: var(--button-hover-background);
}

.uploadButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Image Preview Container */
.imagePreviewContainer {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  padding: 8px;
  background-color: var(--background-color);
  border-bottom: 1px solid var(--border-color);
  max-height: 150px;
  overflow-y: auto;
}

/* Image Preview Item */
.imagePreviewItem {
  position: relative;
  width: 80px;
  height: 80px;
  border-radius: 4px;
  overflow: hidden;
  border: 1px solid var(--border-color);
}

/* Image Preview Thumbnail */
.imagePreviewThumbnail {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Remove Image Button */
.removeImageButton {
  position: absolute;
  top: 4px;
  right: 4px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease;
}

.removeImageButton:hover {
  background-color: rgba(0, 0, 0, 0.7);
}

/* Adjust textarea when images are present */
.imagePreviewContainer + .chatInput {
  margin-top: 8px;
}

/* Ensure proper spacing when both new chat and upload buttons are present */
.newChatButton + .uploadButton {
  margin-left: 4px;
} 