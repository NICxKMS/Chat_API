.message {
  display: flex;
  gap: 1rem;
  padding: 1rem;
  animation: fadeIn 0.3s ease-in-out;
  border-radius: 12px;
  transition: all 0.3s ease;
  align-items: flex-start;
}

/* Message variants based on role */
.userMessage {
  background-color: var(--message-user-bg);
  align-self: flex-end;
  margin-left: auto;
  border-bottom-right-radius: 4px;
  flex-direction: row;
}

.assistantMessage {
  background-color: var(--message-assistant-bg);
  align-self: flex-start;
  margin-right: auto;
  border-bottom-left-radius: 4px;
  flex-direction: row;
}

.systemMessage {
  background-color: var(--hover);
  align-self: center;
  max-width: 85%;
  font-style: italic;
  opacity: 0.9;
}

.errorMessage {
  background-color: rgba(var(--error-rgb), 0.1);
  color: rgb(var(--error-rgb));
  align-self: center;
  border: 1px solid rgba(var(--error-rgb), 0.3);
  max-width: 85%;
}

/* Avatar styles */
.avatar {
  width: 36px;
  height: 36px;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  color: var(--text);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.avatar::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0.8;
}

.avatar svg {
  width: 20px;
  height: 20px;
  position: relative;
  z-index: 1;
}

.userMessage .avatar {
  background: var(--gradient-primary);
  color: var(--button-text);
  order: 2;
}

.assistantMessage .avatar {
  background: var(--gradient-accent);
  color: white;
}

.systemMessage .avatar {
  background-color: var(--hover);
  color: var(--secondary-text);
  border: 1px solid var(--border);
}

.errorMessage .avatar {
  background-color: rgb(var(--error-rgb));
  color: white;
}

/* Added wrapper for content and metrics */
.messageContentWrapper {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  min-width: 0; /* Prevent flex overflow issues */
}

/* Updated message content styles */
.messageContent {
  /* flex-grow: 1;  Removed - handled by wrapper */
  overflow-wrap: break-word;
  word-break: break-word;
  line-height: 1.6;
  /* Ensure markdown elements have consistent spacing */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
}

/* Streaming content styles */
.streamingContent {
  font-family: var(--font-mono);
  line-height: 1.5;
  white-space: pre-wrap;
  margin: 0;
  padding: 0;
  position: relative;
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  transform: translateZ(0);
  backface-visibility: hidden;
  will-change: contents;
}

/* Optimized for smooth rendering with typing animation */
.streamingContent::after {
  content: '|';
  display: inline-block;
  vertical-align: middle;
  opacity: 0.8;
  margin-left: 1px;
  animation: cursor-blink 0.8s step-end infinite;
  color: var(--text-color);
}

@keyframes cursor-blink {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 0; }
}

/* Word typing animation */
@keyframes word-appear {
  from { 
    opacity: 0.7; 
    transform: translateY(3px);
  }
  to { 
    opacity: 1; 
    transform: translateY(0);
  }
}

/* Auto-scroll container for long responses */
.streamingContent {
  overflow-y: auto;
  max-height: 100%;
  scroll-behavior: smooth;
}

/* Highlight word being typed */
.typingWord {
  color: var(--primary-color);
  animation: word-appear 0.2s ease-out forwards;
  display: inline-block;
}

/* Target elements generated by ReactMarkdown */
.messageContent > *:first-child {
  margin-top: 0;
}

.messageContent > *:last-child {
  margin-bottom: 0;
}

.messageContent p {
  margin: 0.75rem 0;
}

.messageContent ul,
.messageContent ol {
  margin: 0.75rem 0;
  padding-left: 1.5rem;
}

.messageContent li {
  margin-bottom: 0.25rem;
}

.messageContent blockquote {
  margin: 0.75rem 0;
  padding-left: 1rem;
  border-left: 3px solid var(--border);
  color: var(--secondary-text);
  font-style: italic;
}

.messageContent pre {
  /* Remove default pre margin if handled by codeBlockContainer */
  margin: 0; 
}

.userMessage .messageContentWrapper {
  order: 1;
}

/* Updated Code block styles */
.codeBlockContainer { /* Renamed from .codeBlock */
  margin: 1rem 0;
  background-color: var(--code-bg);
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid var(--border);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  position: relative; /* For copy button positioning if needed */
}

.codeHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.75rem 1rem;
  background-color: rgba(0, 0, 0, 0.1);
  border-bottom: 1px solid var(--border);
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
}

.language {
  font-size: 0.85rem;
  font-weight: 600;
  color: var(--secondary-text);
  text-transform: uppercase;
}

.copyButton {
  /* Styles adjusted for better look */
  background: none;
  border: 1px solid var(--border);
  color: var(--secondary-text);
  font-size: 0.8rem;
  cursor: pointer;
  padding: 0.3rem 0.6rem;
  border-radius: 4px;
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing);
  display: inline-flex; /* Use inline-flex */
  align-items: center;
  gap: 5px; /* Slightly more gap */
}

.copyButton:hover {
  background-color: var(--hover);
  border-color: var(--border-hover);
  color: var(--text);
}

.copyIcon {
  width: 14px;
  height: 14px;
}

.pre {
  margin: 0;
  padding: 1rem; /* Consistent padding */
  overflow-x: auto;
  font-size: 0.875rem; /* Slightly smaller code font */
  line-height: 1.5;
  scrollbar-width: thin; /* Style scrollbar */
  scrollbar-color: var(--scroll-thumb) var(--scroll-track);
}

/* Use className from CodeBlock component for inline code */
.inlineCode {
  font-family: var(--code-font-family);
  background-color: var(--code-bg);
  padding: 0.1em 0.4em;
  border-radius: 4px;
  font-size: 0.9em;
  border: 1px solid var(--border);
}

/* General text content - Already handled by targeting p, ul etc above */
/* .messageContent p { ... } */

/* Link styling */
.messageContent a {
  color: rgb(var(--primary-rgb));
  text-decoration: none;
  position: relative;
  display: inline-block;
  transition: all 0.2s ease;
}

.messageContent a::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: rgb(var(--primary-rgb));
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

.messageContent a:hover {
  text-decoration: none;
}

.messageContent a:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

/* Metrics Container styles */
.metricsContainer {
  font-size: 0.75rem; /* Smaller font */
  color: var(--secondary-text);
  margin-top: 0.75rem; /* Space above metrics */
  padding-top: 0.5rem; /* Space inside border */
  border-top: 1px dashed var(--border); /* Separator line */
  display: flex;
  gap: 0.75rem; /* Spacing between metrics */
  flex-wrap: wrap; /* Allow wrapping on small screens */
  align-items: center;
  opacity: 0.85;
  transition: opacity 0.2s ease;
}

.metricsContainer:hover {
  opacity: 1;
}

.metric {
  display: flex;
  align-items: center;
  background-color: var(--hover);
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  white-space: nowrap; /* Prevent individual metric wrapping */
  gap: 0.25rem;
  font-family: var(--font-mono);
  border: 1px solid var(--border);
}

.metricIcon {
  margin-right: 0.25rem;
  color: var(--secondary-text);
}

.generatingIndicator {
  display: flex;
  align-items: center;
  background-color: rgba(var(--primary-rgb), 0.1);
  color: rgb(var(--primary-rgb));
  border-color: rgba(var(--primary-rgb), 0.3);
  gap: 0.25rem;
}

.generatingDot {
  width: 8px;
  height: 8px;
  background-color: rgb(var(--primary-rgb));
  border-radius: 50%;
  margin-right: 0.25rem;
  animation: pulseDot 1.5s infinite;
}

@keyframes pulseDot {
  0% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.2);
    opacity: 1;
  }
  100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
}

/* Responsive adjustments for metrics */
@media (max-width: 768px) {
  .metricsContainer {
    font-size: 0.7rem;
    gap: 0.5rem;
  }
  
  .metric {
    padding: 0.2rem 0.4rem;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .message {
    gap: 0.75rem;
    padding: 0.75rem;
    max-width: 98%;
  }
  
  .avatar {
    width: 32px;
    height: 32px;
  }
  
  .avatar svg {
    width: 18px;
    height: 18px;
  }
  
  .codeBlockContainer {
    margin: 0.75rem 0;
  }
  
  .codeHeader {
    padding: 0.5rem 0.75rem;
  }
  
  .pre {
    padding: 0.75rem;
  }
  
  .code {
    font-size: 0.85rem;
  }
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Ensure system/error messages take full available width within their constraints */
.systemMessage,
.errorMessage {
  align-self: stretch;
  margin-left: auto;
  margin-right: auto;
  flex-direction: row;
}

/* Use theme variables */
.codeBlockHeader {
  /* ... other styles ... */
  /* Use theme variables */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
}

.messageActions button {
  /* ... other styles ... */
  /* Use theme variables */
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing);
} 