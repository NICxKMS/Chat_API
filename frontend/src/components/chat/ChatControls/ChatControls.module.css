.controls {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
}

.controlButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  border-radius: 12px;
  border: 1px solid var(--border-pronounced);
  background-color: var(--input-bg);
  color: var(--secondary-text);
  cursor: pointer;
  box-shadow: var(--shadow);
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing),
              color var(--theme-transition-duration) var(--theme-transition-timing),
              border-color var(--theme-transition-duration) var(--theme-transition-timing),
              box-shadow var(--theme-transition-duration) var(--theme-transition-timing),
              transform 0.2s ease;
  min-width: 36px;
  min-height: 36px;
  flex-shrink: 0;
}

.controlButton:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--input-bg) 95%, black 5%);
  color: var(--text);
  border-color: var(--border-pronounced);
  box-shadow: var(--shadow);
}

.controlButton:active:not(:disabled) {
  transform: scale(0.98);
  box-shadow: var(--shadow-sm);
}

.controlButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  box-shadow: none;
}

.controlIcon {
  width: 18px;
  height: 18px;
}

/* Specific button styles */
.stopButton {
  background-color: var(--status-offline);
  color: white;
  border-color: var(--status-offline);
}

.stopButton:hover {
  background-color: #d32f2f; /* Darker red */
}

/* Remove media query for hiding text */
/* @media (max-width: 480px) { ... } */

/* Remove all styles for moreActionsContainer, actionsMenu, menuItem, etc. */

/* Restore More Actions styles */
.moreActionsContainer {
  position: relative; 
  display: flex; 
  align-items: center;
}

.moreActionsButton {
  /* Always rendered, hidden on desktop */
}

/* Hide More Actions button on desktop */
@media (min-width: 769px) {
  .moreActionsContainer {
    display: none;
  }
}

.actionsMenu {
  position: absolute;
  bottom: calc(100% + 0.5rem);
  right: 0;
  background-color: var(--card-bg);
  border: 1px solid var(--border-pronounced);
  border-radius: 8px;
  box-shadow: var(--shadow-lg);
  padding: 0.5rem;
  gap: 0.25rem;
  display: flex;
  flex-direction: column;
  z-index: 20;
  width: auto;
  max-width: 200px;
  opacity: 0;
  transform: translateY(10px);
  animation: menuFadeIn 0.15s ease forwards;
}

@keyframes menuFadeIn {
  to { opacity: 1; transform: translateY(0); }
}

/* Adapt padding on very small screens */
@media (max-width: 480px) {
  .actionsMenu {
    padding: 0.3rem;
  }
}

.menuItem {
  display: inline-flex; 
  align-items: center;
  justify-content: center; 
  padding: 0.6rem;
  background-color: transparent;
  border: none;
  color: var(--text);
  cursor: pointer;
  width: 40px;
  height: 40px;
  min-width: auto;
  border-radius: 6px;
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
  overflow: visible; 
  position: relative; 
}

.menuItem:hover {
  background-color: var(--hover);
}

.menuItem svg {
  flex-shrink: 0;
  opacity: 0.9; 
  width: 18px;
  height: 18px;
  margin: 0;
}

/* Remove text reveal styles if they exist */
/* 
.menuItemText { ... } 
.menuItem:hover .menuItemText { ... }
*/

/* Ensure wrappers fill the small square */
.menuItem > div { 
  display: flex;
  align-items: center;
  justify-content: center; 
  width: 100%; 
  height: 100%; 
}

/* Specific style for API Status menu item */
.apiStatusMenuItem {
  /* Base menuItem styles should cover centering/size */
}