/* Animation keyframes */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(5px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes cursor-blink {
  0%,
  100% {
    opacity: 0.8;
  }

  50% {
    opacity: 0;
  }
}

@keyframes pulse {
  0% {
    border-left-color: var(--accent-color);
  }

  50% {
    border-left-color: transparent;
  }

  100% {
    border-left-color: var(--accent-color);
  }
}

/* Base message container */
.ChatMessage {
  display: flex;
  padding: var(--space-md) 0;
  animation: fadeIn 0.2s ease-out;
  border-radius: var(--radius-lg);
  transition: background-color var(--transition-duration-short) ease;
  align-items: flex-start;
  will-change: transform, opacity;
  contain: content;
  position: relative;
}

/* Message variants based on role */
.ChatMessage--user {
  align-self: flex-end;
  margin-left: auto;
  max-width: 70%;
  flex-direction: column;
  align-items: flex-end;
  background-color: transparent;
  border-radius: 0;
  padding: 0;
}

.ChatMessage--assistant {
  align-self: flex-start;
  margin-right: auto;
  border-bottom-left-radius: var(--radius-xs);
  flex-direction: row;
  max-width: 768px;
  border-left-color: var(--accent-color);
}

.ChatMessage--system {
  background-color: var(--hover);
  align-self: center;
  max-width: 85%;
  font-style: italic;
  opacity: 0.9;
}

.ChatMessage--error {
  background-color: var(--error-bg);
  color: var(--error-color);
  align-self: center;
  border: var(--border-width-sm) solid var(--error-border);
  max-width: 85%;
}

/* Avatar styles */
.ChatMessage__avatar {
  width: 36px;
  height: 36px;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-full);
  color: var(--text);
  transition: all var(--transition-duration-medium) ease;
  position: relative;
  overflow: hidden;
}

.ChatMessage__avatar::before {
  content: '';
  position: absolute;
  inset: 0;
  opacity: 0.8;
}

.ChatMessage__avatar svg {
  width: var(--space-lg);
  height: var(--space-lg);
  position: relative;
  z-index: 1;
}

/* Style when using a user photo as avatar */
.ChatMessage__avatarImg {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: var(--radius-full);
}

.ChatMessage--user .ChatMessage__avatar {
  background: var(--gradient-primary);
  color: var(--button-text);
  order: 2;
}

.ChatMessage--assistant .ChatMessage__avatar {
  background: var(--gradient-accent);
  color: white;
  display: none; /* Hide assistant avatar */
}

.ChatMessage--system .ChatMessage__avatar {
  background-color: var(--hover);
  color: var(--secondary-text);
  border: var(--border-width-sm) solid var(--border);
}

.ChatMessage--error .ChatMessage__avatar {
  background-color: var(--error-color);
  color: var(--bg);
}

/* Message content container */
.ChatMessage__contentWrapper {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  min-width: 0;
  width: 100%;
  position: relative;
  padding: 0;
}

/* Wrapper for avatar and message content */
.ChatMessage__body {
  display: flex;
  gap: var(--space-md);
  width: 100%;
}

/* User bubble wrapper for avatar and content */
.ChatMessage--user .ChatMessage__body {
  background-color: var(--message-user-bg);
  border-radius: var(--radius-lg);
  border-bottom-right-radius: var(--radius-xs);
  padding: 16px;
  width: 100%;
}

/* Copy message button - BASE STYLES */
.ChatMessage__copyMessageButton {
  opacity: 0;
  transition: opacity var(--transition-duration-short) ease;
  background-color: var(--hover);
  border: var(--border-width-sm) solid var(--border-color);
  border-radius: var(--radius-xs);
  padding: var(--space-xxs);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  z-index: 5;
  flex-shrink: 0; /* Prevent shrinking */
}

/* Show on hover of the wrapper */
.ChatMessage__contentWrapper:hover .ChatMessage__copyMessageButton {
  opacity: 1;
}

/* Style for button when at bottom-right */
.ChatMessage__copyMessageButtonBottomRight {
  position: absolute;
  bottom: var(--space-xs);
  right: var(--space-xs);
}

/* Style for button when inside metrics container */
.ChatMessage__copyMessageButtonInMetrics {
  /* No absolute positioning needed, flexbox in metrics container handles it */
  margin-left: auto; /* Push to the right end of the flex container */
  align-self: center; /* Vertically center within metrics container */
}

.ChatMessage__copyMessageButton:hover {
  background-color: var(--active);
  color: var(--text-primary);
}

.ChatMessage--user .ChatMessage__contentWrapper {
  order: 1;
}

/* Make copy button always visible in user messages, not just on hover */
.ChatMessage--user .ChatMessage__copyMessageButton {
  opacity: 1;
}

/* Message content */
.ChatMessage__content {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
  width: 100%;
  overflow-wrap: break-word;
  line-height: 1.6;
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
}

/* Base markdown container generated by react-markdown */
.markdown {
  font-family: var(--font-sans);
  line-height: 1.6;
  color: var(--text-primary);
  width: 100%;
}

/* --- ADDED STYLES for paragraph/list spacing --- */
.ChatMessage__content p {
  margin-bottom: var(--space-md);
}

.ChatMessage__content ul,
.ChatMessage__content ol {
  margin-top: var(--space-sm);
  margin-bottom: var(--space-sm);
  padding-left: var(--space-xxxl);
}

.ChatMessage__content li {
  margin-bottom: var(--space-xxs);
}

/* Prevent extra space after the very last element in a message */
.ChatMessage__content > *:last-child {
    margin-bottom: 0;
}

/* Scrollable tables and code blocks for user messages */
.ChatMessage--user .ChatMessage__content table {
    display: block;
    overflow-x: auto;
    width: 100%;
}

.ChatMessage--user .ChatMessage__content pre {
    overflow-x: auto;
}

/* --- END ADDED STYLES --- */

/* Streaming content overall wrapper */
.ChatMessage__streamingContent {
  white-space: normal;
  position: relative;
  overflow-wrap: break-word;
  word-wrap: break-word;
  transform: translateZ(0);
  backface-visibility: hidden;
  will-change: contents;
  font-size: 1rem;
  line-height: 1.5;
  contain: content;
  min-height: 1.5em; /* Ensure there's always space for content */
  transition: none; /* No transitions that might cause content to disappear */
}

/* Typing cursor - only show during streaming */
.ChatMessage__streamingContent--streaming::after {
  content: "";
  display: inline-block;
  width: 0.5em;
  height: 1em;
  background-color: var(--text-primary);
  margin-left: 0.2em;
  margin-bottom: -0.2em;
  vertical-align: text-bottom;
  animation: cursor-blink 1s infinite;
  border-radius: 1px;
}

.ChatMessage__streamingContent:has(.incompleteCodeBlock)::after {
  display: none;
}

/* General styles for elements generated by react-markdown (global styling) */
/* These elements should inherit color from .markdown or specific overrides */
/*
.ChatMessage__streamingContent p,
.ChatMessage__streamingContent ul,
.ChatMessage__streamingContent ol,
.ChatMessage__streamingContent li,
.ChatMessage__streamingContent blockquote,
.ChatMessage__streamingContent h1,
.ChatMessage__streamingContent h2,
.ChatMessage__streamingContent h3,
.ChatMessage__streamingContent h4,
.ChatMessage__streamingContent h5,
.ChatMessage__streamingContent h6,
.ChatMessage__streamingContent table,
.ChatMessage__streamingContent pre,
.ChatMessage__streamingContent code {
  color: var(--text-primary);
}
*/

/* --- MODIFIED STYLES for paragraph/list spacing --- */
.ChatMessage__streamingContent p {
  margin-top: 0.8rem;
  margin-bottom: 0;
}

/* Ensure first paragraph doesn't have extra top margin */
.ChatMessage__streamingContent p:first-child {
  margin-top: 0;
}

/* Ensure last paragraph doesn't have extra bottom margin (handled by *:last-child rule below) */

.ChatMessage__streamingContent ul,
.ChatMessage__streamingContent ol {
  margin-top: 0.75rem;
  margin-bottom: 1rem;
  padding-left: 1.75rem;
}

.ChatMessage__streamingContent ul {
  list-style-type: disc;
}

.ChatMessage__streamingContent ol {
  list-style-type: decimal;
}

.ChatMessage__streamingContent li {
  margin-bottom: 0.4rem;
}

/* Prevent extra space after the very last element in a message, applied more globally */
.ChatMessage__streamingContent > *:last-child {
    margin-bottom: 0 !important;
}

/* --- END MODIFIED STYLES --- */

/* --- ADJUSTED SPACING FOR OTHER ELEMENTS --- */
.ChatMessage__streamingContent h1,
.ChatMessage__streamingContent h2,
.ChatMessage__streamingContent h3,
.ChatMessage__streamingContent h4,
.ChatMessage__streamingContent h5,
.ChatMessage__streamingContent h6 {
  font-weight: 600;
  line-height: 1.3;
  margin-top: var(--space-xl);
  margin-bottom: var(--space-md);
  color: var(--text-primary);
  scroll-margin-top: 100px;
}

.ChatMessage__streamingContent h1 {
  font-size: var(--font-size-xxxxl);
  padding-bottom: 0.3rem;
  border-bottom: var(--border-width-sm) solid var(--border-color);
}

.ChatMessage__streamingContent h2 {
  font-size: var(--font-size-xxxl);
  padding-bottom: 0.2rem;
}

.ChatMessage__streamingContent h3 {
  font-size: var(--font-size-xxl);
}

.ChatMessage__streamingContent h4 {
  font-size: var(--font-size-xl);
}

.ChatMessage__streamingContent h5 {
  font-size: var(--font-size-lg);
}

.ChatMessage__streamingContent h6 {
  font-size: var(--font-size-md);
}

.ChatMessage__streamingContent blockquote {
  margin-top: 1rem;
  margin-bottom: 1rem;
  padding: 0.75rem 1.2rem;
  border-left: 4px solid var(--blockquote-border, #dfe2e5);
  background-color: var(--blockquote-bg, #f6f8fa);
  color: var(--text-secondary, #24292e);
  border-radius: 3px;
}

:global(body.dark-mode) .ChatMessage__streamingContent blockquote {
  border-left: 4px solid var(--blockquote-border-dark, #343b43);
  background-color: var(--blockquote-bg-dark, #161b22);
  color: var(--text-secondary-dark, #c9d1d9);
}

.ChatMessage__streamingContent hr {
  height: 0.25em;
  padding: 0;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
  background-color: var(--hr-bg, #dfe2e5);
  border: 0;
  border-radius: 3px;
}

:global(body.dark-mode) .ChatMessage__streamingContent hr {
  background-color: var(--hr-bg-dark, #343b43);
}

.ChatMessage__streamingContent a {
  color: var(--link-color);
  text-decoration: none;
  border-bottom: 1px solid transparent;
  transition: border-color 0.2s ease;
}

.ChatMessage__streamingContent a:hover {
  border-bottom-color: var(--link-color);
}

.ChatMessage__streamingContent img {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  margin: 1rem 0;
}

.ChatMessage__streamingContent del {
  text-decoration: line-through;
  color: var(--text-secondary);
}

.ChatMessage__streamingContent input[type="checkbox"] {
  margin-right: 0.5rem;
}

/* === Table Styles (Refactored) === */
/* Apply to both user (via LazyMarkdownRenderer) and assistant (via StreamingMessage) */
.ChatMessage--user .ChatMessage__content table,
.ChatMessage__streamingContent table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.9rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
  display: block;
  overflow-x: auto; /* Needed for overflow */
  border-radius: 6px;
}

.ChatMessage--user .ChatMessage__content thead,
.ChatMessage__streamingContent thead {
  background-color: var(--table-header-bg);
  border-bottom: 2px solid var(--table-border);
}

.ChatMessage--user .ChatMessage__content th,
.ChatMessage__streamingContent th {
  padding: 0.75rem 1rem;
  text-align: left;
  font-weight: 600;
  font-size: 1rem;
  white-space: nowrap;
  border-top: none;
  border-left: none;
  color: var(--text-primary);
}

.ChatMessage--user .ChatMessage__content th:first-child,
.ChatMessage__streamingContent th:first-child {
  border-left: none;
}

.ChatMessage--user .ChatMessage__content th:last-child,
.ChatMessage__streamingContent th:last-child {
  border-right: none;
}

.ChatMessage--user .ChatMessage__content tr,
.ChatMessage__streamingContent tr {
  border-top: 1px solid var(--table-border); /* Horizontal lines between rows */
}

.ChatMessage--user .ChatMessage__content tbody tr:first-child,
.ChatMessage__streamingContent tbody tr:first-child {
  border-top: none; /* Remove border between thead and first row */
}

.ChatMessage--user .ChatMessage__content td,
.ChatMessage__streamingContent td {
  padding: 0.75rem 1rem;
  text-align: left;
  vertical-align: top;
  border-top: none;
  border-left: none;
  color: var(--text-primary); /* Force text color */
}

/* === Dark Mode Styles === */
/* These elements should inherit color from .markdown or specific overrides */
/*
:global(body.dark-mode) .ChatMessage__streamingContent p,
:global(body.dark-mode) .ChatMessage__streamingContent ul,
:global(body.dark-mode) .ChatMessage__streamingContent ol,
:global(body.dark-mode) .ChatMessage__streamingContent li,
:global(body.dark-mode) .ChatMessage__streamingContent blockquote,
:global(body.dark-mode) .ChatMessage__streamingContent h1,
:global(body.dark-mode) .ChatMessage__streamingContent h2,
:global(body.dark-mode) .ChatMessage__streamingContent h3,
:global(body.dark-mode) .ChatMessage__streamingContent h4,
:global(body.dark-mode) .ChatMessage__streamingContent h5,
:global(body.dark-mode) .ChatMessage__streamingContent h6,
:global(body.dark-mode) .ChatMessage__streamingContent table,
:global(body.dark-mode) .ChatMessage__streamingContent pre,
:global(body.dark-mode) .ChatMessage__streamingContent code {
  color: var(--text-primary);
}
*/

:global(body.dark-mode) .ChatMessage__streamingContent a {
  color: var(--link-color-dark);
}

:global(body.dark-mode) .ChatMessage__streamingContent a:hover {
  border-bottom-color: var(--link-color-dark);
}

:global(body.dark-mode) .ChatMessage__streamingContent del {
  color: var(--text-secondary);
}

/* Dark Mode Table Styles */
/* Apply to both user (via LazyMarkdownRenderer) and assistant (via StreamingMessage) */
:global(body.dark-mode) .ChatMessage--user .ChatMessage__content table,
:global(body.dark-mode) .ChatMessage__streamingContent table {
  border: none;
}

:global(body.dark-mode) .ChatMessage--user .ChatMessage__content thead,
:global(body.dark-mode) .ChatMessage__streamingContent thead {
  background-color: var(--table-header-bg);
  border-bottom: 2px solid var(--table-border-dark);
}

:global(body.dark-mode) .ChatMessage--user .ChatMessage__content tr,
:global(body.dark-mode) .ChatMessage__streamingContent tr {
  border-top: 1px solid var(--table-border-dark);
}

:global(body.dark-mode) .ChatMessage--user .ChatMessage__content th,
:global(body.dark-mode) .ChatMessage--user .ChatMessage__content td,
:global(body.dark-mode) .ChatMessage__streamingContent th,
:global(body.dark-mode) .ChatMessage__streamingContent td {
  color: var(--text-primary);
}

/* Additional rules for nested tables in markdown blocks */
/* These likely only apply to assistant messages, but we include user for consistency */
:global(body.dark-mode) .markdownCodeBlock .ChatMessage--user .ChatMessage__content table,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent table {
  background-color: var(--table-body-bg);
  border: 1px solid var(--table-border-dark);
}

:global(body.dark-mode) .markdownCodeBlock .ChatMessage--user .ChatMessage__content tbody,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent tbody {
  background-color: var(--table-body-bg);
}

:global(body.dark-mode) .markdownCodeBlock .ChatMessage--user .ChatMessage__content tr,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent tr {
  background-color: var(--table-body-bg);
}

:global(body.dark-mode) .markdownCodeBlock .ChatMessage--user .ChatMessage__content tbody tr:nth-child(even),
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent tbody tr:nth-child(even) {
  background-color: var(--table-row-alt-bg);
}

/* Override inline code style when inside table cells */
/* Apply to both user (via LazyMarkdownRenderer) and assistant (via StreamingMessage) */
.ChatMessage--user .ChatMessage__content table th code,
.ChatMessage--user .ChatMessage__content table td code,
.ChatMessage__streamingContent table th code,
.ChatMessage__streamingContent table td code {
  background-color: transparent;
  color: inherit;
  padding: 0;
  font-size: inherit;
  border-radius: 0;
}

/* Explicit override for DARK MODE code inside table cells */
/* Apply to both user (via LazyMarkdownRenderer) and assistant (via StreamingMessage) */
:global(body.dark-mode) .ChatMessage--user .ChatMessage__content table th code,
:global(body.dark-mode) .ChatMessage--user .ChatMessage__content table td code,
:global(body.dark-mode) .ChatMessage__streamingContent table th code,
:global(body.dark-mode) .ChatMessage__streamingContent table td code {
  color: var(--text-primary);
}

/* Ensure links within tables get correct link color */
/* Apply to both user (via LazyMarkdownRenderer) and assistant (via StreamingMessage) */
.ChatMessage--user .ChatMessage__content table th a,
.ChatMessage--user .ChatMessage__content table td a,
.ChatMessage__streamingContent table th a,
.ChatMessage__streamingContent table td a {
  color: var(--link-color);
  border-bottom: 1px solid transparent;
}

.ChatMessage--user .ChatMessage__content table th a:hover,
.ChatMessage--user .ChatMessage__content table td a:hover,
.ChatMessage__streamingContent table th a:hover,
.ChatMessage__streamingContent table td a:hover {
  border-bottom-color: var(--link-color);
}

:global(body.dark-mode) .ChatMessage--user .ChatMessage__content table th a,
:global(body.dark-mode) .ChatMessage--user .ChatMessage__content table td a,
:global(body.dark-mode) .ChatMessage__streamingContent table th a,
:global(body.dark-mode) .ChatMessage__streamingContent table td a {
  color: var(--link-color-dark);
}

:global(body.dark-mode) .ChatMessage--user .ChatMessage__content table th a:hover,
:global(body.dark-mode) .ChatMessage--user .ChatMessage__content table td a:hover,
:global(body.dark-mode) .ChatMessage__streamingContent table th a:hover,
:global(body.dark-mode) .ChatMessage__streamingContent table td a:hover {
  border-bottom-color: var(--link-color-dark);
}

/* Code blocks (Container) */
.codeBlockContainer {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border-radius: 6px;
  overflow: hidden;
  background-color: var(--code-bg);
  border: 1px solid var(--border-color);
  box-shadow: 0 2px 8px rgb(0 0 0 / 12%);
}

.codeBlockContainer:hover {
  box-shadow: 0 4px 12px rgb(0 0 0 / 15%);
}

.codeHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 1rem;
  background-color: var(--code-header-bg);
  border-bottom: 1px solid var(--border-color);
}

.language {
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Copy button for code blocks */
.copyButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  padding: 0.3rem 0.5rem;
  font-size: 0.75rem;
  color: var(--text-secondary);
  background-color: transparent;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.copyButton:hover {
  background-color: var(--hover);
  color: var(--text-primary);
}

.copyButton svg {
  flex-shrink: 0;
}

/* SyntaxHighlighter styles applied to its container */
.pre {
  margin: 0; /* Override default */
  padding: 1rem; /* Override default */
  border-radius: 0 0 6px 6px; /* Ensure consistent radius */
  font-family: var(--code-font);
  font-size: 0.9rem;
  line-height: 1.5;
  overflow-x: auto;
  tab-size: 2;
  background: var(--code-bg); /* Ensure background matches */
}

/* Inline code within general text (react-markdown generated) */
.ChatMessage__streamingContent code {
  font-family: var(--code-font);
  background-color: var(--toggle-bg);
  color: var(--text-primary);
  padding: 0.1rem 0.4rem;
  border-radius: 4px;
  font-size: 0.9em;
  white-space: pre-wrap;
  overflow-wrap: break-word;
}

/* Override for code blocks (SyntaxHighlighter/pre+code) */
.codeBlockContainer code {
  font-family: inherit; /* Inherit from .pre */
  background-color: transparent; /* No background inside code blocks */
  color: inherit; /* Inherit from syntax highlighting */
  padding: 0;
  border-radius: 0;
  font-size: inherit;
  white-space: inherit;
}

/* Special state code blocks */
.incompleteCodeBlock {
  border-left: 3px solid var(--accent-color);
  animation: pulse 2s infinite;
}

/* Styling for rendered markdown within a markdown code block */
.markdownCodeBlock {
  padding: 1rem; /* Match regular code block padding */
  background: var(--code-bg); /* Match regular code block background */
  border-radius: 0 0 6px 6px; /* Match regular code block radius */
}

/* Adjustments for markdown rendered *inside* .markdownCodeBlock */
.markdownCodeBlock .ChatMessage__streamingContent {
  white-space: normal;
}

/* These elements should inherit color from .markdown or specific overrides */
/*
.markdownCodeBlock .ChatMessage__streamingContent p,
.markdownCodeBlock .ChatMessage__streamingContent ul,
.markdownCodeBlock .ChatMessage__streamingContent ol,
.markdownCodeBlock .ChatMessage__streamingContent li,
.markdownCodeBlock .ChatMessage__streamingContent blockquote,
.markdownCodeBlock .ChatMessage__streamingContent h1,
.markdownCodeBlock .ChatMessage__streamingContent h2,
.markdownCodeBlock .ChatMessage__streamingContent h3,
.markdownCodeBlock .ChatMessage__streamingContent h4,
.markdownCodeBlock .ChatMessage__streamingContent h5,
.markdownCodeBlock .ChatMessage__streamingContent h6,
.markdownCodeBlock .ChatMessage__streamingContent table,
.markdownCodeBlock .ChatMessage__streamingContent pre,
.markdownCodeBlock .ChatMessage__streamingContent code {
  color: var(--text-primary);
}

:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent p,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent ul,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent ol,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent li,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent blockquote,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent h1,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent h2,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent h3,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent h4,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent h5,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent h6,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent table,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent pre,
:global(body.dark-mode) .markdownCodeBlock .ChatMessage__streamingContent code {
  color: var(--text-primary);
}
*/

/* Metrics display */
.ChatMessage__metricsContainer {
  font-size: 0.75rem;
  color: var(--secondary-text);
  margin-top: 0.75rem;
  padding-top: 0.5rem;
  border-top: 1px dashed var(--border);
  display: flex;
  gap: var(--space-md);
  flex-wrap: wrap;
  align-items: center;
  opacity: 0.85;
  transition: opacity 0.2s ease;
}

.ChatMessage__metricsContainer:hover {
  opacity: 1;
}

.ChatMessage__metric {
  display: flex;
  align-items: center;
  background-color: var(--hover);
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  white-space: nowrap;
  gap: 0.25rem;
  font-family: var(--font-mono);
  border: 1px solid var(--border);
}

.ChatMessage__metricIcon {
  margin-right: 0.25rem;
  color: var(--secondary-text);
}

.ChatMessage__generatingIndicator {
  display: flex;
  align-items: center;
  background-color: rgb(var(--primary-rgb), 0.1);
  color: rgb(var(--primary-rgb));
  border-color: rgb(var(--primary-rgb), 0.3);
  gap: 0.25rem;
}

.ChatMessage__generatingDot {
  width: var(--space-xs);
  height: var(--space-xs);
  background-color: rgb(var(--primary-rgb));
  border-radius: 50%;
  margin: 0 var(--space-xxs);
  animation: pulseDot 1.5s infinite;
}

@keyframes pulseDot {
  0% {
    transform: scale(0.8);
    opacity: 0.5;
  }

  50% {
    transform: scale(1.2);
    opacity: 1;
  }

  100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
}

/* Responsive adjustments */
@media (width <= 600px) {
  .ChatMessage {
    padding: var(--space-sm);
    gap: var(--space-sm);
    max-width: 98%;
  }

  .ChatMessage--user {
    max-width: 70%;
  }

  .ChatMessage__avatar {
    width: 32px;
    height: 32px;
  }

  .ChatMessage__avatar svg {
    width: var(--space-md);
    height: var(--space-md);
  }

  .codeBlockContainer {
    margin: 0.75rem 0;
  }

  .codeHeader {
    padding: var(--space-xs);
  }

  .pre {
    padding: var(--space-sm);
  }

  .ChatMessage__metricsContainer {
    font-size: var(--font-size-xs);
    gap: var(--space-sm);
  }

  .ChatMessage__metric {
    padding: 0.2rem 0.4rem;
  }
}

/* Edit message button styles - similar to copy button but different position */
.ChatMessage__editMessageButton {
  position: absolute;
  top: var(--space-xxs);
  right: var(--space-xxs);
  opacity: 0;
  transition: opacity var(--transition-duration-short) ease;
  background-color: var(--hover);
  border: var(--border-width-sm) solid var(--border-color);
  border-radius: var(--radius-xs);
  padding: var(--space-xxs);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  z-index: 5;
}

.ChatMessage--user .ChatMessage__content:hover .ChatMessage__editMessageButton {
  opacity: 1;
}

.ChatMessage__editMessageButton:hover {
  background-color: var(--active);
  color: var(--text-primary);
}

/* Actions container for user buttons */
.ChatMessage__actions {
  display: flex;
  gap: var(--space-xs);
  margin-top: var(--space-xs);
}

.ChatMessage__actions .ChatMessage__copyMessageButton,
.ChatMessage__actions .ChatMessage__editMessageButton {
  position: static;
  opacity: 1;
  background-color: transparent;
  border: none;
}

.ChatMessage__actions .ChatMessage__copyMessageButton:hover,
.ChatMessage__actions .ChatMessage__editMessageButton:hover {
  background-color: var(--active);
  border: var(--border-width-sm) solid var(--border-color);
}
