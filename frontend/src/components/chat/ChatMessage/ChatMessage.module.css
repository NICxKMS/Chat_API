/* Animation keyframes */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(5px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes cursor-blink {

  0%,
  100% {
    opacity: 0.8;
  }

  50% {
    opacity: 0;
  }
}

@keyframes pulse {
  0% {
    border-left-color: var(--accent-color);
  }

  50% {
    border-left-color: transparent;
  }

  100% {
    border-left-color: var(--accent-color);
  }
}

/* Base message container */
.message {
  display: flex;
  gap: 1rem;
  padding: 1rem;
  animation: fadeIn 0.2s ease-out;
  border-radius: 12px;
  transition: background-color 0.2s ease;
  align-items: flex-start;
  will-change: transform, opacity;
  contain: content;
  position: relative;
}

/* Message variants based on role */
.userMessage {
  background-color: var(--message-user-bg);
  align-self: flex-end;
  margin-left: auto;
  border-bottom-right-radius: 4px;
  flex-direction: row;
  max-width: 70%;
}

.assistantMessage {
  align-self: flex-start;
  margin-right: auto;
  border-bottom-left-radius: 4px;
  flex-direction: row;
  max-width: 768px;
}

.systemMessage {
  background-color: var(--hover);
  align-self: center;
  max-width: 85%;
  font-style: italic;
  opacity: 0.9;
}

.errorMessage {
  background-color: rgba(var(--error-rgb), 0.1);
  color: rgb(var(--error-rgb));
  align-self: center;
  border: 1px solid rgba(var(--error-rgb), 0.3);
  max-width: 85%;
}

/* Avatar styles */
.avatar {
  width: 36px;
  height: 36px;
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  color: var(--text);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.avatar::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0.8;
}

.avatar svg {
  width: 20px;
  height: 20px;
  position: relative;
  z-index: 1;
}

.userMessage .avatar {
  background: var(--gradient-primary);
  color: var(--button-text);
  order: 2;
}

.assistantMessage .avatar {
  background: var(--gradient-accent);
  color: white;
  display: none; /* Hide assistant avatar */
}

.systemMessage .avatar {
  background-color: var(--hover);
  color: var(--secondary-text);
  border: 1px solid var(--border);
}

.errorMessage .avatar {
  background-color: rgb(var(--error-rgb));
  color: white;
}

/* Message content container */
.messageContentWrapper {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  min-width: 0;
  width: 100%;
  position: relative;
}

/* Copy message button - BASE STYLES */
.copyMessageButton {
  /* Position is now handled by specific classes below */
  /* position: absolute; */
  /* top: 0.5rem; */
  /* right: 0.5rem; */

  opacity: 0;
  transition: opacity 0.2s ease;
  background-color: var(--hover);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 0.3rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  z-index: 5;
  flex-shrink: 0; /* Prevent shrinking */
}

/* Show on hover of the wrapper */
.messageContentWrapper:hover .copyMessageButton {
  opacity: 1;
}

/* Style for button when at bottom-right */
.copyButtonBottomRight {
  position: absolute;
  bottom: 0.5rem; /* Position at bottom */
  right: 0.5rem; /* Position at right */
}

/* Style for button when inside metrics container */
.copyButtonInMetrics {
  /* No absolute positioning needed, flexbox in metrics container handles it */
  margin-left: auto; /* Push to the right end of the flex container */
  align-self: center; /* Vertically center within metrics container */
}

.copyMessageButton:hover {
  background-color: var(--active);
  color: var(--text-primary);
}

.userMessage .messageContentWrapper {
  order: 1;
}

/* Make copy button always visible in user messages, not just on hover */
.userMessage .copyMessageButton {
  opacity: 1;
}

/* Message content */
.messageContent {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 100%;
  overflow-wrap: break-word;
  word-break: break-word;
  line-height: 1.6;
  transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
}

/* Base markdown container generated by react-markdown */
.markdown {
  font-family: var(--font-sans);
  line-height: 1.6;
  color: var(--text-primary);
  width: 100%;
}

/* --- ADDED STYLES for paragraph/list spacing --- */
.messageContent p {
  margin-bottom: 1rem; /* Space below paragraphs */
}

.messageContent ul,
.messageContent ol {
  margin-top: 0.75rem;    /* Space above lists */
  margin-bottom: 0.75rem; /* Space below lists */
  padding-left: 1.75rem;  /* Indentation for lists */
}

.messageContent li {
  margin-bottom: 0.4rem; /* Space below each list item */
}

/* Prevent extra space after the very last element in a message */
.messageContent > *:last-child {
    margin-bottom: 0;
}

/* --- END ADDED STYLES --- */

/* Streaming content overall wrapper */
.streamingContent {
  white-space: normal;
  position: relative;
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  transform: translateZ(0);
  backface-visibility: hidden;
  will-change: contents;
  font-size: 1rem;
  line-height: 1.5;
  contain: content;
  min-height: 1.5em; /* Ensure there's always space for content */
  transition: none; /* No transitions that might cause content to disappear */
}

/* Typing cursor - only show during streaming */
.streamingContent.streaming::after {
  content: '|';
  display: inline-block;
  vertical-align: middle;
  opacity: 0.8;
  margin-left: 1px;
  animation: cursor-blink 0.8s step-end infinite;
  color: var(--text-primary);
}

.streamingContent:has(.incompleteCodeBlock)::after {
  display: none;
}



/* General styles for elements generated by react-markdown (global styling) */
.streamingContent p,
.streamingContent ul,
.streamingContent ol,
.streamingContent li,
.streamingContent blockquote,
.streamingContent h1,
.streamingContent h2,
.streamingContent h3,
.streamingContent h4,
.streamingContent h5,
.streamingContent h6,
.streamingContent table,
.streamingContent pre,
.streamingContent code {
  color: var(--text-primary);
}

/* --- MODIFIED STYLES for paragraph/list spacing --- */
.streamingContent p {
  margin-top: 0.8rem; 
  margin-bottom: 0rem; /* Consistent bottom margin */
}

/* Ensure first paragraph doesn't have extra top margin */
.streamingContent p:first-child {
  margin-top: 0;
}

/* Ensure last paragraph doesn't have extra bottom margin (but will be overridden by *:last-child) */
/* .streamingContent p:last-child {
  margin-bottom: 0;
} */

.streamingContent ul,
.streamingContent ol {
  margin-top: 0.75rem; /* Space above lists */
  margin-bottom: 1rem; /* Consistent bottom margin */
  padding-left: 1.75rem; /* Adjusted padding slightly */
}

.streamingContent ul {
  list-style-type: disc;
}

.streamingContent ol {
  list-style-type: decimal;
}

.streamingContent li {
  margin-bottom: 0.4rem; /* Increased list item bottom margin */
}

/* Prevent extra space after the very last element in a message, applied more globally */
.streamingContent > *:last-child {
    margin-bottom: 0 !important; /* Ensure this overrides everything else */
}
/* --- END MODIFIED STYLES --- */

/* --- ADJUSTED SPACING FOR OTHER ELEMENTS --- */
.streamingContent h1,
.streamingContent h2,
.streamingContent h3,
.streamingContent h4,
.streamingContent h5,
.streamingContent h6 {
  font-weight: 600;
  line-height: 1.3;
  margin-top: 1.5rem; /* More space before headings */
  margin-bottom: 1rem; /* Consistent bottom margin */
  color: var(--text-primary);
  scroll-margin-top: 100px;
}

.streamingContent h1 {
  font-size: 1.75rem;
  padding-bottom: 0.3rem;
  border-bottom: 1px solid var(--border-color);
}

.streamingContent h2 {
  font-size: 1.5rem;
  padding-bottom: 0.2rem;
}

.streamingContent h3 {
  font-size: 1.25rem;
}

.streamingContent h4 {
  font-size: 1rem;
}

.streamingContent h5 {
  font-size: 0.875rem;
}

.streamingContent h6 {
  font-size: 0.85rem;
}

.streamingContent blockquote {
  margin-top: 1rem; /* Space before blockquote */
  margin-bottom: 1rem; /* Consistent bottom margin */
  padding: 0.75rem 1.2rem;
  border-left: 4px solid var(--blockquote-border, #dfe2e5);
  background-color: var(--blockquote-bg, #f6f8fa);
  color: var(--text-secondary, #24292e);
  border-radius: 3px;
}

:global(body.dark-mode) .streamingContent blockquote {
  border-left: 4px solid var(--blockquote-border-dark, #343b43);
  background-color: var(--blockquote-bg-dark, #161b22);
  color: var(--text-secondary-dark, #c9d1d9);
}

.streamingContent hr {
  height: 0.25em;
  padding: 0;
  margin-top: 1.5rem; /* Space before HR */
  margin-bottom: 1.5rem; /* Space after HR */
  background-color: var(--hr-bg, #dfe2e5);
  border: 0;
  border-radius: 3px;
}

:global(body.dark-mode) .streamingContent hr {
  background-color: var(--hr-bg-dark, #343b43);
}

.streamingContent a {
  color: var(--link-color);
  text-decoration: none;
  border-bottom: 1px solid transparent;
  transition: border-color 0.2s ease;
}

.streamingContent a:hover {
  border-bottom-color: var(--link-color);
}

.streamingContent img {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  margin: 1rem 0;
}

.streamingContent del {
  text-decoration: line-through;
  color: var(--text-secondary);
}

.streamingContent input[type="checkbox"] {
  margin-right: 0.5rem;
}

/* === Table Styles (Refactored) === */
.streamingContent table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.9rem;
  margin-top: 1rem; /* Space before table */
  margin-bottom: 1rem; /* Consistent bottom margin */
  display: block;
  /* Needed for overflow */
  overflow-x: auto;
  border: 1px solid var(--table-border, #dfe2e5);
  border-radius: 6px;
}

.streamingContent thead {
  background-color: var(--table-header-bg, #f6f8fa);
  border-bottom: 2px solid var(--table-border, #dfe2e5);
}

.streamingContent th {
  padding: 0.75rem 1rem;
  text-align: left;
  font-weight: 600;
  white-space: nowrap;
  border: 1px solid var(--table-border, #dfe2e5);
  border-top: none;
  border-left: none;
  color: var(--text-primary) !important;
  /* Force text color */
}

.streamingContent th:first-child {
  border-left: none;
}

.streamingContent th:last-child {
  border-right: none;
}

.streamingContent tr {
  border-top: 1px solid var(--table-border, #dfe2e5);
  /* Horizontal lines between rows */
}

.streamingContent tbody tr:first-child {
  border-top: none;
  /* Remove border between thead and first row */
}

.streamingContent tbody {
  background-color: var(--table-body-bg, #ffffff);
}

.streamingContent tbody tr {
  background-color: var(--table-body-bg, #ffffff);
  /* Light theme default row */
}

.streamingContent tbody tr:nth-child(even) {
  background-color: var(--table-row-alt-bg, #f8f9fa);
  /* Light theme even row */
}

.streamingContent td {
  padding: 0.75rem 1rem;
  text-align: left;
  vertical-align: top;
  border: 1px solid var(--table-border, #dfe2e5);
  border-top: none;
  border-left: none;
  color: var(--text-primary) !important;
  /* Force text color */
}

.streamingContent td:last-child {
  border-right: none;
}

/* === Dark Mode Styles === */
:global(body.dark-mode) .streamingContent p,
:global(body.dark-mode) .streamingContent ul,
:global(body.dark-mode) .streamingContent ol,
:global(body.dark-mode) .streamingContent li,
:global(body.dark-mode) .streamingContent blockquote,
:global(body.dark-mode) .streamingContent h1,
:global(body.dark-mode) .streamingContent h2,
:global(body.dark-mode) .streamingContent h3,
:global(body.dark-mode) .streamingContent h4,
:global(body.dark-mode) .streamingContent h5,
:global(body.dark-mode) .streamingContent h6,
:global(body.dark-mode) .streamingContent table,
:global(body.dark-mode) .streamingContent pre,
:global(body.dark-mode) .streamingContent code {
  color: var(--text-primary-dark);
}

:global(body.dark-mode) .streamingContent a {
  color: var(--link-color-dark);
}

:global(body.dark-mode) .streamingContent a:hover {
  border-bottom-color: var(--link-color-dark);
}

:global(body.dark-mode) .streamingContent del {
  color: var(--text-secondary-dark);
}

/* Dark Mode Table Styles */
:global(body.dark-mode) .streamingContent table {
  /* border: 1px solid var(--table-border-dark, #343b43) !important; */
  border: none;
  background-color: var(--table-body-bg) !important;
}

:global(body.dark-mode) .streamingContent thead {
  background-color: #161b22 !important;
  border-bottom: 2px solid var(--table-border-dark, #343b43) !important;
}

:global(body.dark-mode) .streamingContent tr {
  border-top: 1px solid var(--table-border-dark, #343b43) !important;
}

:global(body.dark-mode) .streamingContent tbody {
  background-color: var(--table-body-bg) !important;
}

:global(body.dark-mode) .streamingContent tbody tr {
  background-color: var(--table-body-bg) !important;
  /* Dark theme default row */
}

:global(body.dark-mode) .streamingContent tbody tr:nth-child(even) {
  background-color: var(--table-row-alt-bg) !important;
  /* Dark theme even row */
}

:global(body.dark-mode) .streamingContent th,
:global(body.dark-mode) .streamingContent td {
  border: 1px solid var(--table-border-dark, #343b43) !important;
  color: var(--text-primary-dark) !important;
}

/* Additional rules for nested tables in markdown blocks */
:global(body.dark-mode) .markdownCodeBlock .streamingContent table {
  background-color: var(--table-body-bg) !important;
  border: 1px solid var(--table-border-dark, #343b43) !important;
}

:global(body.dark-mode) .markdownCodeBlock .streamingContent tbody {
  background-color: var(--table-body-bg) !important;
}

:global(body.dark-mode) .markdownCodeBlock .streamingContent tr {
  background-color: var(--table-body-bg) !important;
}

:global(body.dark-mode) .markdownCodeBlock .streamingContent tbody tr {
  background-color: var(--table-body-bg) !important;
}

:global(body.dark-mode) .markdownCodeBlock .streamingContent tbody tr:nth-child(even) {
  background-color: var(--table-row-alt-bg) !important;
}

/* Override inline code style when inside table cells */
.streamingContent table th code,
.streamingContent table td code {
  background-color: transparent !important;
  color: inherit !important;
  padding: 0 !important;
  font-size: inherit !important;
  border-radius: 0 !important;
  border: none !important;
}

/* Explicit override for DARK MODE code inside table cells */
:global(body.dark-mode) .streamingContent table th code,
:global(body.dark-mode) .streamingContent table td code {
  color: var(--text-primary-dark) !important;
}

/* Ensure links within tables get correct link color */
.streamingContent table th a,
.streamingContent table td a {
  color: var(--link-color) !important;
  border-bottom: 1px solid transparent;
}

.streamingContent table th a:hover,
.streamingContent table td a:hover {
  border-bottom-color: var(--link-color);
}

:global(body.dark-mode) .streamingContent table th a,
:global(body.dark-mode) .streamingContent table td a {
  color: var(--link-color-dark) !important;
}

:global(body.dark-mode) .streamingContent table th a:hover,
:global(body.dark-mode) .streamingContent table td a:hover {
  border-bottom-color: var(--link-color-dark);
}

/* Code blocks (Container) */
.codeBlockContainer {
  margin-top: 1rem; /* Space before code block */
  margin-bottom: 1rem; /* Consistent bottom margin */
  border-radius: 6px;
  overflow: hidden;
  background-color: var(--code-bg);
  border: 1px solid var(--border-color);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
}

.codeBlockContainer:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.codeHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem 1rem;
  background-color: var(--elevated-bg);
  border-bottom: 1px solid var(--border-color);
}

.language {
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Copy button for code blocks */
.copyButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  padding: 0.3rem 0.5rem;
  font-size: 0.75rem;
  color: var(--text-secondary);
  background-color: transparent;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.copyButton:hover {
  background-color: var(--hover);
  color: var(--text-primary);
}

.copyButton svg {
  flex-shrink: 0;
}

/* SyntaxHighlighter styles applied to its container */
.pre {
  margin: 0 !important;
  /* Override default */
  padding: 1rem !important;
  /* Override default */
  border-radius: 0 0 6px 6px !important;
  /* Ensure consistent radius */
  font-family: var(--code-font);
  font-size: 0.9rem !important;
  line-height: 1.5 !important;
  overflow-x: auto !important;
  tab-size: 2;
  background: var(--code-bg) !important;
  /* Ensure background matches */
}

/* Inline code within general text (react-markdown generated) */
.streamingContent code {
  font-family: var(--code-font);
  background-color: var(--toggle-bg);
  color: var(--text-primary);
  padding: 0.1rem 0.4rem;
  border-radius: 4px;
  font-size: 0.9em;
  white-space: pre-wrap;
  word-break: break-word;
}

/* Override for code blocks (SyntaxHighlighter/pre+code) */
.codeBlockContainer code {
  font-family: inherit;
  /* Inherit from .pre */
  background-color: transparent;
  /* No background inside code blocks */
  color: inherit;
  /* Inherit from syntax highlighting */
  padding: 0;
  border-radius: 0;
  font-size: inherit;
  white-space: inherit;
}

/* Special state code blocks */
.incompleteCodeBlock {
  border-left: 3px solid var(--accent-color);
  animation: pulse 2s infinite;
}

/* Styling for rendered markdown within a markdown code block */
.markdownCodeBlock {
  padding: 1rem;
  /* Match regular code block padding */
  background: var(--code-bg);
  /* Match regular code block background */
  border-radius: 0 0 6px 6px;
  /* Match regular code block radius */
}

/* Adjustments for markdown rendered *inside* .markdownCodeBlock */
.markdownCodeBlock .streamingContent {
  white-space: normal;
}

.markdownCodeBlock .streamingContent p,
.markdownCodeBlock .streamingContent ul,
.markdownCodeBlock .streamingContent ol,
.markdownCodeBlock .streamingContent li,
.markdownCodeBlock .streamingContent blockquote,
.markdownCodeBlock .streamingContent h1,
.markdownCodeBlock .streamingContent h2,
.markdownCodeBlock .streamingContent h3,
.markdownCodeBlock .streamingContent h4,
.markdownCodeBlock .streamingContent h5,
.markdownCodeBlock .streamingContent h6,
.markdownCodeBlock .streamingContent table,
.markdownCodeBlock .streamingContent pre,
.markdownCodeBlock .streamingContent code {
  color: var(--text-primary);
}

:global(body.dark-mode) .markdownCodeBlock .streamingContent p,
:global(body.dark-mode) .markdownCodeBlock .streamingContent ul,
:global(body.dark-mode) .markdownCodeBlock .streamingContent ol,
:global(body.dark-mode) .markdownCodeBlock .streamingContent li,
:global(body.dark-mode) .markdownCodeBlock .streamingContent blockquote,
:global(body.dark-mode) .markdownCodeBlock .streamingContent h1,
:global(body.dark-mode) .markdownCodeBlock .streamingContent h2,
:global(body.dark-mode) .markdownCodeBlock .streamingContent h3,
:global(body.dark-mode) .markdownCodeBlock .streamingContent h4,
:global(body.dark-mode) .markdownCodeBlock .streamingContent h5,
:global(body.dark-mode) .markdownCodeBlock .streamingContent h6,
:global(body.dark-mode) .markdownCodeBlock .streamingContent table,
:global(body.dark-mode) .markdownCodeBlock .streamingContent pre,
:global(body.dark-mode) .markdownCodeBlock .streamingContent code {
  color: var(--text-primary-dark);
}

/* Metrics display */
.metricsContainer {
  font-size: 0.75rem;
  color: var(--secondary-text);
  margin-top: 0.75rem;
  padding-top: 0.5rem;
  border-top: 1px dashed var(--border);
  display: flex;
  gap: 0.75rem;
  flex-wrap: wrap;
  align-items: center;
  opacity: 0.85;
  transition: opacity 0.2s ease;
}

.metricsContainer:hover {
  opacity: 1;
}

.metric {
  display: flex;
  align-items: center;
  background-color: var(--hover);
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  white-space: nowrap;
  gap: 0.25rem;
  font-family: var(--font-mono);
  border: 1px solid var(--border);
}

.metricIcon {
  margin-right: 0.25rem;
  color: var(--secondary-text);
}

.generatingIndicator {
  display: flex;
  align-items: center;
  background-color: rgba(var(--primary-rgb), 0.1);
  color: rgb(var(--primary-rgb));
  border-color: rgba(var(--primary-rgb), 0.3);
  gap: 0.25rem;
}

.generatingDot {
  width: 8px;
  height: 8px;
  background-color: rgb(var(--primary-rgb));
  border-radius: 50%;
  margin-right: 0.25rem;
  animation: pulseDot 1.5s infinite;
}

@keyframes pulseDot {
  0% {
    transform: scale(0.8);
    opacity: 0.5;
  }

  50% {
    transform: scale(1.2);
    opacity: 1;
  }

  100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .message {
    gap: 0.75rem;
    padding: 0.75rem;
    max-width: 98%;
  }
  .userMessage {
    max-width: 70%;
  }
  .avatar {
    width: 32px;
    height: 32px;
  }

  .avatar svg {
    width: 18px;
    height: 18px;
  }

  .codeBlockContainer {
    margin: 0.75rem 0;
  }

  .codeHeader {
    padding: 0.5rem 0.75rem;
  }

  .pre {
    padding: 0.75rem !important;
    /* Maintain important */
  }

  .metricsContainer {
    font-size: 0.7rem;
    gap: 0.5rem;
  }

  .metric {
    padding: 0.2rem 0.4rem;
  }
}

/* Ensure proper spacing between images and text */
.messageContent {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

/* Edit message button styles - similar to copy button but different position */
.editMessageButton {
  position: absolute;
  bottom: 0.5rem;
  right: 2.8rem; /* Position to the left of copy button */
  opacity: 1;  /* Visible by default */
  background-color: var(--hover);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 0.3rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  z-index: 5;
  flex-shrink: 0;
  transition: background-color 0.2s ease, color 0.2s ease;
}

/* Add margin spacing to user message container to make room for buttons */
.userMessage .messageContent {
  margin-bottom: 1.5rem; /* Add space at bottom to prevent content overlap with buttons */
}

.editMessageButton:hover {
  background-color: var(--active);
  color: var(--text-primary);
}

/* User message buttons container - directly in the message */
.userButtonContainer {
  position: absolute;
  bottom: 0.5rem;
  right: 0.5rem; 
  font-size: 0.75rem;
  color: var(--secondary-text);
  display: flex;
  gap: 0.5rem;
  justify-content: flex-end;
  align-items: center;
  opacity: 1; /* Changed from 0.85 to 1 to ensure buttons are always visible */
  transition: opacity 0.2s ease;
  z-index: 10;
}

.userButtonContainer:hover {
  opacity: 1;
}

/* When buttons are in the user button container, they don't need absolute positioning */
.userButtonContainer .copyMessageButton,
.userButtonContainer .editMessageButton {
  position: static;
  opacity: 1;
  margin: 0;
  /* Keep other styles consistent */
  background-color: var(--hover);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 0.3rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  z-index: 5;
  flex-shrink: 0;
}