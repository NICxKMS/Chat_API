{"version":3,"mappings":"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","names":["loadedLanguages","Set","languageLoaders","assign","__vitePreload","import","__VITE_PRELOAD__","CopyIcon","jsxRuntimeExports","jsxs","xmlns","viewBox","width","height","children","jsx","fillRule","d","CheckIcon","StreamingMessage","content","isStreaming","isDark","useTheme","copiedCodeMap","setCopiedCodeMap","useState","syntaxTheme","atomDark","prism","handleCopyCode","useCallback","code","index","navigator","clipboard","writeText","then","prev","setTimeout","CodeBlock","node","inline","className","props","match","exec","language","toLowerCase","codeContent","String","replace","langLoaded","setLangLoaded","has","useEffect","prismLang","importer","mod","langModule","default","registerLanguage","add","catch","finally","styles","pre","codeBlockKey","position","start","offset","substring","isCopied","inlineCode","codeBlockContainer","codeHeader","copyButton","onClick","disabled","Fragment","SyntaxHighlighter","style","customStyle","background","PreTag","wrapLines","markdownComponents","useMemo","markdownClassName","markdown","ChatMessage__streamingContent","actualContent","contentToRender","convertTeXToMathDollars","ReactMarkdown","remarkPlugins","remarkGfm","remarkEmoji","remarkMath","rehypePlugins","rehypeKatex","components"],"ignoreList":[],"sources":["../../src/components/chat/ChatMessage/StreamingMessage.jsx"],"sourcesContent":["import { useState, useCallback, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport styles from './ChatMessage.module.css';\nimport atomDark from 'react-syntax-highlighter/dist/esm/styles/prism/atom-dark';\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism';\nimport { useTheme } from '../../../contexts/ThemeContext';\nimport remarkGfm from 'remark-gfm';\nimport remarkEmoji from 'remark-emoji';\nimport remarkMath from 'remark-math';\nimport rehypeKatex from 'rehype-katex';\nimport 'katex/dist/katex.min.css';\nimport { convertTeXToMathDollars } from '../../../utils/formatters';\n\n// Track which languages have already been loaded\nconst loadedLanguages = new Set();\n\n// Map of dynamic importers for Prism language modules (using REACT_APP glob)\nconst languageLoaders = import.meta.glob('../../../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/*.js');\n\n// Copy Icon SVG (simple inline version)\nconst CopyIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"14\" height=\"14\">\n    <path fillRule=\"evenodd\" d=\"M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z\"></path>\n    <path fillRule=\"evenodd\" d=\"M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z\"></path>\n  </svg>\n);\n\n// Check Icon SVG (simple inline version)\nconst CheckIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" width=\"14\" height=\"14\">\n    <path fillRule=\"evenodd\" d=\"M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z\"></path>\n  </svg>\n);\n\n/**\n * StreamingMessage component using react-markdown for rendering the entire content.\n */\nconst StreamingMessage = ({ content, isStreaming }) => {\n  const { isDark } = useTheme();\n  const [copiedCodeMap, setCopiedCodeMap] = useState({}); // Use a map for multiple blocks\n\n  const syntaxTheme = isDark ? atomDark : prism;\n\n  // Handle copy code to clipboard, using index as key\n  const handleCopyCode = useCallback((code, index) => {\n    navigator.clipboard.writeText(code).then(() => {\n      setCopiedCodeMap(prev => ({ ...prev, [index]: true }));\n      setTimeout(() => {\n        setCopiedCodeMap(prev => ({ ...prev, [index]: false }));\n      }, 2000);\n    });\n  }, []);\n\n  // Custom component for rendering code blocks\n  const CodeBlock = useCallback(({ node, inline, className, children, ...props }) => {\n    const match = /language-(\\w+)/.exec(className || '');\n    const rawLang = match ? match[1] : 'plaintext';\n    const language = rawLang.toLowerCase();\n    const codeContent = String(children).replace(/\\n$/, '');\n\n    // Maintain local state for whether the language definition has been loaded\n    const [langLoaded, setLangLoaded] = useState(inline || loadedLanguages.has(language));\n\n    useEffect(() => {\n      if (!inline && !loadedLanguages.has(language) && language !== 'plaintext') {\n        // Map certain code-fence names to Prism file names\n        const prismLang = language === 'dockerfile' ? 'docker'\n                         : language === 'vimscript' ? 'vim'\n                         : language;\n        const importPath = `../../../../node_modules/react-syntax-highlighter/dist/esm/languages/prism/${prismLang}.js`;\n        const importer = languageLoaders[importPath];\n        if (importer) {\n          importer()\n            .then((mod) => {\n              const langModule = mod.default || mod[prismLang] || mod;\n              // Register under original language key\n              SyntaxHighlighter.registerLanguage(language, langModule);\n              loadedLanguages.add(language);\n            })\n            .catch(() => {\n              console.warn(`Language ${language} not available for dynamic import; using plaintext fallback.`);\n            })\n            .finally(() => setLangLoaded(true));\n        } else {\n          console.warn(`Language ${language} not available for dynamic import; using plaintext fallback.`);\n          setLangLoaded(true);\n        }\n      }\n    }, [language, inline]);\n\n    if (!inline && !langLoaded) {\n      // Fallback to unstyled code block while loading\n      return <pre className={styles.pre}><code>{codeContent}</code></pre>;\n    }\n\n    // Use index from node's position if available, fallback to content hash or similar\n    const codeBlockKey = node?.position?.start?.offset ?? codeContent.substring(0, 20); // Example key\n    const isCopied = copiedCodeMap[codeBlockKey];\n\n    return !inline ? (\n      <div className={styles.codeBlockContainer}>\n        <div className={styles.codeHeader}>\n          <span className={styles.language}>{language}</span>\n          <button\n            className={styles.copyButton}\n            onClick={() => handleCopyCode(codeContent, codeBlockKey)}\n            disabled={isCopied}\n          >\n            {isCopied ? (\n              <> <CheckIcon /> Copied! </>\n            ) : (\n              <> <CopyIcon /> Copy </>\n            )}\n          </button>\n        </div>\n        <SyntaxHighlighter\n          style={syntaxTheme}\n          customStyle={{ background: 'transparent' }}\n          language={language}\n          PreTag=\"div\" // Use div instead of pre, SyntaxHighlighter wraps in its own pre\n          className={styles.pre}\n          wrapLines={true} // Consider wrapping lines based on preference\n          {...props}\n        >\n          {codeContent}\n        </SyntaxHighlighter>\n      </div>\n    ) : (\n      // Render inline code with specific styling\n      <code className={`${styles.inlineCode} ${className || ''}`} {...props}>\n        {children}\n      </code>\n    );\n  }, [syntaxTheme, handleCopyCode, copiedCodeMap]);\n\n  // Define components for ReactMarkdown\n  const markdownComponents = useMemo(() => ({\n    code: CodeBlock,\n  }), [CodeBlock]); // CodeBlock is the dependency\n\n  // Apply streaming class based on the passed-in prop\n  const markdownClassName = `${styles.markdown} ${styles.ChatMessage__streamingContent} ${isStreaming ? styles['ChatMessage__streamingContent--streaming'] : ''}`;\n\n  // Use a zero-width space for this purpose.\n  const actualContent = typeof content === 'string' ? content : String(content || '');\n  const contentToRender = !actualContent ? '\\u200B' : convertTeXToMathDollars(actualContent);\n\n  return (\n    <div className={markdownClassName}>\n      <ReactMarkdown\n        remarkPlugins={[remarkGfm, remarkEmoji, remarkMath]}\n        rehypePlugins={[rehypeKatex]}\n        components={markdownComponents}\n        // skipHtml={false}\n      >\n        {contentToRender}\n      </ReactMarkdown>\n    </div>\n  );\n};\n\nStreamingMessage.propTypes = {\n  content: PropTypes.string,\n  isStreaming: PropTypes.bool // Add prop type for isStreaming\n};\n\nexport default StreamingMessage;\n"],"file":"assets/StreamingMessage-Bk4GS9U5.js"}