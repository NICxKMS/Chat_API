{"version":3,"file":"refractor-matlab-DlMO3gVF.js","sources":["../../node_modules/refractor/lang/matlab.js"],"sourcesContent":["'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n"],"names":["matlab","Prism","languages","comment","string","pattern","greedy","number","keyword","function","operator","punctuation","matlab_1","displayName","aliases"],"mappings":"mCAKA,SAASA,EAAOC,GACdA,EAAMC,UAAUF,OAAS,CACvBG,QAAS,CAAC,iBAAkB,OAC5BC,OAAQ,CACNC,QAAS,uBACTC,QAAQ,GAGVC,OAAQ,iEACRC,QACE,8HACFC,SAAU,uBACVC,SAAU,0CACVC,YAAa,uBAEjB,YAlBiBC,EAAAZ,EACjBA,EAAOa,YAAc,SACrBb,EAAOc,QAAU","x_google_ignoreList":[0]}