{"version":3,"file":"vendor-longest-streak-D3RFUi6d.js","sources":["../../node_modules/longest-streak/index.js"],"sourcesContent":["/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n"],"names":["longestStreak","value","substring","source","String","index","indexOf","expected","count","max","length"],"mappings":"AAUO,SAASA,EAAcC,EAAOC,GAC7B,MAAAC,EAASC,OAAOH,GAClB,IAAAI,EAAQF,EAAOG,QAAQJ,GACvBK,EAAWF,EACXG,EAAQ,EACRC,EAAM,EAMV,MAAqB,IAAdJ,GACDA,IAAUE,IACNC,EAAQC,IACNA,EAAAD,GAGAA,EAAA,EAGVD,EAAWF,EAAQH,EAAUQ,OACrBL,EAAAF,EAAOG,QAAQJ,EAAWK,GAG7B,OAAAE,CACT","x_google_ignoreList":[0]}