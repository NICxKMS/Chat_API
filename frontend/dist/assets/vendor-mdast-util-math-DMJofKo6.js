import{l as t}from"./vendor-longest-streak-D3RFUi6d.js";import{t as e,s as a,p as n}from"./vendor-mdast-util-to-markdown-DDpRuohb.js";function r(){return{enter:{mathFlow:function(t){this.enter({type:"math",meta:null,value:"",data:{hName:"div",hProperties:{className:["math","math-display"]},hChildren:[{type:"text",value:""}]}},t)},mathFlowFenceMeta:function(){this.buffer()},mathText:function(t){this.enter({type:"inlineMath",value:"",data:{hName:"span",hProperties:{className:["math","math-inline"]},hChildren:[{type:"text",value:""}]}},t),this.buffer()}},exit:{mathFlow:function(t){const e=this.resume().replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,""),a=this.exit(t);a.value=e,a.data.hChildren[0].value=e,this.setData("mathFlowInside")},mathFlowFence:function(){if(this.getData("mathFlowInside"))return;this.buffer(),this.setData("mathFlowInside",!0)},mathFlowFenceMeta:function(){const t=this.resume();this.stack[this.stack.length-1].meta=t},mathFlowValue:t,mathText:function(t){const e=this.resume(),a=this.exit(t);a.value=e,a.data.hChildren[0].value=e},mathTextData:t}};function t(t){this.config.enter.data.call(this,t),this.config.exit.data.call(this,t)}}function i(r){let i=(r||{}).singleDollarTextMath;return null==i&&(i=!0),s.peek=function(){return"$"},{unsafe:[{character:"\r",inConstruct:"mathFlowMeta"},{character:"\n",inConstruct:"mathFlowMeta"},{character:"$",after:i?void 0:"\\$",inConstruct:"phrasing"},{character:"$",inConstruct:"mathFlowMeta"},{atBreak:!0,character:"$",after:"\\$"}],handlers:{math:function(n,r,i,s){const o=n.value||"",h=e(s),l="$".repeat(Math.max(t(o,"$")+1,2)),c=i.enter("mathFlow");let m=h.move(l);if(n.meta){const t=i.enter("mathFlowMeta");m+=h.move(a(i,n.meta,{before:m,after:"\n",encode:["$"],...h.current()})),t()}m+=h.move("\n"),o&&(m+=h.move(o+"\n"));return m+=h.move(l),c(),m},inlineMath:s}};function s(t,e,a){let r=t.value||"",s=1;for(i||s++;new RegExp("(^|[^$])"+"\\$".repeat(s)+"([^$]|$)").test(r);)s++;const o="$".repeat(s);/[^ \r\n]/.test(r)&&(/^[ \r\n]/.test(r)&&/[ \r\n]$/.test(r)||/^\$|\$$/.test(r))&&(r=" "+r+" ");let h=-1;for(;++h<a.unsafe.length;){const t=a.unsafe[h],e=n(t);let i;if(t.atBreak)for(;i=e.exec(r);){let t=i.index;10===r.codePointAt(t)&&13===r.codePointAt(t-1)&&t--,r=r.slice(0,t)+" "+r.slice(i.index+1)}}return o+r+o}}export{r as a,i as m};
//# sourceMappingURL=vendor-mdast-util-math-DMJofKo6.js.map
