{"version":3,"file":"modelProcessor-BeiRJotf.js","sources":["../src/workers/modelProcessor.jsx"],"sourcesContent":["/* eslint-disable no-restricted-globals */\r\n// modelProcessor.js\r\n// Web Worker for processing model list data in the background\r\n\r\n/**\r\n * processModels replicates the logic from ModelContext to transform\r\n * hierarchical_groups into flat arrays and nested maps.\r\n */\r\nfunction processModels(data) {\r\n  const allModels = [];\r\n  const experimentalModels = [];\r\n  const processedModels = {};\r\n\r\n  // Helper to normalize a model name\r\n  const normalizeModelName = (model) => {\r\n    const name = model.id || '';\r\n    return name.split('/').pop() || name;\r\n  };\r\n\r\n  data.hierarchical_groups.forEach(providerGroup => {\r\n    const provider = providerGroup.group_value;\r\n    if (!providerGroup.children) return;\r\n\r\n    providerGroup.children.forEach(typeGroup => {\r\n      const type = typeGroup.group_value;\r\n      if (!typeGroup.children) return;\r\n\r\n      typeGroup.children.forEach(versionGroup => {\r\n        const version = versionGroup.group_value;\r\n        if (!Array.isArray(versionGroup.models)) return;\r\n\r\n        versionGroup.models.forEach(model => {\r\n          let category = 'Chat';\r\n          const t = (model.type || type || '').toLowerCase();\r\n          if (t.includes('image')) category = 'Image';\r\n          else if (t.includes('embedding')) category = 'Embedding';\r\n\r\n          const processedModel = {\r\n            id: model.id,\r\n            name: model.name || model.display_name || normalizeModelName(model),\r\n            provider,\r\n            type: model.type || type,\r\n            version: model.version || version,\r\n            category,\r\n            is_experimental: model.is_experimental,\r\n            is_multimodal: model.is_multimodal,\r\n            capabilities: model.capabilities,\r\n            family: model.family || type,\r\n            series: model.series || version\r\n          };\r\n\r\n          allModels.push(processedModel);\r\n          if (model.is_experimental) experimentalModels.push(processedModel);\r\n\r\n          // Build nested map: processedModels[category][provider][type]\r\n          processedModels[category] = processedModels[category] || {};\r\n          processedModels[category][provider] = processedModels[category][provider] || {};\r\n          processedModels[category][provider][type] = processedModels[category][provider][type] || [];\r\n          processedModels[category][provider][type].push(processedModel);\r\n        });\r\n      });\r\n    });\r\n  });\r\n\r\n  return { allModels, processedModels, experimentalModels };\r\n}\r\n\r\n// Listen for messages from main thread\r\nself.onmessage = ({ data }) => {\r\n  try {\r\n    const result = processModels(data);\r\n    self.postMessage({ ...result });\r\n  } catch (err) {\r\n    self.postMessage({ error: err.message });\r\n  }\r\n}; "],"names":["self","onmessage","data","result","allModels","experimentalModels","processedModels","normalizeModelName","model","name","id","split","pop","hierarchical_groups","forEach","providerGroup","provider","group_value","children","typeGroup","type","versionGroup","version","Array","isArray","models","category","t","toLowerCase","includes","processedModel","display_name","is_experimental","is_multimodal","capabilities","family","series","push","processModels","postMessage","err","error","message"],"mappings":"yBAoEAA,KAAKC,UAAY,EAAGC,WACd,IACI,MAAAC,EA9DV,SAAuBD,GACrB,MAAME,EAAY,GACZC,EAAqB,GACrBC,EAAkB,CAAC,EAGnBC,EAAsBC,IACpB,MAAAC,EAAOD,EAAME,IAAM,GACzB,OAAOD,EAAKE,MAAM,KAAKC,OAASH,CAAA,EAgD3B,OA7CFP,EAAAW,oBAAoBC,SAAyBC,IAChD,MAAMC,EAAWD,EAAcE,YAC1BF,EAAcG,UAELH,EAAAG,SAASJ,SAAqBK,IAC1C,MAAMC,EAAOD,EAAUF,YAClBE,EAAUD,UAELC,EAAAD,SAASJ,SAAwBO,IACzC,MAAMC,EAAUD,EAAaJ,YACxBM,MAAMC,QAAQH,EAAaI,SAEnBJ,EAAAI,OAAOX,SAAiBN,IACnC,IAAIkB,EAAW,OACf,MAAMC,GAAKnB,EAAMY,MAAQA,GAAQ,IAAIQ,cACjCD,EAAEE,SAAS,SAAqBH,EAAA,QAC3BC,EAAEE,SAAS,eAAyBH,EAAA,aAE7C,MAAMI,EAAiB,CACrBpB,GAAIF,EAAME,GACVD,KAAMD,EAAMC,MAAQD,EAAMuB,cAAgBxB,EAAmBC,GAC7DQ,WACAI,KAAMZ,EAAMY,MAAQA,EACpBE,QAASd,EAAMc,SAAWA,EAC1BI,WACAM,gBAAiBxB,EAAMwB,gBACvBC,cAAezB,EAAMyB,cACrBC,aAAc1B,EAAM0B,aACpBC,OAAQ3B,EAAM2B,QAAUf,EACxBgB,OAAQ5B,EAAM4B,QAAUd,GAG1BlB,EAAUiC,KAAKP,GACXtB,EAAMwB,iBAAoC3B,EAAAgC,KAAKP,GAGnDxB,EAAgBoB,GAAYpB,EAAgBoB,IAAa,CAAC,EAC1CpB,EAAAoB,GAAUV,GAAYV,EAAgBoB,GAAUV,IAAa,CAAC,EAC9EV,EAAgBoB,GAAUV,GAAUI,GAAQd,EAAgBoB,GAAUV,GAAUI,IAAS,GACzFd,EAAgBoB,GAAUV,GAAUI,GAAMiB,KAAKP,EAAc,GAC9D,GACF,GACF,IAGI,CAAE1B,YAAWE,kBAAiBD,qBACvC,CAKmBiC,CAAcpC,GAC7BF,KAAKuC,YAAY,IAAKpC,UACfqC,GACPxC,KAAKuC,YAAY,CAAEE,MAAOD,EAAIE,SAAS"}