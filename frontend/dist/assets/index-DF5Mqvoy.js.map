{"version":3,"file":"index-DF5Mqvoy.js","sources":["../../src/components/auth/AuthButton/index.jsx"],"sourcesContent":["import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { SignInIcon} from '@primer/octicons-react';\nimport { useProfilePicture } from '../../../hooks/useProfilePicture';\n// Import icons using the correct paths\nimport '../../../styles/common/buttons.css';\n// import component-specific styles for avatar/initial only\nimport styles from './AuthButton.module.css';\nimport Spinner from '../../common/Spinner';\n\n/**\n * Auth button component for login/logout\n * @param {Object} props - Component props\n * @param {boolean} props.isAuthenticated - Whether the user is authenticated\n * @param {Function} props.onLogin - Function to handle login\n * @param {Function} props.onLogout - Function to handle logout\n * @param {string} props.userName - User's display name or email\n * @param {boolean} props.isLoading - Whether authentication is in progress\n * @param {Object} props.currentUser - Firebase user object with photoURL\n * @returns {JSX.Element} - Rendered component\n */\nconst AuthButton = memo(({ \n  isAuthenticated, \n  onLogin, \n  onLogout, \n  userName = 'User',\n  isLoading = false,\n  currentUser = null\n}) => {\n  const { profilePicture, loading: avatarLoading } = useProfilePicture(currentUser?.photoURL);\n\n  return (\n    <button\n      className=\"circleActionButton\"\n      onClick={isAuthenticated ? onLogout : onLogin}\n      disabled={isLoading}\n      title={isLoading ? \"Checking authentication...\" : isAuthenticated ? `Logged in as ${userName}. Click to logout.` : \"Login / Sign Up\"}\n      aria-label={isLoading ? \"Loading Authentication\" : isAuthenticated ? \"Logout\" : \"Login or Sign Up\"}\n    >\n      {isLoading ? (\n        <Spinner size=\"small\" tag=\"auth\" />\n      ) : isAuthenticated ? (\n        currentUser?.photoURL ? (\n          avatarLoading ? (\n            <Spinner size=\"small\" tag=\"avatar\" />\n          ) : profilePicture ? (\n            <img \n              src={profilePicture} \n              alt={`${userName}'s profile`}\n              className={styles.AuthButton__avatar}\n              loading=\"lazy\"\n            />\n          ) : (\n            <div className={styles.AuthButton__initial}>\n              {userName.charAt(0).toUpperCase()}\n            </div>\n          )\n        ) : (\n          <div className={styles.AuthButton__initial}>\n            {userName.charAt(0).toUpperCase()}\n          </div>\n        )\n      ) : (\n        <SignInIcon size={20} />\n      )}\n    </button>\n  );\n});\n\n// Display name for debugging\nAuthButton.displayName = 'AuthButton';\n\nexport default AuthButton;\n\n// Define PropTypes\nAuthButton.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  onLogin: PropTypes.func.isRequired,\n  onLogout: PropTypes.func.isRequired,\n  userName: PropTypes.string,\n  isLoading: PropTypes.bool,\n  currentUser: PropTypes.shape({\n    displayName: PropTypes.string,\n    email: PropTypes.string,\n    photoURL: PropTypes.string\n  })\n};\n"],"names":["AuthButton","memo","isAuthenticated","onLogin","onLogout","userName","isLoading","currentUser","profilePicture","loading","avatarLoading","useProfilePicture","photoURL","className","onClick","disabled","title","Spinner","size","tag","jsx","src","alt","styles","charAt","toUpperCase","SignInIcon","displayName"],"mappings":"41FAqBMA,EAAaC,QAAK,EACtBC,kBACAC,UACAC,WACAC,WAAW,OACXC,aAAY,EACZC,cAAc,SAER,MAAAC,eAAEA,EAAgBC,QAASC,GAAkBC,EAAkBJ,MAAAA,OAAAA,EAAAA,EAAaK,uBAG/E,SACC,CAAAC,UAAU,qBACVC,QAASZ,EAAkBE,EAAWD,EACtCY,SAAUT,EACVU,MAAOV,EAAY,6BAA+BJ,EAAkB,gBAAgBG,sBAA+B,kBACnH,aAAYC,EAAY,yBAA2BJ,EAAkB,SAAW,mBAE/EI,SAAAA,QACEW,EAAQ,CAAAC,KAAK,QAAQC,IAAI,SACxBjB,GACFK,MAAAA,OAAAA,EAAAA,EAAaK,UACXF,EACEU,EAAAA,IAACH,GAAQC,KAAK,QAAQC,IAAI,WACxBX,QACD,OACCa,IAAKb,EACLc,IAAK,GAAGjB,cACRQ,UAAWU,EACXd,QAAQ,eAGT,OAAII,UAAWU,EACblB,SAASmB,EAAAA,OAAO,GAAGC,sBAIvB,MAAI,CAAAZ,UAAWU,EACblB,SAAAA,EAASmB,OAAO,GAAGC,sBAIvBC,EAAW,CAAAR,KAAM,MAEtB,IAKJlB,EAAW2B,YAAc"}