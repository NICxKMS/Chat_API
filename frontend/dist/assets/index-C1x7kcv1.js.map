{"version":3,"file":"index-C1x7kcv1.js","sources":["../../src/components/settings/TextAreaControl/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TextAreaControl.module.css';\nimport commonStyles from '../common/ControlStyles.module.css';\n\n/**\n * TextArea control component for settings\n * \n * @param {Object} props Component props\n * @param {string} props.id Unique identifier\n * @param {string} props.label Label text\n * @param {string} props.value Current value\n * @param {Function} props.onChange Change handler\n * @param {string} props.tooltip Tooltip text\n * @param {string} props.placeholder Placeholder text\n * @returns {JSX.Element} Rendered component\n */\nconst TextAreaControl = ({ \n  id, \n  label, \n  value, \n  onChange, \n  tooltip, \n  placeholder = 'Enter text here...'\n}) => {\n  const [localValue, setLocalValue] = useState(value);\n  \n  const handleChange = (e) => {\n    setLocalValue(e.target.value);\n  };\n  \n  const handleBlur = () => {\n    if (localValue !== value) {\n      onChange(localValue);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && e.ctrlKey) {\n      e.preventDefault();\n      handleBlur();\n    }\n  };\n  \n  return (\n    <div className={commonStyles.controlContainer}>\n      <div className={commonStyles.controlHeader}>\n        <label htmlFor={id} className={commonStyles.controlLabel} title={tooltip}>\n          {label}\n        </label>\n      </div>\n      \n      <textarea\n        id={id}\n        className={styles.TextAreaControl__textarea}\n        value={localValue}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        aria-label={label}\n      />\n      \n      {tooltip && (\n        <div className={commonStyles.controlDescription}>\n          {tooltip}\n        </div>\n      )}\n    </div>\n  );\n};\n\nTextAreaControl.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  tooltip: PropTypes.string,\n  placeholder: PropTypes.string\n};\n\nexport default TextAreaControl; "],"names":["TextAreaControl","id","label","value","onChange","tooltip","placeholder","localValue","setLocalValue","useState","handleBlur","jsxs","className","commonStyles","controlContainer","children","jsx","controlHeader","htmlFor","controlLabel","title","styles","e","target","onBlur","onKeyDown","key","ctrlKey","preventDefault","controlDescription"],"mappings":"2/DAiBMA,EAAkBA,EACtBC,KACAC,QACAC,QACAC,WACAC,UACAC,cAAc,yBAEd,MAAOC,EAAYC,GAAiBC,EAAAA,SAASN,GAMvCO,EAAaA,KACbH,IAAeJ,GACjBC,EAASG,EAAU,EAWvB,SACGI,KAAA,MAAA,CAAIC,UAAWC,EAAaC,iBAC3BC,SAAA,CAAAC,MAAC,MAAI,CAAAJ,UAAWC,EAAaI,cAC3BF,eAAC,QAAM,CAAAG,QAASjB,EAAIW,UAAWC,EAAaM,aAAcC,MAAOf,EAC9DH,qBAIJ,WACC,CAAAD,KACAW,UAAWS,EACXlB,MAAOI,EACPH,SA7BsBkB,IACZA,EAAAA,EAAEC,OAAOpB,MAAK,EA6BxBqB,OAAQd,EACRe,UArBuBH,IACb,UAAVA,EAAEI,KAAmBJ,EAAEK,UACzBL,EAAEM,iBACSlB,IAAA,EAmBTJ,cACA,aAAYJ,IAGbG,GACEW,EAAAA,IAAA,MAAA,CAAIJ,UAAWC,EAAagB,mBAC1BxB,SACHA,MAEJ"}