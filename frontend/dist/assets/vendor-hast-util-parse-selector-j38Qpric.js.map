{"version":3,"file":"vendor-hast-util-parse-selector-j38Qpric.js","sources":["../../node_modules/hast-util-parse-selector/index.js"],"sourcesContent":["'use strict'\n\nmodule.exports = parse\n\nvar search = /[#.]/g\n\n// Create a hast element from a simple CSS selector.\nfunction parse(selector, defaultTagName) {\n  var value = selector || ''\n  var name = defaultTagName || 'div'\n  var props = {}\n  var start = 0\n  var subvalue\n  var previous\n  var match\n\n  while (start < value.length) {\n    search.lastIndex = start\n    match = search.exec(value)\n    subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        name = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (props.className) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {type: 'element', tagName: name, properties: props, children: []}\n}\n"],"names":["hastUtilParseSelector","selector","defaultTagName","subvalue","previous","match","value","name","props","start","length","search","lastIndex","exec","slice","index","id","className","push","type","tagName","properties","children"],"mappings":"uCAEiBA,EAKR,SAAMC,EAAUC,GACvB,IAIIC,EACAC,EACAC,EANAC,EAAQL,GAAY,GACpBM,EAAOL,GAAkB,MACzBM,EAAQ,CAAA,EACRC,EAAQ,EAKL,KAAAA,EAAQH,EAAMI,QACnBC,EAAOC,UAAYH,EACXJ,EAAAM,EAAOE,KAAKP,IACpBH,EAAWG,EAAMQ,MAAML,EAAOJ,EAAQA,EAAMU,MAAQT,EAAMI,WAGnDN,EAEmB,MAAbA,EACTI,EAAMQ,GAAKb,EACFK,EAAMS,UACTT,EAAAS,UAAUC,KAAKf,GAEfK,EAAAS,UAAY,CAACd,GANZI,EAAAJ,EASTM,GAASN,EAASO,QAGhBL,IACFD,EAAWC,EAAM,GACjBI,KAIG,MAAA,CAACU,KAAM,UAAWC,QAASb,EAAMc,WAAYb,EAAOc,SAAU,GACvE,EAtCA,IAAIX,EAAS","x_google_ignoreList":[0]}