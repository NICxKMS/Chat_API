{"version":3,"file":"index-CefDO3yf.js","sources":["../../src/components/layout/Sidebar/index.jsx"],"sourcesContent":["import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusIcon, GearIcon, ChevronLeftIcon } from '@primer/octicons-react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useChatControl } from '../../../contexts/ChatControlContext';\nimport { useProfilePicture } from '../../../hooks/useProfilePicture';\nimport Spinner from '../../common/Spinner';\nimport styles from './Sidebar.module.css';\n// Remove unused icons if PlusIcon/GearIcon only used for floating buttons\n// import { GearIcon, PlusIcon } from '@primer/octicons-react'; \n\n// Remove imports for components moved out\n// const ThemeToggle = lazy(() => import('../../common/ThemeToggle'));\n// const ApiStatus = lazy(() => import('../../common/ApiStatus'));\n\n// Sample data (keep for now)\nconst sampleSessions = [\n  { id: 'session-1', title: 'LLM Explanation Chat', timestamp: '2 hours ago' },\n  { id: 'session-2', title: 'React Component Refactoring', timestamp: 'Yesterday' },\n  { id: 'session-3', title: 'CSS Grid Layout Ideas', timestamp: 'Mar 30' },\n  { id: 'session-4', title: 'Python Script Debugging', timestamp: 'Mar 28' },\n];\n\n/**\n * Sidebar component containing app controls and chat session list\n * @param {Object} props - Component props\n * @param {string} [props.className] - Additional CSS class\n * @param {Function} [props.onToggleSettings] - Handler for settings button click\n * @param {Function} [props.onToggleSidebar] - Handler for sidebar toggle button click\n * @returns {JSX.Element} - Rendered sidebar\n */\nconst Sidebar = memo(({ className = '', onToggleSettings = () => console.warn('Settings handler not provided to Sidebar'), onToggleSidebar = () => console.warn('Sidebar toggle handler not provided to Sidebar') }) => {\n  const { currentUser, isAuthenticated } = useAuth();\n  const { newChat } = useChatControl();\n  const { profilePicture: userAvatar, loading: avatarLoading } = useProfilePicture(currentUser?.photoURL);\n  \n  const userName = currentUser?.displayName || currentUser?.email || 'Sir';\n  \n  // Handle button clicks with fallbacks\n  const handleNewChat = (e) => {\n    e.preventDefault();\n    newChat();\n  };\n\n  const handleSettings = (e) => {\n    e.preventDefault();\n    onToggleSettings();\n  };\n\n  return (\n    <div className={`${styles.Sidebar} ${className}`}>\n      {/* Header with Title and Controls */}\n      <div className={styles.Sidebar__header}>\n        <h1 className={styles.Sidebar__title}>AI Chat</h1>\n        <div className={styles.Sidebar__headerControls}>\n          <button \n            className={`${styles.Sidebar__iconButton} ${styles['Sidebar__iconButton--newChat']}`}\n            onClick={handleNewChat}\n            aria-label=\"New chat\"\n            title=\"New chat\"\n          >\n            <PlusIcon size={20} />\n          </button>\n          <button \n            className={`${styles.Sidebar__iconButton} ${styles['Sidebar__iconButton--settings']}`}\n            onClick={handleSettings}\n            aria-label=\"Settings\"\n            title=\"Settings\"\n          >\n            <GearIcon size={20} />\n          </button>\n          <button\n            className={styles.Sidebar__iconButton}\n            onClick={onToggleSidebar}\n            aria-label=\"Close sidebar\"\n            title=\"Close sidebar\"\n          >\n            <ChevronLeftIcon size={20} />\n          </button>\n        </div>\n      </div>\n      \n      {/* Chat Session List */}\n      <div className={styles.Sidebar__chatListContainer}>\n        <ul className={styles.Sidebar__sessionList}>\n          {sampleSessions.map(session => (\n            <li key={session.id} className={styles.Sidebar__sessionItem}>\n              <button className={styles.Sidebar__sessionButton} onClick={() => console.log('Load session:', session.id)}>\n                <span className={styles.Sidebar__sessionTitle}>{session.title}</span>\n                <span className={styles.Sidebar__sessionTimestamp}>{session.timestamp}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Footer */}\n      <div className={styles.Sidebar__footer}>\n        {isAuthenticated ? (\n          <div className={styles.Sidebar__userProfile}>\n            {currentUser?.photoURL ? (\n              avatarLoading ? (\n                <Spinner size=\"small\" tag=\"avatar\" />\n              ) : userAvatar ? (\n                <img\n                  src={userAvatar}\n                  alt={`${userName}'s profile`}\n                  className={styles.Sidebar__userAvatar}\n                />\n              ) : (\n                <div className={styles.Sidebar__userInitial}>\n                  {userName.charAt(0).toUpperCase()}\n                </div>\n              )\n            ) : (\n              <div className={styles.Sidebar__userInitial}>\n                {userName.charAt(0).toUpperCase()}\n              </div>\n            )}\n            <span className={styles.Sidebar__userName}>{userName}</span>\n          </div>\n        ) : (\n          <span className={styles.footerPlaceholderText}></span>\n        )}\n      </div>\n    </div>\n  );\n});\n\nSidebar.displayName = 'Sidebar';\n\n// Define PropTypes\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onToggleSettings: PropTypes.func,\n  onToggleSidebar: PropTypes.func\n};\n\nexport default Sidebar; "],"names":["sampleSessions","id","title","timestamp","Sidebar","memo","className","onToggleSettings","onToggleSidebar","currentUser","isAuthenticated","useAuth","newChat","useChatControl","profilePicture","userAvatar","loading","avatarLoading","useProfilePicture","photoURL","userName","displayName","email","jsxs","styles","children","jsx","onClick","e","preventDefault","PlusIcon","size","GearIcon","ChevronLeftIcon","map","session","Spinner","tag","src","alt","charAt","toUpperCase"],"mappings":"k8GAgBMA,EAAiB,CACrB,CAAEC,GAAI,YAAaC,MAAO,uBAAwBC,UAAW,eAC7D,CAAEF,GAAI,YAAaC,MAAO,8BAA+BC,UAAW,aACpE,CAAEF,GAAI,YAAaC,MAAO,wBAAyBC,UAAW,UAC9D,CAAEF,GAAI,YAAaC,MAAO,0BAA2BC,UAAW,WAW5DC,EAAUC,QAAK,EAAGC,YAAY,GAAIC,mBAAmBA,KAA6D,EAAGC,kBAAkBA,KAAqE,MAC1M,MAAAC,YAAEA,EAAAA,gBAAaC,GAAoBC,KACnCC,QAAEA,GAAYC,KACZC,eAAgBC,EAAYC,QAASC,GAAkBC,EAAkBT,MAAAA,OAAAA,EAAAA,EAAaU,UAExFC,GAAWX,MAAAA,OAAAA,EAAAA,EAAaY,eAAeZ,MAAAA,OAAAA,EAAAA,EAAaa,QAAS,MAcjEC,OAAAA,OAAC,OAAIjB,UAAW,GAAGkB,KAAkBlB,IAEnCmB,SAAA,GAACF,KAAA,MAAA,CAAIjB,UAAWkB,EACdC,SAAA,CAAAC,EAAAA,IAAC,KAAG,CAAApB,UAAWkB,EAAuBC,SAAO,cAC5CF,KAAA,MAAA,CAAIjB,UAAWkB,EACdC,SAAA,CAACC,EAAAA,IAAA,SAAA,CACCpB,UAAW,GAAGkB,KAA8BA,IAC5CG,QAlBmBC,IAC3BA,EAAEC,iBACMjB,GAAA,EAiBA,aAAW,WACXV,MAAM,WAENuB,eAACK,EAAS,CAAAC,KAAM,OAElBL,EAAAA,IAAC,UACCpB,UAAW,GAAGkB,KAA8BA,IAC5CG,QArBoBC,IAC5BA,EAAEC,iBACetB,GAAA,EAoBT,aAAW,WACXL,MAAM,WAENuB,eAACO,EAAA,CAASD,KAAM,OAEjBL,EAAAA,IAAA,SAAA,CACCpB,UAAWkB,EACXG,QAASnB,EACT,aAAW,gBACXN,MAAM,gBAENuB,WAAAC,IAACO,EAAgB,CAAAF,KAAM,eAM5BL,IAAA,MAAA,CAAIpB,UAAWkB,EACdC,SAAAC,EAAAA,IAAC,KAAG,CAAApB,UAAWkB,EACZxB,SAAekC,EAAAA,QACbR,MAAA,KAAA,CAAoBpB,UAAWkB,EAC9BC,SAAAF,EAAAA,KAAC,SAAO,CAAAjB,UAAWkB,EAA+BG,QAAS,OACzDF,SAAA,CAAAC,MAAC,OAAK,CAAApB,UAAWkB,EAA+BW,WAAQjC,cACvD,OAAK,CAAAI,UAAWkB,EAAmCW,WAAQhC,gBAHvDgC,EAAQlC,YAWvByB,IAAC,MAAI,CAAApB,UAAWkB,EACbd,WACEa,EAAAA,KAAA,MAAA,CAAIjB,UAAWkB,EACbf,SAAAA,EAAaU,MAAAA,OAAAA,EAAAA,EAAAA,UACZF,EACGS,EAAAA,IAAAU,EAAA,CAAQL,KAAK,QAAQM,IAAI,WACxBtB,QACD,MACC,CAAAuB,IAAKvB,EACLwB,IAAK,GAAGnB,cACRd,UAAWkB,UAGZ,MAAI,CAAAlB,UAAWkB,EACbJ,SAAAA,EAASoB,OAAO,GAAGC,sBAIvB,MAAI,CAAAnC,UAAWkB,EACbJ,SAAAA,EAASoB,OAAO,GAAGC,gBAGvBf,EAAAA,IAAA,OAAA,CAAKpB,UAAWkB,EAA2BJ,SAASA,OAGtDM,EAAAA,IAAA,OAAA,CAAKpB,UAAWkB,QAGvB,IAIJpB,EAAQiB,YAAc"}