import{t,l as e}from"./vendor-mdast-util-to-markdown-DDpRuohb.js";const s={exit:{taskListCheckValueChecked:i,taskListCheckValueUnchecked:i,paragraph:function(t){const e=this.stack[this.stack.length-2];if(e&&"listItem"===e.type&&"boolean"==typeof e.checked){const t=this.stack[this.stack.length-1],s=t.children[0];if(s&&"text"===s.type){const a=e.children;let i,n=-1;for(;++n<a.length;){const t=a[n];if("paragraph"===t.type){i=t;break}}i===t&&(s.value=s.value.slice(1),0===s.value.length?t.children.shift():t.position&&s.position&&"number"==typeof s.position.start.offset&&(s.position.start.column++,s.position.start.offset++,t.position.start=Object.assign({},s.position.start)))}}this.exit(t)}}},a={unsafe:[{atBreak:!0,character:"-",after:"[:|-]"}],handlers:{listItem:function(s,a,i,n){const c=s.children[0],o="boolean"==typeof s.checked&&c&&"paragraph"===c.type,r="["+(s.checked?"x":" ")+"] ",h=t(n);o&&h.move(r);let l=e(s,a,i,{...n,...h.current()});o&&(l=l.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/,(function(t){return t+r})));return l}}};function i(t){this.stack[this.stack.length-2].checked="taskListCheckValueChecked"===t.type}export{s as a,a as g};
//# sourceMappingURL=vendor-mdast-util-gfm-task-list-item-BpXst3II.js.map
